<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/stylesheets/rss.css" type="text/css"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>OnRails.org</title>
    <link>http://onrails.org/</link>
    <language>en-us</language>
    <ttl>40</ttl>
    <description>Ruby On Rails and related matters.</description>
    <item>
      <title>Flex On Rails talk in Denver - Thursday 22nd</title>
      <description>&lt;p&gt;Tony and I will be giving a talk on Flex on Rails at Derailed, the Denver Rails User Group. This will take place at &lt;a href="http://maps.google.com/maps?f=q&amp;#38;source=s_q&amp;#38;hl=en&amp;#38;geocode=&amp;#38;q=forest+room+denver&amp;#38;sll=37.0625,-95.677068&amp;#38;sspn=37.410045,79.365234&amp;#38;ie=UTF8&amp;#38;ll=39.759991,-105.011272&amp;#38;spn=0.035498,0.077505&amp;#38;t=h&amp;#38;z=14&amp;#38;iwloc=A"&gt;Forest Room 5&lt;/a&gt; in &lt;span class="caps"&gt;LODO&lt;/span&gt; at 6:30pm, this coming Thursday 22nd.&lt;/p&gt;


	&lt;p&gt;On the agenda.&lt;/p&gt;


	&lt;ul&gt;
	&lt;li&gt;6:30 &amp;#8211; 7:00: Meet and mingle&lt;/li&gt;
	&lt;/ul&gt;


	&lt;ul&gt;
	&lt;li&gt;7:00 &amp;#8211; 8:30: Flex on Rails  &amp;#8211; From the authors  Daniel Wanja and Tony Hillerson&lt;/li&gt;
	&lt;/ul&gt;


	&lt;ul&gt;
	&lt;li&gt;8:30 &amp;#8211; ...   : Book raffle and spirits.&lt;/li&gt;
	&lt;/ul&gt;


	&lt;p&gt;We will show highlights of each of the chapters and samples from the book.&lt;/p&gt;


	&lt;p&gt;I hope to see you there!
Daniel&lt;/p&gt;</description>
      <pubDate>Mon, 19 Jan 2009 23:40:21 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:398b9c0b-1ac2-427b-bcd5-abcf1ec46ad3</guid>
      <author>Daniel Wanja</author>
      <link>http://onrails.org/articles/2009/01/19/flex-on-rails-talk-in-denver-thursday-22nd</link>
      <category>Flex</category>
      <category>Ruby On Rails</category>
    </item>
    <item>
      <title>New Book: &amp;quot;Flex on Rails:  Building Rich Internet Applications with Adobe Flex 3 and Rails 2&amp;quot; </title>
      <description>&lt;div style="text-align:center;"&gt;&lt;img src="http://onrails.org/files/2009.01.02_CoverSmall.jpg" alt="2009.01.02 CoverSmall.jpg" border="0" width="500" height="333" /&gt;&lt;/div&gt;

	&lt;p&gt;Finally our book on using Flex with Rails is released and will appear over the next few days  in stores around the US and is available on &lt;a href="http://www.amazon.com/gp/product/0321543378?ie=UTF8&amp;#38;tag=flexonrails-20&amp;#38;linkCode=as2&amp;#38;camp=1789&amp;#38;creative=9325&amp;#38;creativeASIN=0321543378"&gt;Amazon&lt;/a&gt;.  I received a couple of copies from the publisher and it felt like an accomplishment to hold a physical version in my hands. I am sure my co-author, &lt;a href="http://thillerson.blogspot.com/"&gt;Tony&lt;/a&gt;, felt the same. Good job man!  With this release we are also launching &lt;a href="http://flexonrails.com"&gt;http://flexonrails.com&lt;/a&gt; where you can find all the source code of the book as well as other resources related to Flex and Rails, and our blog &lt;a href="http://blog.flexonrails.com"&gt;http://blog.flexonrails.com&lt;/a&gt; the blog for everything on Flex with Ruby On Rails&amp;#8230;&lt;/p&gt;


	&lt;p&gt;So here are the top 10 reasons why should you absolutely buy this book even if you are not a programmer&amp;#8230;.1) Your vision will improve  2) You&amp;#8217;ll run faster 3) Aging gets reverted 4)... Just kidding, the main reasons for us to write this book was that we really wanted to share many of the experiences and findings we had on using Flex and Rails on many projects, and we are proud of the outcome. It&amp;#8217;s a book by developers for developers. I&amp;#8217;ll be blogging in a next entry about the process of writing this book, and will create a screencast presenting the different applications we are creating in the book,  so stay tuned. When writing the book we assumed that you where a developer, either a Flex developer or a Rails developer that needed to  interact with the other side and wanted to add Rails or Flex to it&amp;#8217;s battery of languages. You will certainly find your way around even if you don&amp;#8217;t know Flex or Rails. In either case we didn&amp;#8217;t create a reference book so you won&amp;#8217;t find all the answers about each api that is available in both frameworks, but you will find everything you need to get started integrating Flex with Rails, and delve into wonderful world of Flex on Rails applications. For the example code we didn&amp;#8217;t want to build a large application and refine it over time through the chapters, so most chapter contain one or several working applications  used to highlight the major integration aspects explained in that chapter.  And Rails is just fantastic to create small applications on the fly, and Flex and Actionscript is pretty good for that too. So to give you a better overview of the content of this book I have attached the official description and the table of content. For more info come back to &lt;a href="http://blog.flexonrails.com"&gt;http://blog.flexonrails.com&lt;/a&gt; and &lt;a href="http://flexonrails.com"&gt;http://flexonrails.com&lt;/a&gt;. I hope you enjoy the book and the sample applications. So go check it out and let us know what you think.&lt;/p&gt;


	&lt;p&gt;Daniel.&lt;/p&gt;


&lt;h2&gt;Description&lt;/h2&gt;

	&lt;p&gt;“There’s no question you’re going to be a better Flex and Rails developer when you’re done reading this book.”
–From the Foreword by Matt Chotin, Senior Product Manager, Adobe Systems, Inc.&lt;/p&gt;


	&lt;p&gt; 
Adobe Flex enables the rapid development of rich and engaging user experiences. Ruby on Rails dramatically simplifies the development of database-driven web applications. Now there’s a book that shows how to use the newest versions of both frameworks together to create state-of-the-art Rich Internet Applications (RIAs).&lt;/p&gt;


	&lt;p&gt; 
Flex on Rails begins with the absolute essentials: setting up your environment for Flex and Rails, passing data with &lt;span class="caps"&gt;XML&lt;/span&gt;, and integrating Flex front-ends with Rails back-ends. Then, using practical, easy-to-understand code examples, the authors take you from the basics to advanced topics only discussed in this book. Techniques covered here include &lt;/p&gt;


	&lt;ul&gt;
	&lt;li&gt;Constructing sophisticated interfaces that can’t be created with &lt;span class="caps"&gt;AJAX&lt;/span&gt; alone&lt;/li&gt;
	&lt;/ul&gt;


	&lt;ul&gt;
	&lt;li&gt;Using RESTful services to expose applications for access via APIs&lt;/li&gt;
	&lt;/ul&gt;


	&lt;ul&gt;
	&lt;li&gt;Testing Flex and Rails together&lt;/li&gt;
	&lt;/ul&gt;


	&lt;ul&gt;
	&lt;li&gt;Using Flex Frameworks&lt;/li&gt;
	&lt;/ul&gt;


	&lt;ul&gt;
	&lt;li&gt;Getting Flex into your build/deploy process&lt;/li&gt;
	&lt;/ul&gt;


	&lt;ul&gt;
	&lt;li&gt;And more… &lt;/li&gt;
	&lt;/ul&gt;


	&lt;p&gt;The authors also offer practical introductions to powerful complementary technologies, such as RubyAMF and Juggernaut.
 &lt;/p&gt;


	&lt;p&gt;Written by developers with extensive experience using both frameworks, this book covers the new Adobe Flex 3 and Ruby on Rails 2 from the ground up. Even if you have minimal experience with Flex or Rails, you’ll learn all you need to know to use them to build exceptional production applications.&lt;/p&gt;


&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;pre&gt;
Foreword xv
Preface xvii
Acknowledgments from Tony Hillerson xxi
Acknowledgments from Daniel Wanja xxii
About the Authors xxiv
 
&amp;lt;strong&amp;gt;PART I: Flex and Rails Essentials&amp;lt;/strong&amp;gt;
 
Chapter 1: Developing with Flex and Rails 3
Installation: What You Need to Get Running 3
The Structure of a Flex and Rails Application 6
The Example Code 9
Compiling MXML 9
Running the Rails Server 9
Summary 9
 
Chapter 2: Passing Data with XML 11
XML in Rails 11
XML in Flex 14
Getting XML to Flex 17
Sending XML to Rails 19
Mapping Data Types 21
Error Handling 25
Summary 28
 
Chapter 3: Flex with RESTful Services 29
Creating the Stock Portfolio Rails Application 29
Accessing Our RESTful Application with Flex 39
Summary 48
 
Chapter 4: Using Fluint to Test a Flex with Rails Application 49
Using Fluint to Write Your Flex Unit Tests 50
The Basics of Testing a Flex Application 51
Testing a Cairngorm-Based Application 59
Using Fixtures 79
Summary 83
 
Chapter 5: Passing Data with AMF 85
What Is AMF? 85
Benefits of AMF 86
RubyAMF 87
A Simple RubyAMF Example 95
A RESTful RubyAMF Integration 101
Summary 103
 
Chapter 6: Debugging 105
Logging 106
Debuggers 110
Command Line Debuggers 117
Debugging Communication 127
Summary 129
 
Chapter 7: Data Visualization 131
Online Analytical Processing (OLAP) 133
Advanced DataGrid 144
Charting 147
Summary 152
 
Chapter 8: Flex MVC Frameworks 153
What Do We Mean by a Framework? 153
Roll Your Own 154
Cairngorm at a High Level 154
PureMVC at a High Level 159
Stuff 163
Summary 182
 
Chapter 9: Performance and Optimization 185
Flex Performance 185
Rails Performance 206
Summary 211
 
&amp;lt;strong&amp;gt;PART II: Cookbook Recipes&amp;lt;/strong&amp;gt;

Chapter 10: Source Control Flex and Rails Projects 215
Goal 215
Solution 215
Ignoring Files in Subversion 215
Git 217
Discussion 218
Summary 219
 
Chapter 11: Building Flex with Rake 221
Goal 221
Solution 221
Rake Is Your Friend 221
The Rakefile 222
Summary 225
 
Chapter 12: Deploying Flex and Rails Applications 227
Goal 227
Solution 227
Capistrano 227
Deploying with Capistrano 228
Summary 232
 
Chapter 13: Read the Source! 233
Goal 233
Solution 233
The Beauty of Open Source 233
The Rails Source 235
Flex Source 238
Generated Flex Source 240
Summary 243
 
Chapter 14: Using Observers to Clean Up Code 245
Goal 245
Solution 245
BindingUtils and ChangeWatchers in Flex 245
Taking Action on ActiveRecord Lifecycle Events 248
Summary 250
 
Chapter 15: Authenticating 251
Goal 251
Solution 251
Authenticating Users 251
Installing restful_authentication 251
Summary 257
 
Chapter 16: Reusing Commands with Prana Sequences 259
Goal 259
Solution 259
Sequences 259
Prana’s EventSequence 261
Summary 265
 
Chapter 17: Hierarchical Data with RubyAMF 267
Goal 267
Solution 267
Nested Sets 267
Summary 273
 
Chapter 18: Advanced Data Grid and Awesome Nested Set 275
Goal 275
Solution 275
Overview 275
Create the Rails Application and Database 275
Creating a Script to Load the Data 276
Flex Application 279
Adding CRUD 282
Summary 287
 
Chapter 19: Runtime Flex Configuration with Prana 289
Goal 289
Solution 289
IoC, Eh? 289
Summary 293
 
Chapter 20: Server Push with Juggernaut 295
Goal 295
Solution 295
Push Technology 295
Juggernaut 295
Creating the Rails Messaging Application 297
Creating the Flex Messaging Client Application 299
Summary 301
 
Chapter 21: Communicating between Flex and JavaScript 303
Goal 303
Solution 303
Communication between Flex and JavaScript 303
Security 303
Building the Samples 304
ExternalInterface 304
SWFObject and Prototype 305
ExternalInterface in Action 305
Flex-Ajax Bridge in Action 309
Summary 311
 
Chapter 22: File Upload 313
Goal 313
Solution 313
File Upload 313
Creating the Rails Application and Installing attachment_fu 315
Using Flex’s FileReference Class to Upload
One or Several Files 316
Using Flex URLLoader Class to Upload a PNG File 318
Summary 320
 
Index 321
&lt;/pre&gt;</description>
      <pubDate>Sat, 03 Jan 2009 04:15:23 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:1f89e30c-cf74-4c5d-9874-de4e1d53da11</guid>
      <author>Daniel Wanja</author>
      <link>http://onrails.org/articles/2009/01/03/new-book-flex-on-rails-building-rich-internet-applications-with-adobe-flex-3-and-rails-2</link>
      <category>Flex</category>
      <category>Ruby On Rails</category>
    </item>
    <item>
      <title>The future of Rails: Rails 3.0</title>
      <description>&lt;p&gt;The Merb team joins force with the Rails core team  to work on Rails 3.0 and brings many of the modularity and performance concepts from Merb to Rails. At first I thought &amp;#8220;Oh, no&amp;#8221;, that&amp;#8217;s gonna be a mess. But after reading several of the announcements I can see the benefits of the effort and this will make Rails more simple, more modular, more robust, better defined, and certainly faster. Bringing two different teams together is very difficult but the fact that both team are complementary and look for excellence in their work and managed to come up with a great vision of the future of Rails, got me excited about the future of Rails. They gonna make it happen. You can read more about here:&lt;/p&gt;


	&lt;ul&gt;
	&lt;li&gt;&lt;a href="http://weblog.rubyonrails.org/2008/12/23/merb-gets-merged-into-rails-3"&gt;http://weblog.rubyonrails.org/2008/12/23/merb-gets-merged-into-rails-3&lt;/a&gt;&lt;/li&gt;
		&lt;li&gt;&lt;a href="http://rubyonrails.org/merb"&gt;http://rubyonrails.org/merb&lt;/a&gt;&lt;/li&gt;
		&lt;li&gt;&lt;a href="http://yehudakatz.com/2008/12/23/rails-and-merb-merge/"&gt;http://yehudakatz.com/2008/12/23/rails-and-merb-merge/&lt;/a&gt;&lt;/li&gt;
		&lt;li&gt;&lt;a href="http://brainspl.at/articles/2008/12/23/merb-is-rail"&gt;http://brainspl.at/articles/2008/12/23/merb-is-rail&lt;/a&gt;s&lt;/li&gt;
		&lt;li&gt;&lt;a href="http://merbist.com/2008/12/23/rails-and-merb-merge/"&gt;http://merbist.com/2008/12/23/rails-and-merb-merge/&lt;/a&gt;&lt;/li&gt;
	&lt;/ul&gt;


	&lt;p&gt;Merry Christmas/Hanukkah/Hollidays!&lt;/p&gt;


	&lt;p&gt;Daniel.&lt;/p&gt;</description>
      <pubDate>Wed, 24 Dec 2008 15:14:53 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:fa7019f3-c38f-4753-b043-e877d06d39b4</guid>
      <author>Daniel Wanja</author>
      <link>http://onrails.org/articles/2008/12/24/the-future-of-rails-rails-3-0</link>
      <category>Ruby On Rails</category>
    </item>
    <item>
      <title>Flex Job: Full time Flex developer  in Denver at Videopros.com</title>
      <description>&lt;p&gt;Solomon, who also writes on this blog, is currently doing Ruby on Rails work for &lt;a href=""&gt;videopros.com&lt;/a&gt; and they are looking to hire a Flex developer to complement their small development team. Here are the details&amp;#8230;&lt;/p&gt;


&lt;div style="text-align:center;"&gt;&lt;img src="http://onrails.org/files/VP_Logo_300x100.jpg" alt="VP_Logo_300x100.jpg" border="0" width="300" height="100" /&gt;&lt;/div&gt;

	&lt;p&gt;We seek a Flex on Rails Kingpin to lead our development team. This is for a full-time or contract-to-hire position. Private consultants should not apply. Depending on skill level and commitment an equity stake is available.&lt;/p&gt;


	&lt;p&gt;Compensation&lt;/p&gt;


	&lt;ul&gt;
	&lt;li&gt;70-100K&lt;/li&gt;
		&lt;li&gt;Potential Equity&lt;/li&gt;
		&lt;li&gt;Potential Profit Sharing&lt;/li&gt;
	&lt;/ul&gt;


	&lt;p&gt;Skills and Experience&lt;/p&gt;


	&lt;ul&gt;
	&lt;li&gt;Ruby on Rails | 2.5 Years minimum&lt;/li&gt;
		&lt;li&gt;Flex | 1 Year minimum&lt;/li&gt;
		&lt;li&gt;Web Services&lt;/li&gt;
		&lt;li&gt;Experience as the lead developer for a commercial project.&lt;/li&gt;
		&lt;li&gt;Agile development&lt;/li&gt;
		&lt;li&gt;Subversion (GIT)&lt;/li&gt;
		&lt;li&gt;Linux&lt;/li&gt;
		&lt;li&gt;MySQL&lt;/li&gt;
		&lt;li&gt;&lt;span class="caps"&gt;XML&lt;/span&gt;&lt;/li&gt;
	&lt;/ul&gt;


	&lt;p&gt;Benefits&lt;/p&gt;


	&lt;ul&gt;
	&lt;li&gt;Competitive Salary&lt;/li&gt;
		&lt;li&gt;Health Insurance&lt;/li&gt;
		&lt;li&gt;Long Term Disability Insurance&lt;/li&gt;
	&lt;/ul&gt;


	&lt;p&gt;About Us – The VideoPros Dojo&lt;/p&gt;


	&lt;p&gt;Dojo means “place of the Way.” Much like a martial arts practice hall, the &lt;span class="caps"&gt;WAY&lt;/span&gt; we operate at VideoPros is a pursuit for mastery in the face of adversity and challenge. The true challenge is not between people and external things – but within ourselves.  
Working at VideoPros means going within yourself and seeing the work you do as a reflection of who you are on the inside. It’s more than “work” or “my job.” We are a place you go to practice being the best you can be – every day.&lt;/p&gt;


	&lt;p&gt;Apply&lt;/p&gt;


	&lt;p&gt;VideoPros is motivated to fill this position quickly. To apply, email your resume and one reason why you want to join us at the Dojo to:
Careers{at}VideoPros{dot}com&lt;/p&gt;</description>
      <pubDate>Tue, 23 Dec 2008 15:00:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:54f4d0f5-c141-4e02-83cf-d4ad3c3c8462</guid>
      <author>Daniel Wanja</author>
      <link>http://onrails.org/articles/2008/12/23/flex-job-full-time-flex-developer-in-denver-at-videopros-com</link>
      <category>Flex</category>
      <category>Ruby On Rails</category>
    </item>
    <item>
      <title>Screencast: Using Webby to create a static website.</title>
      <description>I am currently using &lt;a href="http://webby.rubyforge.org/"&gt;Webby&lt;/a&gt;  to generate a static website. I think it's a pretty cool tool, so I made a small video to show how to get started with it and explain what it does. Check it out:

&lt;object width="400" height="300"&gt;&lt;param name="allowfullscreen" value="true" /&gt;&lt;param name="allowscriptaccess" value="always" /&gt;&lt;param name="movie" value="http://vimeo.com/moogaloop.swf?clip_id=2492090&amp;amp;server=vimeo.com&amp;amp;show_title=1&amp;amp;show_byline=1&amp;amp;show_portrait=0&amp;amp;color=&amp;amp;fullscreen=1" /&gt;&lt;embed src="http://vimeo.com/moogaloop.swf?clip_id=2492090&amp;amp;server=vimeo.com&amp;amp;show_title=1&amp;amp;show_byline=1&amp;amp;show_portrait=0&amp;amp;color=&amp;amp;fullscreen=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="400" height="300"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;br /&gt;&lt;a href="http://vimeo.com/2492090"&gt;Screencast: Using Webby to create a static website&lt;/a&gt; from &lt;a href="http://vimeo.com/user507500"&gt;daniel wanja&lt;/a&gt;.

Enjoy!
Daniel.</description>
      <pubDate>Thu, 11 Dec 2008 07:02:46 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:796b23fc-4138-4791-9418-4c8a92182be9</guid>
      <author>Daniel Wanja</author>
      <link>http://onrails.org/articles/2008/12/11/screencast-using-webby-to-create-a-static-website</link>
      <category>Flex</category>
      <category>Ruby On Rails</category>
    </item>
    <item>
      <title>RubyConf 2008 videos available at confreaks.com - Thank you!</title>
      <description>&lt;p&gt;I couldn&amp;#8217;t make it this year to RubyConf so I am really thankful to see that most of the presentations are online at &lt;a href="http://rubyconf2008.confreaks.com/"&gt;confreaks&lt;/a&gt;. It&amp;#8217;s just awesome that these videos are made available online and so quickly after the conference and for free. It&amp;#8217;s a real tribute to the Ruby community and it&amp;#8217;s open and sharing spirit. Thanks guys! My understanding is that the &lt;a href="http://rubyconf.org/"&gt;rubyconf&lt;/a&gt; pays &lt;a href="http://www.confreaks.com/"&gt;Confreaks&lt;/a&gt; to take, processes and distribute these videos.  Let me know if the arrangement is different, to give credit where credit is due. Thanks RubyConf and the presenters, and good job Confreaks.&lt;/p&gt;


	&lt;p&gt;Here are the videos I selected for my commute this week.&lt;/p&gt;


	&lt;ul&gt;
	&lt;li&gt;&lt;a href="http://rubyconf2008.confreaks.com/keynote.html"&gt;Keynote&lt;/a&gt; &amp;#8211; Dave Thomas&lt;/li&gt;
		&lt;li&gt;&lt;a href="http://rubyconf2008.confreaks.com/questions-and-answers.html"&gt;Questions &amp;#38; Answers&lt;/a&gt; &amp;#8211; Yukihiro &amp;#8216;Matz&amp;#8217; Matsumoto&lt;/li&gt;
	&lt;/ul&gt;


	&lt;ul&gt;
	&lt;li&gt;&lt;a href="http://rubyconf2008.confreaks.com/introducing-red-sun-ruby-to-flash.html"&gt;Introducing Red Sun &amp;#8211; Ruby to Flash&lt;/a&gt; &amp;#8211; Jonathan Branam &lt;/li&gt;
		&lt;li&gt;&lt;a href="http://rubyconf2008.confreaks.com/macruby-ruby-for-your-mac.html"&gt;MacRuby: Ruby for your Mac&lt;/a&gt; &amp;#8211; Laurent Sansonetti &lt;/li&gt;
		&lt;li&gt;&lt;a href="http://rubyconf2008.confreaks.com/os-x-application-development-with-hotcocoa.html"&gt;&lt;span class="caps"&gt;OS X&lt;/span&gt; Application Development with HotCocoa&lt;/a&gt; &amp;#8211; Rich Kilmer&lt;/li&gt;
		&lt;li&gt;&lt;a href="http://rubyconf2008.confreaks.com/hacking-with-ruby2ruby.html"&gt;Hacking with ruby2ruby&lt;/a&gt; &amp;#8211; Marc Chung &lt;/li&gt;
		&lt;li&gt;&lt;a href="http://rubyconf2008.confreaks.com/using-git-in-ruby-applications.html"&gt;Using Git in Ruby Applications&lt;/a&gt; &amp;#8211; Scott Chacon&lt;/li&gt;
	&lt;/ul&gt;


	&lt;ul&gt;
	&lt;li&gt;&lt;a href="http://rubyconf2008.confreaks.com/adrenaline-driven-development.html"&gt;Adrenaline-Driven Development&lt;/a&gt; &amp;#8211; Bruce Williams &lt;/li&gt;
		&lt;li&gt;&lt;a href="http://rubyconf2008.confreaks.com/fear-of-programming.html"&gt;Fear of Programming&lt;/a&gt; &amp;#8211; Nahaniel Talbott &lt;/li&gt;
		&lt;li&gt;&lt;a href="http://rubyconf2008.confreaks.com/recovering-from-enterprise.html"&gt;Recovering from Enterprise&lt;/a&gt; &amp;#8211; Jamis Buck&lt;/li&gt;
	&lt;/ul&gt;


	&lt;p&gt;View the full list of videos available &lt;a href="http://rubyconf2008.confreaks.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;


	&lt;p&gt;You may wonder why I would watch videos during my commute. Effectively I drive 40 minutes each way to my customers (happen to be both near enough for me to drive and not tele-commute) and this gives me a chance to catch up on many of the excellent screencast and podcast out there. Now when one screencast really sticks out, I watch it again at night&amp;#8230;without driving ;-).&lt;/p&gt;


	&lt;p&gt;This said I converted the confreaks small videos format (640&amp;#215;240) to the iPhone format using Quicktime pro, but I only get the sound&amp;#8230;which is fine for my commute. Any hint on how I can convert them to also get the video going would be appreciated?&lt;/p&gt;


	&lt;p&gt;Enjoy!
Daniel&lt;/p&gt;</description>
      <pubDate>Mon, 01 Dec 2008 14:57:21 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:56f4debe-5417-476c-b6e8-8a9f7dce26ea</guid>
      <author>Daniel Wanja</author>
      <link>http://onrails.org/articles/2008/12/01/rubyconf-2008-videos-available-at-confreaks-com-thank-you</link>
      <category>Ruby</category>
    </item>
    <item>
      <title>Moving &amp;quot;private&amp;quot; and non-Rails related entries to &amp;lt;a href=&amp;quot;http:blog.wanja.com&amp;quot;&amp;gt;http:blog.wanja.com&amp;lt;/a&amp;gt;</title>
      <description>I received a couple of comments and emails about my non-Rails related entries, more specifically about the iPhone related entries. So from now on I will move these type of entries to my new "private" blog &lt;a href="http://blog.wanja.com"&gt;http://blog.wanja.com&lt;/a&gt;. As I am starting the development of a new iPhone app and will report about it over there. I am still doing quite some Rails related work and will keep posting about it here (http://onrails.org). I am also experimenting with MacRuby, which is so cool, and will report about it here unless it's specific to iPhone development. I short if you are only interested in Rails or Ruby keep ready this blog, if you are interested in the other "stuff" I play with, such a iPhone, games, Wii, PS3, programming the Wii Remote, and any other geek stuff, check out &lt;a href="http://blog.wanja.com"&gt;http://blog.wanja.com&lt;/a&gt;</description>
      <pubDate>Mon, 17 Nov 2008 04:59:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:a6ffa7b7-d39c-4423-ad13-39ddaaec5b73</guid>
      <author>Daniel Wanja</author>
      <link>http://onrails.org/articles/2008/11/17/moving-private-and-non-rails-related-entries-to-http-blog-wanja-com</link>
      <category>Ruby On Rails</category>
      <category>Ruby</category>
    </item>
    <item>
      <title>Rails Deployment On Heroku Using Git</title>
      <description>I was checking out different sites to deploy the Rails apps we presented with Tony at RailsConf for our Powering AIR with Rails tutorial and the easiest and fastest way is still &lt;a href="http://heroku.com"&gt;heroku.com&lt;/a&gt;. So for the 3rd app, &lt;a href="http://www.flexonrails.com/air_apps.html"&gt;TwitterFriends&lt;/a&gt;, I make this little video showing how I deployed the Rails to heroku using the heroku gem and git:

&lt;object width="400" height="300"&gt;&lt;param name="allowfullscreen" value="true" /&gt;&lt;param name="allowscriptaccess" value="always" /&gt;&lt;param name="movie" value="http://vimeo.com/moogaloop.swf?clip_id=2184908&amp;amp;server=vimeo.com&amp;amp;show_title=1&amp;amp;show_byline=1&amp;amp;show_portrait=0&amp;amp;color=&amp;amp;fullscreen=1" /&gt;&lt;embed src="http://vimeo.com/moogaloop.swf?clip_id=2184908&amp;amp;server=vimeo.com&amp;amp;show_title=1&amp;amp;show_byline=1&amp;amp;show_portrait=0&amp;amp;color=&amp;amp;fullscreen=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="400" height="300"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;br /&gt;&lt;a href="http://vimeo.com/2184908"&gt;Rails Deployment On Heroku Using Git&lt;/a&gt; from &lt;a href="http://vimeo.com/user507500"&gt;daniel wanja&lt;/a&gt; on &lt;a href="http://vimeo.com"&gt;Vimeo&lt;/a&gt;.

Note flexonrails.com is still "under constructions" and I am adding stuff for the launch of the book...which is now set to shortly after December 19th. Yea!</description>
      <pubDate>Sat, 08 Nov 2008 05:08:03 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:e7f763a2-e9bb-4212-b29e-a3d44ca3c12f</guid>
      <author>Daniel Wanja</author>
      <link>http://onrails.org/articles/2008/11/08/rails-deployment-on-heroku-using-git</link>
    </item>
    <item>
      <title>Determine Test Coverage on your Flex Projects with Flexcover.</title>
      <description>&lt;p&gt;This week I was playing with &lt;a href="http://code.google.com/p/flexcover/"&gt;Flexcover&lt;/a&gt; a test coverage tool for Flex&amp;#8230;and it&amp;#8217;s really cool. If you you to determine how much test coverage you have in your Flex application then check out this screencast&amp;#8230;maybe skip to the end where you will see flexcover in action. The first part is how to assemble the Flexcover &lt;span class="caps"&gt;SDK&lt;/span&gt; to use with FlexBuilder. Again this is a non-scripted screencast with several &amp;#8220;oops&amp;#8221; and a big Swiss-French accent which I hope you will find useful.&lt;/p&gt;


	&lt;p&gt;The key here is if you do Flex, write unit tests and use this test coverage tool.&lt;/p&gt;


&lt;object width="400" height="300"&gt;&lt;param name="allowfullscreen" value="true" /&gt;&lt;param name="allowscriptaccess" value="always" /&gt;&lt;param name="movie" value="http://vimeo.com/moogaloop.swf?clip_id=2185199&amp;amp;server=vimeo.com&amp;amp;show_title=1&amp;amp;show_byline=1&amp;amp;show_portrait=0&amp;amp;color=&amp;amp;fullscreen=1" /&gt;&lt;embed src="http://vimeo.com/moogaloop.swf?clip_id=2185199&amp;amp;server=vimeo.com&amp;amp;show_title=1&amp;amp;show_byline=1&amp;amp;show_portrait=0&amp;amp;color=&amp;amp;fullscreen=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="400" height="300"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;br /&gt;&lt;a href="http://vimeo.com/2185199"&gt;Setting up Flexcover as test coverage tool for your Flex applications.&lt;/a&gt; from &lt;a href="http://vimeo.com/user507500"&gt;daniel wanja&lt;/a&gt; on &lt;a href="http://vimeo.com"&gt;Vimeo&lt;/a&gt;.

	&lt;p&gt;Enjoy,
Daniel.&lt;/p&gt;</description>
      <pubDate>Fri, 24 Oct 2008 06:06:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:63b1b9aa-0dbf-473f-a888-3eb821f6b2c9</guid>
      <author>Daniel Wanja</author>
      <link>http://onrails.org/articles/2008/10/24/determine-test-coverage-on-your-flex-projects-with-flexcover</link>
      <category>Flex</category>
    </item>
    <item>
      <title>Flex test coverage?</title>
      <description>&lt;p&gt;It&amp;#8217;s hard to imaging writing a Rails application without using &lt;a href="http://eigenclass.org/hiki.rb?rcov"&gt;rcov&lt;/a&gt; and get that fuzzy feeling you tested most if not all you application. Or at least get a good idea of what&amp;#8217;s tested. I &lt;a href="http://weblogs.macromedia.com/swebster/archives/2007/11/unit_testing_an.html"&gt;heard&lt;/a&gt; way back that Alex Uhlmann was working on some test coverage tools, but I didn&amp;#8217;t see anything coming out from Adobe. I haven&amp;#8217;t used test coverage for my Flex apps, but want to start. Any body has any good hints, stories, frameworks they use for test unit coverage in Flex? A quick google search pointed me to this &lt;a href="http://www.joeberkovitz.com/blog/2008/04/12/flex-air-code-coverage-announce/"&gt;article&lt;/a&gt; describing &lt;a href="http://code.google.com/p/flexcover/"&gt;Flexcover&lt;/a&gt;, just what I was looking for. Please share your experience.&lt;/p&gt;


	&lt;p&gt;Thanks!
Daniel.&lt;/p&gt;


	&lt;p&gt;&lt;span class="caps"&gt;UPDATE&lt;/span&gt;: I am playing with FlexCover and just saw this &amp;#8220;Flexcover is a joint effort with Alex Uhlmann of Adobe Consulting, who has been working on a related set of ideas.&amp;#8221;. So I guess this is really Alex&amp;#8217;s work that Steven was referring to which is now open source under the &lt;span class="caps"&gt;MIT&lt;/span&gt; license. Cool!&lt;/p&gt;</description>
      <pubDate>Sat, 11 Oct 2008 02:36:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:42f7436f-e267-4dbf-9b4d-8650d7dbfc9f</guid>
      <author>Daniel Wanja</author>
      <link>http://onrails.org/articles/2008/10/11/flex-test-coverage</link>
      <category>Flex</category>
      <category>Ruby On Rails</category>
    </item>
  </channel>
</rss>
