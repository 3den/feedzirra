<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Polishing Ruby</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/" />
    <link rel="self" type="application/atom+xml" href="http://blog.zenspider.com/atom.xml" />
    <id>tag:blog.zenspider.com,2008-04-09://2</id>
    <updated>2009-01-22T20:05:56Z</updated>
    <subtitle>Musings on Ruby and the Ruby Community...</subtitle>
    <generator uri="http://www.sixapart.com/movabletype/">Movable Type Open Source 4.1</generator>

<entry>
    <title>Reservoir Nerds</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/reservoir-nerds.html" />
    <id>tag:blog.zenspider.com,2009://2.412</id>

    <published>2009-01-22T20:05:56Z</published>
    <updated>2009-01-22T20:05:56Z</updated>

    <summary> Mr. Black, Mr. White, Mr. Pink, and Mr. Blonde are immediately available for hire. Package deal. 49 years of programming experience, 28 in Ruby. You know their names. Get in touch....</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="Planning" scheme="http://www.sixapart.com/ns/types#category" />
    
        <category term="Rails" scheme="http://www.sixapart.com/ns/types#category" />
    
        <category term="Ruby" scheme="http://www.sixapart.com/ns/types#category" />
    
        <category term="RubyHitSquad" scheme="http://www.sixapart.com/ns/types#category" />
    
        <category term="Thoughts / Misc" scheme="http://www.sixapart.com/ns/types#category" />
    
        <category term="Toys" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<p><img src="http://blog.zenspider.com/ReservoirNerds.png" alt="ReservoirNerds.png" border="0" width="340" height="360" /></p>

<p>Mr. Black, Mr. White, Mr. Pink, and Mr. Blonde are immediately available for hire. Package deal. 49 years of programming experience, 28 in Ruby. You know their names. Get in touch.</p>
]]>
        

    </content>
</entry>

<entry>
    <title>flayjs... flayc...</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/flayjs-flayc.html" />
    <id>tag:blog.zenspider.com,2009://2.411</id>

    <published>2009-01-22T11:41:22Z</published>
    <updated>2009-01-22T11:41:22Z</updated>

    <summary>70 and 61 lines of code respectively... anyone know of a java parser in ruby?...</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="flay" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<p>70 and 61 lines of code respectively...</p>

<p>anyone know of a java parser in ruby?</p>
]]>
        

    </content>
</entry>

<entry>
    <title>wilson version 1.0.0 has been released!</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/wilson-version-100-has-been-re.html" />
    <id>tag:blog.zenspider.com,2009://2.410</id>

    <published>2009-01-21T00:55:42Z</published>
    <updated>2009-01-21T11:15:57Z</updated>

    <summary>Wilson is a pure ruby x86 assembler. No, really. Worst Idea Evar. Why &quot;wilson&quot;? I wanted to name it &quot;metal&quot;, but there is an existing project with that name... So I&apos;m naming it after Wilson Bilkovich, who is about as...</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="wilson" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<p>Wilson is a pure ruby x86 assembler. No, really. Worst Idea Evar.</p>

<p>Why "wilson"? I wanted to name it "metal", but there is an existing
project with that name... So I'm naming it after Wilson Bilkovich, who
is about as metal as you can get (and it is easier to spell than
"bilkovich", even tho that sounds more metal).</p>

<p>Changes:</p>

<h3>1.0.0 / 2009-01-20</h3>

<ul>
<li><p>1 major enhancement</p>

<ul>
<li>Birfday!</li>
</ul></li>
<li><p><a href="http://rubyforge.org/projects/seattlerb">http://rubyforge.org/projects/seattlerb</a></p></li>
</ul>
]]>
        

    </content>
</entry>

<entry>
    <title>flay version 1.1.0 has been released!</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/flay-version-110-has-been-rele.html" />
    <id>tag:blog.zenspider.com,2009://2.409</id>

    <published>2009-01-21T00:16:04Z</published>
    <updated>2009-01-21T00:16:04Z</updated>

    <summary>Flay analyzes ruby code for structural similarities. Differences in literal values, variable, class, method names, whitespace, programming style, braces vs do/end, etc are all ignored. Making this totally rad. Changes: 1.1.0 / 2009-01-20 8 minor enhancement: Added -v verbose mode...</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="flay" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<p>Flay analyzes ruby code for structural similarities. Differences in
literal values, variable, class, method names, whitespace, programming
style, braces vs do/end, etc are all ignored. Making this totally rad.</p>

<p>Changes:</p>

<h3>1.1.0 / 2009-01-20</h3>

<ul>
<li><p>8 minor enhancement:</p>

<ul>
<li>Added -v verbose mode to print out N-way diff of the detected code.</li>
<li>Added identical node scoring and reporting.</li>
<li>Added the start of copy/paste+edit detection, not even close yet</li>
<li>Added more tests.</li>
<li>Added rcov tasks</li>
<li>Added the start of copy/paste+edit detection</li>
<li>Clarified output a bit</li>
<li>Refactored process_sexps to make doing other languages/systems easier.</li>
</ul></li>
<li><p><a href="http://ruby.sadi.st/">http://ruby.sadi.st/</a></p></li>
<li><a href="http://rubyforge.org/projects/seattlerb">http://rubyforge.org/projects/seattlerb</a></li>
</ul>
]]>
        

    </content>
</entry>

<entry>
    <title>flog version 2.0.0 has been released!</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/flog-version-200-has-been-rele.html" />
    <id>tag:blog.zenspider.com,2009://2.408</id>

    <published>2009-01-21T00:08:25Z</published>
    <updated>2009-01-21T00:08:25Z</updated>

    <summary>Flog reports the most tortured code in an easy to read pain report. The higher the score, the more pain the code is in. Changes: 2.0.0 / 2009-01-20 1 major enhancement: Pulled in and merged Rick Bradley&apos;s awesome flame project...</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="flog" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<p>Flog reports the most tortured code in an easy to read pain
report. The higher the score, the more pain the code is in.</p>

<p>Changes:</p>

<h3>2.0.0 / 2009-01-20</h3>

<ul>
<li><p>1 major enhancement:</p>

<ul>
<li>Pulled in and merged Rick Bradley's awesome flame project into flog.</li>
</ul></li>
<li><p>1 minor enhancement:</p>

<ul>
<li>Added gauntlet plugin</li>
</ul></li>
<li><p>1 bug fix:</p>

<ul>
<li>"hugh sasse".split(/\s/).map{|x|x.capitalize}.join(" ") # :-)</li>
</ul></li>
<li><p><a href="http://ruby.sadi.st/">http://ruby.sadi.st/</a></p></li>
<li><a href="http://rubyforge.org/projects/seattlerb">http://rubyforge.org/projects/seattlerb</a></li>
</ul>
]]>
        

    </content>
</entry>

<entry>
    <title>ruby2ruby version 1.2.2 has been released!</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/ruby2ruby-version-122-has-been.html" />
    <id>tag:blog.zenspider.com,2009://2.407</id>

    <published>2009-01-20T23:54:12Z</published>
    <updated>2009-01-20T23:54:12Z</updated>

    <summary>ruby2ruby provides a means of generating pure ruby code easily from ParseTree&apos;s Sexps. This makes making dynamic language processors much easier in ruby than ever before. Changes: 1.2.2 / 2009-01-20 3 minor enhancements: Added -s to display sexp before printing...</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="ruby2ruby" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<p>ruby2ruby provides a means of generating pure ruby code easily from
ParseTree's Sexps. This makes making dynamic language processors much
easier in ruby than ever before.</p>

<p>Changes:</p>

<h3>1.2.2 / 2009-01-20</h3>

<ul>
<li><p>3 minor enhancements:</p>

<ul>
<li>Added -s to display sexp before printing r2r</li>
<li>Added a bunch of backslash and masgn tests.</li>
<li>Refactored tests.</li>
</ul></li>
<li><p>4 bug fixes:</p>

<ul>
<li>Fixed iters to deal with empty bodies.</li>
<li>Fixed process_call for a number of cases incl [], []=, and args processing.</li>
<li>Fixed process_hash to always generate braces if in arglist.</li>
<li>Switched process_alias to producing alias again, needed for globals.</li>
</ul></li>
<li><p><a href="http://seattlerb.rubyforge.org/">http://seattlerb.rubyforge.org/</a></p></li>
<li><a href="http://rubyforge.org/projects/seattlerb">http://rubyforge.org/projects/seattlerb</a></li>
</ul>
]]>
        

    </content>
</entry>

<entry>
    <title>ruby_parser version 2.0.2 has been released!</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/ruby-parser-version-202-has-be.html" />
    <id>tag:blog.zenspider.com,2009://2.406</id>

    <published>2009-01-20T23:48:52Z</published>
    <updated>2009-01-20T23:48:52Z</updated>

    <summary>ruby_parser (RP) is a ruby parser written in pure ruby (utilizing racc--which does by default use a C extension). RP&apos;s output is the same as ParseTree&apos;s output: s-expressions using ruby&apos;s arrays and base types. As an example: def conditional1(arg1) if...</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="ruby_parser" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<p>ruby_parser (RP) is a ruby parser written in pure ruby (utilizing
racc--which does by default use a C extension). RP's output is
the same as ParseTree's output: s-expressions using ruby's arrays and
base types.</p>

<p>As an example:</p>

<p>def conditional1(arg1)
    if arg1 == 0 then
      return 1
    end
    return 0
  end</p>

<p>becomes:</p>

<p>s(:defn, :conditional1,
   s(:args, :arg1),
   s(:scope,
    s(:block,
     s(:if,
      s(:call, s(:lvar, :arg1), :==, s(:arglist, s(:lit, 0))),
      s(:return, s(:lit, 1)),
      nil),
     s(:return, s(:lit, 0)))))</p>

<p>Changes:</p>

<h3>2.0.2 / 2009-01-20</h3>

<ul>
<li><p>2 minor enhancements:</p>

<ul>
<li>Added gauntlet_rubyparser plugin. YAY for easy massive bug-hunting.</li>
<li>Promoted Sexp's file/line/comments to sexp_processor.</li>
</ul></li>
<li><p>4 bug fixes:</p>

<ul>
<li>Fixed and improved the readme</li>
<li>Fixed lexing heredoc newlines.</li>
<li>Fixed line numbers on defns.</li>
<li>Fixed rdoc generation bug pointed out by hugh sasse (who rocks)</li>
</ul></li>
<li><p><a href="http://parsetree.rubyforge.org/">http://parsetree.rubyforge.org/</a></p></li>
</ul>
]]>
        

    </content>
</entry>

<entry>
    <title>sexp_processor version 3.0.1 has been released!</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/sexp-processor-version-301-has.html" />
    <id>tag:blog.zenspider.com,2009://2.405</id>

    <published>2009-01-20T23:45:26Z</published>
    <updated>2009-01-20T23:45:26Z</updated>

    <summary>sexp_processor branches from ParseTree bringing all the generic sexp processing tools with it. Sexp, SexpProcessor, Environment, etc... all for your language processing pleasure. Changes: 3.0.1 / 2009-01-20 3 minor enhancements: Filled out README Promoted file/line/comments from ruby_parser. Added sexptype to...</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="sexp_processor" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<p>sexp_processor branches from ParseTree bringing all the generic sexp
processing tools with it. Sexp, SexpProcessor, Environment, etc... all
for your language processing pleasure.</p>

<p>Changes:</p>

<h3>3.0.1 / 2009-01-20</h3>

<ul>
<li><p>3 minor enhancements:</p>

<ul>
<li>Filled out README</li>
<li>Promoted file/line/comments from ruby_parser.</li>
<li>Added sexp<em>type to compliment sexp</em>body.</li>
</ul></li>
<li><p><a href="http://rubyforge.org/projects/parsetree/">http://rubyforge.org/projects/parsetree/</a></p></li>
</ul>
]]>
        

    </content>
</entry>

<entry>
    <title>ParseTree version 3.0.3 has been released!</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/parsetree-version-303-has-been.html" />
    <id>tag:blog.zenspider.com,2009://2.404</id>

    <published>2009-01-20T23:37:36Z</published>
    <updated>2009-01-20T23:37:36Z</updated>

    <summary>ParseTree is a C extension (using RubyInline) that extracts the parse tree for an entire class or a specific method and returns it as a s-expression (aka sexp) using ruby&apos;s arrays, strings, symbols, and integers. As an example: def conditional1(arg1)...</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="ParseTree" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<p>ParseTree is a C extension (using RubyInline) that extracts the parse
tree for an entire class or a specific method and returns it as a
s-expression (aka sexp) using ruby's arrays, strings, symbols, and
integers.</p>

<p>As an example:</p>

<p>def conditional1(arg1)
    if arg1 == 0 then
      return 1
    end
    return 0
  end</p>

<p>becomes:</p>

<p>[:defn,
    :conditional1,
    [:scope,
     [:block,
      [:args, :arg1],
      [:if,
       [:call, [:lvar, :arg1], :==, [:array, [:lit, 0]]],
       [:return, [:lit, 1]],
       nil],
      [:return, [:lit, 0]]]]]</p>

<p>Changes:</p>

<h3>3.0.3 / 2009-01-20</h3>

<ul>
<li><p>4 bug fixes:</p>

<ul>
<li>Added gauntlet_parsetree.rb. Bug finding/fixing much faster &amp; easier now.</li>
<li>Fixed alias tests for r2r. Added masgn and heredoc tests.</li>
<li>Fixed conflicting flags (-u vs -r).</li>
<li>Unwrap RHS from array IF it is only a splat node.</li>
</ul></li>
<li><p><a href="http://rubyforge.org/projects/parsetree/">http://rubyforge.org/projects/parsetree/</a></p></li>
<li><a href="http://www.zenspider.com/ZSS/Products/ParseTree/">http://www.zenspider.com/ZSS/Products/ParseTree/</a></li>
<li><a href="&#x6D;&#x61;&#x69;&#x6C;&#x74;&#x6F;:&#x72;y&#97;&#x6E;&#x64;&#45;&#x72;&#117;&#98;&#121;&#64;&#122;&#x65;&#110;s&#112;&#105;&#x64;&#x65;&#x72;&#x2E;&#99;&#x6F;&#x6D;">&#x72;y&#97;&#x6E;&#x64;&#45;&#x72;&#117;&#98;&#121;&#64;&#122;&#x65;&#110;s&#112;&#105;&#x64;&#x65;&#x72;&#x2E;&#99;&#x6F;&#x6D;</a></li>
</ul>
]]>
        

    </content>
</entry>

<entry>
    <title>minitest version 1.3.1 has been released!</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/minitest-version-131-has-been.html" />
    <id>tag:blog.zenspider.com,2009://2.403</id>

    <published>2009-01-20T23:24:18Z</published>
    <updated>2009-01-20T23:24:18Z</updated>

    <summary>minitest/unit is a small and fast replacement for ruby&apos;s huge and slow test/unit. This is meant to be clean and easy to use both as a regular test writer and for language implementors that need a minimal set of methods...</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="minitest" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<p>minitest/unit is a small and fast replacement for ruby's huge and slow
test/unit. This is meant to be clean and easy to use both as a regular
test writer and for language implementors that need a minimal set of
methods to bootstrap a working unit test suite.</p>

<p>mini/spec is a functionally complete spec engine.</p>

<p>mini/mock, by Steven Baker, is a beautifully tiny mock object framework.</p>

<p>(This package was called miniunit once upon a time)</p>

<p>Changes:</p>

<h3>1.3.1 / 2009-01-20</h3>

<ul>
<li><p>1 minor enhancement:</p>

<ul>
<li>Added miniunit/autorun.rb as replacement for test/unit.rb's autorun.</li>
</ul></li>
<li><p>16 bug fixes:</p>

<ul>
<li>1.9 test fixes.</li>
<li>Bug fixes from nobu and akira for really odd scenarios. They run ruby funny.</li>
<li>Fixed (assert|refute)_match's argument order.</li>
<li>Fixed LocalJumpError in autorun if exception thrown before at_exit.</li>
<li>Fixed assert<em>in</em>delta (should be >=, not >).</li>
<li>Fixed assert_raises to match Modules.</li>
<li>Fixed capture_io to not dup IOs.</li>
<li>Fixed indentation of capture_io for ruby 1.9 warning.</li>
<li>Fixed location to deal better with custom assertions and load paths. (Yuki)</li>
<li>Fixed order of (must|wont)_include in MiniTest::Spec.</li>
<li>Fixed skip's backtrace.</li>
<li>Got arg order wrong in *_match in tests, message wrong as a result.</li>
<li>Made describe private. For some reason I thought that an attribute of Kernel.</li>
<li>Removed disable_autorun method, added autorun.rb instead.</li>
<li>assert_match escapes if passed string for pattern.</li>
<li>instance<em>of? is different from ===, use instance</em>of.</li>
</ul></li>
<li><p><a href="http://rubyforge.org/projects/bfts">http://rubyforge.org/projects/bfts</a></p></li>
</ul>
]]>
        

    </content>
</entry>

<entry>
    <title>ZenTest version 3.11.1 has been released!</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/zentest-version-3111-has-been.html" />
    <id>tag:blog.zenspider.com,2009://2.402</id>

    <published>2009-01-20T22:14:00Z</published>
    <updated>2009-01-20T22:14:00Z</updated>

    <summary>ZenTest provides 4 different tools and 1 library: zentest, unit_diff, autotest, multiruby, and Test::Rails. ZenTest scans your target and unit-test code and writes your missing code based on simple naming rules, enabling XP at a much quicker pace. ZenTest only...</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="ZenTest" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<p>ZenTest provides 4 different tools and 1 library: zentest, unit_diff,
autotest, multiruby, and Test::Rails.</p>

<p>ZenTest scans your target and unit-test code and writes your missing
code based on simple naming rules, enabling XP at a much quicker
pace. ZenTest only works with Ruby and Test::Unit.</p>

<p>unit_diff is a command-line filter to diff expected results from
actual results and allow you to quickly see exactly what is wrong.</p>

<p>autotest is a continous testing facility meant to be used during
development. As soon as you save a file, autotest will run the
corresponding dependent tests.</p>

<p>multiruby runs anything you want on multiple versions of ruby. Great
for compatibility checking! Use multiruby_setup to manage your
installed versions.</p>

<p>Test::Rails helps you build industrial-strength Rails code.</p>

<p>Changes:</p>

<h3>3.11.1 / 2009-01-20</h3>

<ul>
<li><p>1 bug fix:</p>

<ul>
<li>Fixed growl autotest plugin hooks to not return true, preempting other plugins.</li>
</ul></li>
<li><p><a href="http://www.zenspider.com/ZSS/Products/ZenTest/">http://www.zenspider.com/ZSS/Products/ZenTest/</a></p></li>
<li><a href="http://rubyforge.org/projects/zentest/">http://rubyforge.org/projects/zentest/</a></li>
<li><a href="&#109;&#97;&#105;&#108;&#x74;&#111;:&#x72;&#x79;&#x61;&#110;&#x64;&#45;&#x72;&#117;&#x62;&#121;&#64;&#x7A;&#x65;&#110;&#115;p&#105;&#100;&#x65;&#114;.&#x63;&#111;&#109;">&#x72;&#x79;&#x61;&#110;&#x64;&#45;&#x72;&#117;&#x62;&#121;&#64;&#x7A;&#x65;&#110;&#115;p&#105;&#100;&#x65;&#114;.&#x63;&#111;&#109;</a></li>
</ul>
]]>
        

    </content>
</entry>

<entry>
    <title>hoe version 1.8.3 has been released!</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/hoe-version-183-has-been-relea.html" />
    <id>tag:blog.zenspider.com,2009://2.401</id>

    <published>2009-01-20T22:09:43Z</published>
    <updated>2009-01-20T22:09:43Z</updated>

    <summary>Hoe is a simple rake/rubygems helper for project Rakefiles. It generates all the usual tasks for projects including rdoc generation, testing, packaging, and deployment. Tasks Provided: announce - Create news email file and post to rubyforge. audit - Run ZenTest...</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="Ruby" scheme="http://www.sixapart.com/ns/types#category" />
    
        <category term="Seattle.rb" scheme="http://www.sixapart.com/ns/types#category" />
    
        <category term="hoe" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<p>Hoe is a simple rake/rubygems helper for project Rakefiles. It
generates all the usual tasks for projects including rdoc generation,
testing, packaging, and deployment.</p>

<p>Tasks Provided:</p>

<ul>
<li>announce         - Create news email file and post to rubyforge.</li>
<li>audit            - Run ZenTest against the package.</li>
<li>check_manifest   - Verify the manifest.</li>
<li>clean            - Clean up all the extras.</li>
<li>config_hoe       - Create a fresh ~/.hoerc file.</li>
<li>debug_gem        - Show information about the gem.</li>
<li>default          - Run the default tasks.</li>
<li>deps:email       - Print a contact list for gems dependent on this gem</li>
<li>deps:fetch       - Fetch all the dependent gems of this gem into tarballs</li>
<li>deps:list        - List all the dependent gems of this gem</li>
<li>docs             - Build the docs HTML Files</li>
<li>email            - Generate email announcement file.</li>
<li>gem              - Build the gem file hoe-1.8.0.gem</li>
<li>generate_key     - Generate a key for signing your gems.</li>
<li>install_gem      - Install the package as a gem.</li>
<li>multi            - Run the test suite using multiruby.</li>
<li>package          - Build all the packages</li>
<li>post_blog        - Post announcement to blog.</li>
<li>post_news        - Post announcement to rubyforge.</li>
<li>publish_docs     - Publish RDoc to RubyForge.</li>
<li>release          - Package and upload the release to rubyforge.</li>
<li>ridocs           - Generate ri locally for testing.</li>
<li>tasks            - Generate a list of tasks for doco.</li>
<li>test             - Run the test suite.</li>
<li>test_deps        - Show which test files fail when run alone.</li>
</ul>

<p>See class rdoc for help. Hint: ri Hoe</p>

<p>Changes:</p>

<h3>1.8.3 / 2009-01-20:</h3>

<ul>
<li><p>1 minor enhancement:</p>

<ul>
<li>Refactored sow's naming code to Hoe.normalize_names and wrote some
tests to flush out inconsistencies.</li>
</ul></li>
<li><p><a href="http://rubyforge.org/projects/seattlerb/">http://rubyforge.org/projects/seattlerb/</a></p></li>
<li><a href="http://seattlerb.rubyforge.org/hoe/">http://seattlerb.rubyforge.org/hoe/</a></li>
<li><a href="&#x6D;&#97;i&#x6C;&#116;&#x6F;:&#x72;&#121;&#x61;&#110;&#x64;&#45;&#x72;&#117;&#x62;&#121;&#64;&#122;&#x65;&#110;s&#x70;&#x69;&#100;&#x65;&#114;&#46;&#99;&#111;&#x6D;">&#x72;&#121;&#x61;&#110;&#x64;&#45;&#x72;&#117;&#x62;&#121;&#64;&#122;&#x65;&#110;s&#x70;&#x69;&#100;&#x65;&#114;&#46;&#99;&#111;&#x6D;</a></li>
</ul>
]]>
        

    </content>
</entry>

<entry>
    <title>Getting There...</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/getting-there.html" />
    <id>tag:blog.zenspider.com,2009://2.400</id>

    <published>2009-01-13T08:02:36Z</published>
    <updated>2009-01-13T08:02:36Z</updated>

    <summary><![CDATA[require 'metal' class X defasm :superfast_meaning_of_life do |asm| asm.eax.mov 85 # (42 &lt;&lt; 1) + 1 end end p X.new.superfast_meaning_of_life # =&gt; 42...]]></summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="Toys" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<pre><code>require 'metal'

class X
  defasm :superfast_meaning_of_life do |asm|
    asm.eax.mov 85                # (42 &lt;&lt; 1) + 1
  end
end

p X.new.superfast_meaning_of_life # =&gt; 42
</code></pre>
]]>
        

    </content>
</entry>

<entry>
    <title>YAY!</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/yay.html" />
    <id>tag:blog.zenspider.com,2009://2.399</id>

    <published>2009-01-11T10:53:26Z</published>
    <updated>2009-01-11T10:53:26Z</updated>

    <summary>def test_mov_offset_eax 256.m.mov asm.eax assert_equal [0xA3, 0, 1, 0, 0], stream end passes! as do 98 others!...</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="Toys" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<pre><code>def test_mov_offset_eax
  256.m.mov asm.eax
  assert_equal [0xA3, 0, 1, 0, 0], stream
end
</code></pre>

<p>passes! as do 98 others!</p>
]]>
        

    </content>
</entry>

<entry>
    <title>rubyforge version 1.0.2 has been released!</title>
    <link rel="alternate" type="text/html" href="http://blog.zenspider.com/2009/01/rubyforge-version-102-has-been.html" />
    <id>tag:blog.zenspider.com,2009://2.398</id>

    <published>2009-01-05T22:32:57Z</published>
    <updated>2009-01-05T22:32:57Z</updated>

    <summary>A script which automates a limited set of rubyforge operations. Run &apos;rubyforge help&apos; for complete usage. Setup: For first time users AND upgrades to 0.4.0: rubyforge setup (deletes your username and password, so run sparingly!) edit ~/.rubyforge/user-config.yml rubyforge config For...</summary>
    <author>
        <name>zenspider</name>
        <uri>http://blog.zenspider.com/</uri>
    </author>
    
        <category term="rubyforge" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en-us" xml:base="http://blog.zenspider.com/">
        <![CDATA[<p>A script which automates a limited set of rubyforge operations.</p>

<ul>
<li>Run 'rubyforge help' for complete usage.</li>
<li>Setup: For first time users AND upgrades to 0.4.0:
<ul>
<li>rubyforge setup (deletes your username and password, so run sparingly!)</li>
<li>edit ~/.rubyforge/user-config.yml</li>
<li>rubyforge config</li>
</ul></li>
<li>For all rubyforge upgrades, run 'rubyforge config' to ensure you have latest.</li>
<li>Don't forget to login!  logging in will store a cookie in your
.rubyforge directory which expires after a time.  always run the
login command before any operation that requires authentication,
such as uploading a package.</li>
</ul>

<p>Changes:</p>

<h3>1.0.2 / 2009-01-05:</h3>

<ul>
<li>All webby commands now login automatically.</li>
<li>Login now no-ops if it already has a session cookie.</li>
<li>Added logout command.</li>
<li><p>Much more of the config is self-repairing, but still not bulletproof yet.</p></li>
<li><p><a href="http://codeforpeople.rubyforge.org/rubyforge/">http://codeforpeople.rubyforge.org/rubyforge/</a></p></li>
<li><a href="http://rubyforge.org/projects/codeforpeople/">http://rubyforge.org/projects/codeforpeople/</a></li>
</ul>
]]>
        

    </content>
</entry>

</feed>
