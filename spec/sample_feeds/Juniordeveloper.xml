<?xml version="1.0" encoding="utf-8"?>

<feed version="0.3" xmlns="http://purl.org/atom/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Junior developer</title>
  <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/" />
  <id>tag:typepad.com,2003:weblog-210513</id>
  <link rel="service.post" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513" title="Junior developer" />
  <modified>2009-01-20T14:22:38Z</modified>
  <tagline>puts &quot;Hello world!&quot;</tagline>

  <generator url="http://www.typepad.com/">TypePad</generator>
  <info type="application/xhtml+xml">
  <div xmlns="http://www.w3.org/1999/xhtml">This is an Atom formatted XML site feed. It is intended to be viewed in a Newsreader or syndicated to another site. Please visit <a href="http://tomcopeland.blogs.com/juniordeveloper/">Junior developer</a> for more info.</div>
  </info>
  <entry>
    <title>RubyForge now on PostgreSQL 8.3</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2009/01/rubyforge-now-on-postgresql-83.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=61641888" title="RubyForge now on PostgreSQL 8.3" />
    <id>tag:typepad.com,2003:post-61641888</id>
    <issued>2009-01-20T09:22:38-05:00</issued>
    <modified>2009-01-20T17:19:07Z</modified>
    <created>2009-01-20T14:22:38Z</created>
    <summary>PostgreSQL 8.3 has been out for a while and has all sorts of nifty improvements... and I&#39;ve finally gotten around to upgrading RubyForge to use it, huzzah! I did the upgrade last night and all seems well so far, but...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;PostgreSQL 8.3 has been out for a while and has all sorts of &lt;a href=&quot;http://www.postgresql.org/docs/8.3/static/release-8-3.html&quot;&gt;nifty improvements&lt;/a&gt;... and I&#39;ve finally gotten around to upgrading &lt;a href=&quot;http://rubyforge.org/&quot;&gt;RubyForge&lt;/a&gt; to use it, huzzah!  I did the upgrade last night and all seems well so far, but if anyone notices anything awry please let me know.&lt;/p&gt;

&lt;p&gt;Also, if there are any PostgreSQL gurus reading this, if you have a moment please take a look at the RubyForge &lt;a href=&quot;http://support.rubyforge.org/svn/trunk/support/postgresql.conf&quot;&gt;postgresql.conf&lt;/a&gt; and let me know if you see anything crazy there.  The RubyForge server has around 8 GB of RAM and I figure that 3 GB or so can be safely dedicated to PostgreSQL.  I&#39;ve made a couple changes - bumping up &lt;code&gt;shared_buffers&lt;/code&gt; and &lt;code&gt;maintenance_work_mem&lt;/code&gt; and whatnot - but tuning suggestions would be welcome.&lt;/p&gt;

&lt;p&gt;When I did this upgrade I did the usual major version dump/load... this took quite a while since the DB has around 70M records in it.  Maybe next time I can do the upgrade with Slony; that would reduce the downtime window.  On the other hand, it still only took 10 minutes to dump and 30 minutes to load, so, meh.&lt;/p&gt;

&lt;p&gt;More &lt;a href=&quot;http://militaryprofessionalreadinglists.com/&quot;&gt;military reading list&lt;/a&gt; trivia: &lt;a href=&quot;http://militaryprofessionalreadinglists.com/search?keywords=keegan&quot;&gt;John Keegan&lt;/a&gt; has three books on the various lists: &lt;b&gt;Face of Battle&lt;/b&gt;, &lt;b&gt;The Mask of Command&lt;/b&gt;, and &lt;b&gt;Fields of Battle: The Wars for North America&lt;/b&gt;.  I&#39;ve only read the first of those; it&#39;s a great book.  Ugly times at Agincourt... fighting hand to hand in a plowed field, yikes.&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Sphinx, Riddle, and escaping special characters</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2009/01/sphinx-riddle-and-escaping-special-characters.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=61404852" title="Sphinx, Riddle, and escaping special characters" />
    <id>tag:typepad.com,2003:post-61404852</id>
    <issued>2009-01-15T09:24:45-05:00</issued>
    <modified>2009-01-15T14:24:45Z</modified>
    <created>2009-01-15T14:24:45Z</created>
    <summary>If you&#39;re using Sphinx and Riddle, you&#39;ll notice that special characters don&#39;t get escaped. This means that if you do a extended mode search for apples -oranges, the dash in -oranges will be treated as a NOT operator. If you&#39;re...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;If you&#39;re using &lt;a href=&quot;http://www.sphinxsearch.com/&quot;&gt;Sphinx&lt;/a&gt; and &lt;a href=&quot;http://riddle.freelancing-gods.com/&quot;&gt;Riddle&lt;/a&gt;, you&#39;ll notice that special characters don&#39;t get escaped.  This means that if you do a extended mode search for &lt;code&gt;apples -oranges&lt;/code&gt;, the dash in &lt;code&gt;-oranges&lt;/code&gt; will be treated as a NOT operator. If you&#39;re accepting search terms from your users, this will lead to suprises unless you escape that and other special characters.&lt;/p&gt;

&lt;p&gt;This functionality is built in to the &lt;a href=&quot;http://www.sphinxsearch.com/docs/current.html#api-func-escapestring&quot;&gt;Sphinx PHP API&lt;/a&gt;, but I didn&#39;t find it in Riddle.  But here it is thanks to backreferences and the block form of &lt;code&gt;gsub&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;
def self.escape_string(s)
  (s || &quot;&quot;).gsub(/(@|-|!|~|&amp;|&quot;|\(|\\|\|)/) { &quot;\\#{$1}&quot; }
end
&lt;/pre&gt;

&lt;p&gt;I think that covers all the cases, but if you notice anything missing here please let me know, thanks!&lt;/p&gt;

&lt;p&gt;More &lt;a href=&quot;http://militaryprofessionalreadinglists.com/&quot;&gt;military reading list&lt;/a&gt; trivia:  the &lt;a href=&quot;http://militaryprofessionalreadinglists.com/revisions/2&quot;&gt;2009 Air Force reading list&lt;/a&gt; has been released!  Note that it now includes David Galula&#39;s &quot;Counterinsurgency Warfare: Theory and Practice&quot; which is also on the  &lt;a href=&quot;http://militaryprofessionalreadinglists.com/marines#2nd-lieutenant-warrant-officer&quot;&gt;Marine Corp reading list&lt;/a&gt;.&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Who owns what RubyGem on RubyForge?</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2009/01/who-owns-what-rubygem-on-rubyforge.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=60823220" title="Who owns what RubyGem on RubyForge?" />
    <id>tag:typepad.com,2003:post-60823220</id>
    <issued>2009-01-03T20:53:37-05:00</issued>
    <modified>2009-01-05T14:10:31Z</modified>
    <created>2009-01-04T01:53:37Z</created>
    <summary>Prompted by a support request - here&#39;s a dump of the current gem namespace ownership in the RubyForge gem index. If folks find this useful, let me know and set this up to be regenerated via a daily cronjob. More...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="xhtml" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
<div xmlns="http://www.w3.org/1999/xhtml"><p>Prompted by a support request - here's a dump of the <a href="http://support.rubyforge.org/namespace_ownership.txt">current gem namespace ownership</a> in the RubyForge gem index.  If folks find this useful, let me know and set this up to be regenerated via a daily cronjob.</p>

<p>More <a href="http://militaryprofessionalreadinglists.com/">military reading list</a> trivia: <b>The Kite Runner</b> is on both the <a href="http://militaryprofessionalreadinglists.com/search?keywords=kite">Coast Guard and the Navy reading lists</a>.</p></div>
</content>



  </entry>
  <entry>
    <title>Advanced ActiveRecord screencast</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/12/advanced-activerecord-screencast.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=60567642" title="Advanced ActiveRecord screencast" />
    <id>tag:typepad.com,2003:post-60567642</id>
    <issued>2008-12-29T15:27:22-05:00</issued>
    <modified>2008-12-30T12:59:16Z</modified>
    <created>2008-12-29T20:27:22Z</created>
    <summary>I just watched the EnvyCast Advanced ActiveRecord screencast and even though it&#39;s a few months old it&#39;s still great stuff. Jason and Gregg do a nice tour of the various AR topics (STI, complicated includes, bulk data loads, etc) and...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;I just watched the EnvyCast &lt;A href=&quot;http://envycasts.com/products/advanced-activerecord&quot;&gt;Advanced ActiveRecord&lt;/a&gt; screencast and even though it&#39;s a few months old it&#39;s still great stuff.  Jason and Gregg do a nice tour of the various AR topics (STI, complicated includes, bulk data loads, etc) and they give enough detail to make each section useful.  Usually I delete a screencast after I&#39;ve watched it, but I think I&#39;ll keep this one around and watch it again in a few weeks just to make sure everything sank in.&lt;/p&gt;

&lt;p&gt;The only nit I would pick is that at one point they refer to STI returning an instance of the desired subclass as &quot;casting&quot;; I think that&#39;s not quite what&#39;s happening there.  The object isn&#39;t being implicitly cast to another type; rather, the object is created as a certain type (&lt;code&gt;Song&lt;/code&gt;/&lt;code&gt;Video&lt;/code&gt;/&lt;code&gt;Film&lt;/code&gt;) and then we&#39;re calling the &lt;code&gt;class&lt;/code&gt; method on it.  Actually... I&#39;m not sure if you _can_ cast stuff in Ruby... some classes can convert themselves to a different type (via &lt;code&gt;to_i&lt;/code&gt; or &lt;code&gt;to_s&lt;/code&gt; or whatever), but that&#39;s a conversion, not a cast.&lt;/p&gt;

&lt;p&gt;Anyhow, that&#39;s a minor point, and I definitely plan on watching their &lt;a href=&quot;http://envycasts.com/products/ruby-on-rails-22-screencast&quot;&gt;Rails 2.2 screencast&lt;/a&gt;.  And of course the &lt;a href=&quot;http://www.railsenvy.com/podcast&quot;&gt;RailsEnvy podcast&lt;/a&gt; is awesome!&lt;/p&gt;

&lt;p&gt;More &lt;a href=&quot;http://militaryprofessionalreadinglists.com/&quot;&gt;military reading list&lt;/a&gt; trivia: Malcolm Gladwell has &lt;a href=&quot;http://militaryprofessionalreadinglists.com/search?keywords=gladwell&quot;&gt;two books on the various lists&lt;/a&gt; - &quot;Blink&quot; on the Coast Guard list and &quot;The Tipping Point&quot; on the Navy list.&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>libxml-ruby and extconf failure: need libm</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/12/libxmlruby-and-extconf-failure-need-libm.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=60107222" title="libxml-ruby and extconf failure: need libm" />
    <id>tag:typepad.com,2003:post-60107222</id>
    <issued>2008-12-16T19:42:16-05:00</issued>
    <modified>2008-12-17T00:42:17Z</modified>
    <created>2008-12-17T00:42:16Z</created>
    <summary>I was installing libxml-ruby today and got a weird error: extconf failure: need libm Hm, ok, libm is supplied by the glibc-devel RPM, which is installed and there it is: $ ls -l /usr/lib/libm.a -rw-r--r-- 1 root root 449902 Apr...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;I was installing &lt;a href=&quot;http://libxml.rubyforge.org/&quot;&gt;libxml-ruby&lt;/a&gt; today and got a weird error:&lt;/p&gt;

&lt;pre&gt;
extconf failure: need libm
&lt;/pre&gt;

&lt;p&gt;Hm, ok, &lt;code&gt;libm&lt;/code&gt; is supplied by the &lt;code&gt;glibc-devel&lt;/code&gt; RPM, which is installed and there it is:&lt;/p&gt;

&lt;pre&gt;
$ ls -l  /usr/lib/libm.a 
-rw-r--r--  1 root root 449902 Apr 15  2008 /usr/lib/libm.a
$ rpm -qf /usr/lib/libm.a
glibc-devel-2.3.4-2.41
&lt;/pre&gt;

&lt;p&gt;After flailing around for a bit I start actually looking at libxml-ruby&#39;s &lt;code&gt;ext/libxml/extconf.rb&lt;/code&gt;.  Here&#39;s the relevant bit around line 50:&lt;/p&gt;

&lt;pre&gt;
unless have_library(&#39;m&#39;, &#39;atan&#39;)
  # more checks
end
&lt;/pre&gt;

&lt;p&gt;Ok, so, &lt;code&gt;have_library&lt;/code&gt; comes from mkmf.rb, and that method does this:&lt;/p&gt;

&lt;pre&gt;
try_func(func, libs, headers, &amp;b)
&lt;/pre&gt;

&lt;p&gt;And what does &lt;code&gt;try_func&lt;/code&gt; do?  It writes out a small C program that calls that specific function and tries to compile and link it.  So that should work unless.... doh, GCC isn&#39;t installed!  A quick &quot;yum install gcc&quot; and everything works.&lt;/p&gt;

&lt;p&gt;I think it took me so long to figure out what was happening because I was expecting a &quot;libxml2-devel not found&quot; kind of error, and if GCC wasn&#39;t installed I&#39;d expect to get a &quot;no C compiler found&quot; error.  Anyhow, hope this helps someone.&lt;/p&gt;

&lt;p&gt;On a completely unrelated note, Ender&#39;s Game appears on both the &lt;a href=&quot;http://militaryprofessionalreadinglists.com/search?keywords=ender&quot;&gt;Marine Corps and Navy reading lists&lt;/a&gt;.  Who knew?&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>A small fix for JavaCC 4.2&#39;s code generation</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/12/a-small-fix-for-javacc-42s-code-generation.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=59960914" title="A small fix for JavaCC 4.2's code generation" />
    <id>tag:typepad.com,2003:post-59960914</id>
    <issued>2008-12-12T22:45:13-05:00</issued>
    <modified>2008-12-13T03:45:13Z</modified>
    <created>2008-12-13T03:45:13Z</created>
    <summary>JavaCC 4.2 was released a few weeks ago, but there was a small problem (spotted by Xavier Le Vourch and patch submitted by rafiyr) which results in the generated JJTree code not using Java 1.5 language constructs. rafiyr&#39;s patch looks...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="xhtml" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
<div xmlns="http://www.w3.org/1999/xhtml"><p>JavaCC 4.2 was released a few weeks ago, but there was a small <a href="https://javacc.dev.java.net/issues/show_bug.cgi?id=214">problem</a> (spotted by Xavier Le Vourch and patch submitted by rafiyr) which results in the generated JJTree code not using Java 1.5 language constructs.</p>  

<p>rafiyr's <a href="https://javacc.dev.java.net/nonav/issues/showattachment.cgi/67/jjtree_options_normalize.patch">patch</a> looks good to me, the tests all pass, and a rebuilt javacc.jar file is <a href="http://infoether.com/~tom/javacc.jar">here</a> if anyone wants to give it a try.  I'll commit this in a couple days unless any problems crop up...</p></div>
</content>



  </entry>
  <entry>
    <title>Another happy UltraSphinx user</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/12/another-happy-ultrasphinx-user.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=59788972" title="Another happy UltraSphinx user" />
    <id>tag:typepad.com,2003:post-59788972</id>
    <issued>2008-12-10T01:36:49-05:00</issued>
    <modified>2008-12-23T19:06:29Z</modified>
    <created>2008-12-10T06:36:49Z</created>
    <summary>I wanted to set up searching on my military reading lists site, and while the dataset is small enough that a SQL LIKE query would have done the trick, I wanted to introduce a real search engine in the mix....</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;I wanted to set up searching on my &lt;a href=&quot;http://militaryprofessionalreadinglists.com&quot;&gt;military reading lists&lt;/a&gt; site, and while the dataset is small enough that a SQL LIKE query would have done the trick, I wanted to introduce a real search engine in the mix.  Thanks to a couple of helpful posts from &lt;a href=&quot;http://neeraj.name/blog/articles/599-working-with-sphinx-fulltext-search-engine-using-ultrasphinx&quot;&gt;Neeraj Kumar&lt;/a&gt; and &lt;a href=&quot;http://reinh.com/blog/2008/07/14/a-thinking-mans-sphinx.html&quot;&gt;Rein Henrichs&lt;/a&gt;, it was simple to get the basic functionality up and running.  I&#39;m using the latest UltraSphinx code from GitHub and as far as I can tell everything is working fine with Ruby 1.8.6, Passenger 2.0.5, and Rails 2.2.2.&lt;/p&gt;

&lt;p&gt;The only thing I would add to Rein&#39;s post is a variation on his Capistrano tasks.  He uses this:&lt;/p&gt;

&lt;pre&gt;
namespace :sphinx do
  desc &quot;Generate the ThinkingSphinx configuration file&quot;
  task :configure do
    run &quot;cd #{release_path} &amp;&amp; rake thinking_sphinx:configure&quot;
  end
end
after &quot;deploy:update_code&quot;, &quot;sphinx:configure&quot;
&lt;/pre&gt;

&lt;p&gt;and I used this:&lt;/p&gt;

&lt;pre&gt;
def run_remote_rake(rake_cmd)
  run &quot;cd #{current_path} &amp;&amp; /usr/local/bin/rake RAILS_ENV=production #{rake_cmd}&quot;
end
after &quot;deploy&quot;, &quot;ultrasphinx:configure&quot;
&lt;/pre&gt;

&lt;p&gt;My technique is slightly shorter, but his method would allow you to run that task independently of a deploy.  I reckon both ways work.&lt;/p&gt;



&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>RubyForge gem publishing time reduced from 1 hour to 5 minutes</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/11/rubyforge-gem-publishing-time-reduced-from-1-hour-to-5-minutes.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=58915904" title="RubyForge gem publishing time reduced from 1 hour to 5 minutes" />
    <id>tag:typepad.com,2003:post-58915904</id>
    <issued>2008-11-22T17:08:57-05:00</issued>
    <modified>2008-11-26T19:03:13Z</modified>
    <created>2008-11-22T22:08:57Z</created>
    <summary>The RubyForge gem indexer has a fair number of gems to deal with - upwards of 17,000. This means that a complete rebuild of the various indexes can take a while; recently it&#39;s been taking 20-25 minutes and gobbling lots...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;The RubyForge gem indexer has a fair number of gems to deal with - upwards of 17,000.  This means that a complete rebuild of the various indexes can take a while; recently it&#39;s been taking 20-25 minutes and gobbling lots of I/O resources as it runs.  This slows down everything else on that machine, of course.&lt;/p&gt;

&lt;p&gt;But happily all that&#39;s changed.  &lt;A href=&quot;http://segment7.net/&quot;&gt;Eric Hodel&lt;/a&gt; made some changes to the indexer that allow it to do more incremental builds of the newer indexes, while the very old index - e.g., the uncompressed 27 MB YAML file - is now only rebuilt once a day.  Adding a new gem to the index and making it available to download (thanks to those &lt;a href=&quot;http://tomcopeland.blogs.com/juniordeveloper/2008/06/faster-rubygem.html&quot;&gt;rewrite rules&lt;/a&gt; that Jeremy Kemper wrote) can now be done in around 10 seconds!&lt;/a&gt;

&lt;p&gt;All that to say that instead of running the cronjob that deploys newly released gems once an hour, we&#39;re now running it every five minutes.  So your new gems on RubyForge will become available much more quickly than before - and the server load is actually reduced.  Good times indeed!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Upgrading your RubyForge project repository to Subversion 1.5</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/11/upgrading-your-rubyforge-project-repository-to-subversion-15.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=58604148" title="Upgrading your RubyForge project repository to Subversion 1.5" />
    <id>tag:typepad.com,2003:post-58604148</id>
    <issued>2008-11-17T08:49:15-05:00</issued>
    <modified>2008-11-17T13:49:16Z</modified>
    <created>2008-11-17T13:49:15Z</created>
    <summary>Last week I posted about upgrading RubyForge&#39;s installed Subversion version to 1.5. All seems well with that, and new repositories are being created as Subversion 1.5 repos, but that still leaves all the old repositories at 1.4. I don&#39;t want...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Last week I &lt;a href=&quot;http://tomcopeland.blogs.com/juniordeveloper/2008/11/rubyforge-now-running-subversion-15.html&quot;&gt;posted&lt;/a&gt; about upgrading RubyForge&#39;s installed Subversion version to 1.5.  All seems well with that, and new repositories are being created as Subversion 1.5 repos, but that still leaves all the old repositories at 1.4.  I don&#39;t want to yank the rug out from under anyone, so if you want your repo upgraded please file a &lt;a href=&quot;http://rubyforge.org/tracker/?func=browse&amp;group_id=5&amp;atid=102&quot;&gt;support request&lt;/a&gt;.  I&#39;ve added a new category for that type of request, and I&#39;ll run svn-populate-node-origins-index on any converted repos so you should see decent performance.

&lt;p&gt;Many thanks to Emiel van de Laar for filing a request and pointing me to the Subversion &lt;a href=&quot;http://subversion.tigris.org/svn_1.5_releasenotes.html#repos-upgrades&quot;&gt;documentation&lt;/a&gt; on this!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>RubyForge email ham to spam rates</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/11/rubyforge-email-ham-to-spam-rates.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=58367730" title="RubyForge email ham to spam rates" />
    <id>tag:typepad.com,2003:post-58367730</id>
    <issued>2008-11-11T17:13:53-05:00</issued>
    <modified>2008-11-11T22:13:53Z</modified>
    <created>2008-11-11T22:13:53Z</created>
    <summary>I was looking at the logwatch output from RubyForge the other day and noticed this in the Postfix log section: 34652 Accepted 5.30% 618877 Rejected 94.70% -------- ------------------------------------------------ 653529 Total 100.00% Almost 95% of all SMTP connections are spam! My...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="xhtml" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
<div xmlns="http://www.w3.org/1999/xhtml"><p>I was looking at the logwatch output from RubyForge the other day and noticed this in the Postfix log section:</p>

<pre>
   34652   Accepted                                   5.30%
  618877   Rejected                                  94.70%
--------   ------------------------------------------------
  653529   Total                                    100.00%
</pre>

<p>Almost 95% of all SMTP connections are spam!  My goodness.  Here are the detailed stats:</p>

<pre>
    1824   Reject relay denied                        0.29%
   24225   Reject HELO/EHLO                           3.91%
  264808   Reject unknown user                       42.79%
  149903   Reject recipient address                  24.22%
  178112   Reject sender address                     28.78%
       2   Reject server configuration error          0.00%
       3   Reject VRFY                                0.00%
</pre>

<p>Mostly unknown users - spammers doing dictionary attacks, I reckon.</p>

<p>Speaking of spam, we use the Postgrey greylisting daemon to, well, do greylisting.  A few weeks ago I noticed that it was constantly blocked on I/O and was taking up a good bit of CPU as well - I guess that's to be expected when you've got a 70 MB postgrey data file.  Anyhow, I moved the daemon over to another box, twiddled the Postfix configuration on one end and the iptables configuration on the other end and the Rubyforge load average dropped a good bit.  Good times.</p></div>
</content>



  </entry>
  <entry>
    <title>RubyForge now running Subversion 1.5</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/11/rubyforge-now-running-subversion-15.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=58330624" title="RubyForge now running Subversion 1.5" />
    <id>tag:typepad.com,2003:post-58330624</id>
    <issued>2008-11-10T23:23:22-05:00</issued>
    <modified>2008-11-11T04:23:22Z</modified>
    <created>2008-11-11T04:23:22Z</created>
    <summary>A few months ago Jonathan Rochkind noticed that we were running Subversion 1.4 on RubyForge even though 1.5 has been out for a while. After my usual period of procrastination, I buckled down to it this evening and upgraded. Like...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;A few months ago &lt;a href=&quot;http://bibwild.wordpress.com/&quot;&gt;Jonathan Rochkind&lt;/a&gt; noticed that we were running Subversion 1.4 on RubyForge even though 1.5 has been out for a while.  After my usual period of procrastination, I buckled down to it this evening and upgraded.  Like all these things, it wasn&#39;t as painful as I thought it might be.  Of course, if you notice anything awry, please let me know!&lt;/p&gt;

&lt;p&gt;The Subversion documentation has some pages which might be useful for folks wondering what Subversion 1.5 brings; there&#39;s the &lt;a href=&quot;http://blogs.open.collab.net/svn/2007/10/considerations-.html&quot;&gt;&#39;Considerations when upgrading to Subversion 1.5&#39;&lt;/a&gt; document which has some general notes on the changes, and the &lt;a href=&quot;http://subversion.tigris.org/svn_1.5_releasenotes.html&quot;&gt;release notes&lt;/a&gt; give tons of details on all the changes.&lt;/p&gt;

&lt;p&gt;The release notes link off to a post by Malcolm Rowe about the new &lt;a href=&quot;http://www.farside.org.uk/200704/tree_structured_fsfs&quot;&gt;sharded directory structure&lt;/a&gt;.  I&#39;m thinking of running the reshard script on all the RubyForge Subversion repositories just on general principle... has anyone had any bad experiences with running that?&lt;p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>JavaCC 4.1 released!</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/11/javacc-41-released.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=58061300" title="JavaCC 4.1 released!" />
    <id>tag:typepad.com,2003:post-58061300</id>
    <issued>2008-11-05T09:18:36-05:00</issued>
    <modified>2008-11-05T14:18:36Z</modified>
    <created>2008-11-05T14:18:36Z</created>
    <summary>Well, I&#39;m about two months late in blogging about this, but, still: JavaCC 4.1 is out! It&#39;s been close to three years since the last release (JavaCC 4.0 came out in Jan 2006), and this new version has a bunch...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Well, I&#39;m about two months late in blogging about this, but, still: &lt;a href=&quot;https://javacc.dev.java.net/servlets/ReadMsg?list=announce&amp;msgNo=3&quot;&gt;JavaCC 4.1 is out&lt;/a&gt;!  It&#39;s been close to three years since the last release (JavaCC 4.0 came out in Jan 2006), and this new version has a bunch of &lt;a href=&quot;https://javacc.dev.java.net/issues/buglist.cgi?component=javacc&amp;field0-0-0=target_milestone&amp;type0-0-0=equals&amp;value0-0-0=4.1&quot;&gt;bug fixes and code cleanups&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The lion&#39;s share of the work for this release (and over the past few years in general) was done by &lt;a href=&quot;http://www.paulcager.org/&quot;&gt;Paul Cager&lt;/a&gt;, with contributions in the form of patches, discussions, and bug reports from many others.  You can download this release &lt;a href=&quot;https://javacc.dev.java.net/servlets/ProjectDocumentList&quot;&gt;here&lt;/a&gt;, and feedback is always welcome &lt;A href=&quot;https://javacc.dev.java.net/servlets/ProjectMailingListList&quot;&gt;on the mailing lists&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally, I must plug my &lt;a href=&quot;http://generatingparserswithjavacc.com/&quot;&gt;JavaCC book&lt;/a&gt;.  It&#39;s a perfect Christmas present for your friends who enjoy reading EBNF!&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>A small JJDoc bug fixed</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/11/a-small-jjdoc-bug-fixed.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=58060184" title="A small JJDoc bug fixed" />
    <id>tag:typepad.com,2003:post-58060184</id>
    <issued>2008-11-05T08:59:26-05:00</issued>
    <modified>2008-11-05T13:59:27Z</modified>
    <created>2008-11-05T13:59:26Z</created>
    <summary>Michael Iber reported a bug in JavaCC - the documentation generator, JJDoc, was erroring out on tokens defined with repetition ranges. For example, a token definition that contained {2,3} would result in this error: Java Compiler Compiler Version 4.1d1 (Documentation...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Michael Iber &lt;a href=&quot;https://javacc.dev.java.net/servlets/ReadMsg?list=dev&amp;msgNo=504&quot;&gt;reported&lt;/a&gt; a bug in JavaCC - the documentation generator, JJDoc, was erroring out on tokens defined with repetition ranges.  For example, a token definition that contained &lt;code&gt;&amp;lt;FOO&amp;gt;{2,3}&lt;/code&gt; would result in this error:&lt;/p&gt;

&lt;pre&gt;
Java Compiler Compiler Version 4.1d1 (Documentation Generator Version 0.1.4)
(type &quot;jjdoc&quot; with no arguments for help)
Reading from file error.jj . . .
Oops: Unknown regular expression type.
Exception in thread &quot;main&quot; java.lang.NullPointerException
        at org.javacc.jjdoc.HTMLGenerator.print(Unknown Source)
        at org.javacc.jjdoc.HTMLGenerator.println(Unknown Source)
        at org.javacc.jjdoc.HTMLGenerator.nonterminalsStart(Unknown Source)
        at org.javacc.jjdoc.JJDoc.emitNormalProductions(Unknown Source)
        at org.javacc.jjdoc.JJDoc.start(Unknown Source)
        at org.javacc.jjdoc.JJDocMain.mainProgram(Unknown Source)
        at org.javacc.jjdoc.JJDocMain.main(Unknown Source)
        at jjdoc.main(Unknown Source)
&lt;/pre&gt;

&lt;p&gt;This is fixed in CVS now (v1.16 of JJDoc.java) and I&#39;ve posted an &lt;a href=&quot;http://infoether.com/~tom/javacc.jar&quot;&gt;updated javacc.jar&lt;/a&gt; for those who encounter this problem.

&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Kirk Pepperdine&#39;s nice review of Generating Parsers with JavaCC</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/11/kirk-pepperdines-nice-review-of-generating-parsers-with-javacc.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=57988572" title="Kirk Pepperdine's nice review of Generating Parsers with JavaCC" />
    <id>tag:typepad.com,2003:post-57988572</id>
    <issued>2008-11-04T06:36:24-05:00</issued>
    <modified>2008-11-04T20:50:06Z</modified>
    <created>2008-11-04T11:36:24Z</created>
    <summary>I just noticed that Kirk Pepperdine had posted a kind note about my JavaCC book. He talks about having to do write new grammars rarely enough that it&#39;s helpful to have a book handy to fire up the neurons again...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="xhtml" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
<div xmlns="http://www.w3.org/1999/xhtml"><p>I just noticed that <a href="http://www.kodewerk.com/generating_parsers_with_javacc.htm">Kirk Pepperdine had posted a kind note</a> about my <a href="http://generatingparserswithjavacc.com/">JavaCC book</a>.  He talks about having to do write new grammars rarely enough that it's helpful to have a book handy to fire up the neurons again when the task comes up, and I think that's probably a pretty common case.  Sounds like the book has been useful to him there.</p>  

<p>One thing he says is that Generating Parsers with JavaCC "...has been an invaluable source of information when I've been trying to sort out some of the more obscure error messages that I'm prone to generate."  Yup, as I wrote all the grammars for the book I captured lots of error messages as they arose, looked them up in the JavaCC source code, and then added an explanation for each one.  I also added those error messages to the index so that you can flip to the back of the book and look up "Multiply defined lexical tokens" or whatever.</p>

<p>Kirk's blog is pretty well known, I think, but I hadn't gone there for a while so it was interesting to catch up with some of his recent posts.  I especially enjoyed the one on <a href="http://www.kodewerk.com/is_your_concurrent_collector_failing_you.htm">concurrent mark and sweep garbage collection</a>.  I notice in that post's comments that <a href="http://blogs.sun.com/gregg">Greg Sporar</a> points over to <a href="http://gchisto.dev.java.net/">GCHisto</a>, which has a handrolled parser for GC log files.  I wonder if a JavaCC-generated parser would be much faster?  Anyhow, good stuff!</p></div>
</content>



  </entry>
  <entry>
    <title>Some excellent Ruby metaprogramming screencasts</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/11/some-excellent-ruby-metaprogramming-screencasts.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=57976262" title="Some excellent Ruby metaprogramming screencasts" />
    <id>tag:typepad.com,2003:post-57976262</id>
    <issued>2008-11-03T21:35:04-05:00</issued>
    <modified>2008-11-08T02:07:56Z</modified>
    <created>2008-11-04T02:35:04Z</created>
    <summary>Everyone probably knows about these already, but, just in case, I just watched the first episode of Dave Thomas&#39; excellent Ruby metaprogramming screencast and it was quite nice. Dave explains and diagrams singleton (or &#39;ghost&#39;, as he calls them) classes...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="xhtml" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
<div xmlns="http://www.w3.org/1999/xhtml"><p>Everyone probably knows about these already, but, just in case, I just watched the first episode of Dave Thomas' excellent <a href="http://www.pragprog.com/screencasts/v-dtrubyom/the-ruby-object-model-and-metaprogramming">Ruby metaprogramming screencast</a> and it was quite nice.  Dave explains and diagrams singleton (or 'ghost', as he calls them) classes very clearly; I don't think I had ever really though through the concepts of "current class" or how self changes when expressions are being evaluated.</p>

<p>The screencasts are reasonably priced - $5 - and the first one was only 30 minutes, so they're manageable.  I think I view these in the same way I view a book - if I learn _anything_ at all from it, it's worth the price.</p>

<p>Dave Thomas is pretty amazing - after 7 (8? 9?) years of doing Ruby he's still soldiering away on ruby-core, working through the nuts and bolts of various Ruby 1.9 features, Ruby 1.8 bugs, and so forth.  Dave, you rock!</p>



</div>
</content>



  </entry>
  <entry>
    <title>rcov crashing with [BUG] rb_gc_mark()</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/08/rcov-crashing-w.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=54673268" title="rcov crashing with [BUG] rb_gc_mark()" />
    <id>tag:typepad.com,2003:post-54673268</id>
    <issued>2008-08-25T17:45:28-04:00</issued>
    <modified>2008-10-01T05:19:22Z</modified>
    <created>2008-08-25T21:45:28Z</created>
    <summary>While working on some Rail apps for RollStream and using Mauricio Fernandez&#39;s excellent rcov plugin we started to encounter the [BUG] rb_gc_mark(): unknown data type problem. We only saw this when we ran our controller tests; just running the unit...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;While working on some Rail apps for &lt;a href=&quot;http://rollstream.com/&quot;&gt;RollStream&lt;/a&gt; and using Mauricio Fernandez&#39;s excellent &lt;a href=&quot;http://eigenclass.org/hiki.rb?rcov&quot;&gt;rcov&lt;/a&gt; plugin we started to encounter the &lt;a href=&quot;http://rubyforge.org/tracker/index.php?func=detail&amp;amp;aid=21610&amp;amp;group_id=1750&amp;amp;atid=6802&quot;&gt;[BUG] rb_gc_mark(): unknown data type&lt;/a&gt; problem.&amp;nbsp; We only saw this when we ran our controller tests; just running the unit tests wouldn&#39;t trigger it.&amp;nbsp; &amp;nbsp;It was a bummer, though, because we couldn&#39;t see where we were coverage-wise.



&lt;/p&gt;

&lt;p&gt;I poked around rcov for a while using &lt;a href=&quot;http://valgrind.org/&quot;&gt;Valgrind&lt;/a&gt; - there&#39;s no Mac OS X port, but I had a Linux VMWare Fusion instance handy. After some flailing around I finally hit paydirt.&amp;nbsp; This Valgrind invocation:

&lt;/p&gt;

&lt;pre&gt;valgrind --tool=memcheck --error-limit=no --leak-check=no \&lt;br /&gt;--leak-resolution=low \&lt;br /&gt;--log-file=valgrind.out /usr/local/bin/rcov --rails \&lt;br /&gt;--aggregate coverage.data --text-summary -Ilib --html \&lt;br /&gt;[... lots of controller names here ...]&lt;/pre&gt;

&lt;p&gt;turned up this problem report:&lt;/p&gt;

&lt;pre&gt;==13390== Invalid write of size 4&lt;br /&gt;==13390==&amp;nbsp; &amp;nbsp; at 0x784BE8E: coverage_event_coverage_hook (rcovrt.c:103)&lt;br /&gt;==13390==&amp;nbsp; &amp;nbsp; by 0x416E85: rb_eval (eval.c:4127)&lt;br /&gt;[... stack elided ...] &lt;br /&gt;==13390==&amp;nbsp; Address 0x7e419e8 is not stack&#39;d, malloc&#39;d or (recently) free&#39;d&lt;/pre&gt;

&lt;p&gt;rcovt.c line 103 involves usage of a cov_array struct; I added some bounds checking like so:

&lt;/p&gt;

&lt;pre&gt;$ diff -Naur rcovrt.c ~/new.rcovrt.c &lt;br /&gt;--- rcovrt.c	2008-08-28 17:50:16.000000000 -0400&lt;br /&gt;+++ /Users/tom/new.rcovrt.c	2008-08-28 17:52:15.000000000 -0400&lt;br /&gt;@@ -64,7 +64,9 @@&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; if(!carray-&amp;gt;ptr[sourceline])&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; carray-&amp;gt;ptr[sourceline] = 1;&lt;br /&gt;&amp;nbsp; &amp;nbsp;} else {&lt;br /&gt;+	&amp;nbsp; if (carray &amp;amp;&amp;amp; carray-&amp;gt;len &amp;gt; sourceline) {&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; carray-&amp;gt;ptr[sourceline]++;&lt;br /&gt;+	&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp;}&lt;br /&gt; &lt;br /&gt;&amp;nbsp; &amp;nbsp;return carray;&lt;br /&gt;@@ -98,7 +100,7 @@&lt;br /&gt; static void&lt;br /&gt; coverage_increase_counter_cached(char *sourcefile, int sourceline)&lt;br /&gt; {&lt;br /&gt;- if(cached_file == sourcefile &amp;amp;&amp;amp; cached_array) {&lt;br /&gt;+ if(cached_file == sourcefile &amp;amp;&amp;amp; cached_array &amp;amp;&amp;amp; cached_array-&amp;gt;len &amp;gt; sourceline) {&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; cached_array-&amp;gt;ptr[sourceline]++;&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; return;&lt;br /&gt;&amp;nbsp; }&lt;/pre&gt;





&lt;p&gt; &lt;br /&gt;I rebuilt the gem, reran the coverage task, and huzzah!&amp;nbsp; It completes!&lt;/p&gt;

&lt;p&gt;This isn&#39;t a great fix, of course - I&#39;d much rather figure out what&#39;s wrong with the allocation of cached_array.&amp;nbsp; Perhaps someone cleverer than I can come up with a better fix. &lt;/p&gt;

&lt;p&gt;Updated 8/27/08: Modified to document a better fix - check the
cached_array-&amp;gt;len attribute and compare it to the sourceline.&amp;nbsp; 

&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>RubyForge newcaster</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/08/rubyforge-newca.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=53825910" title="RubyForge newcaster" />
    <id>tag:typepad.com,2003:post-53825910</id>
    <issued>2008-08-06T08:50:10-04:00</issued>
    <modified>2008-08-06T12:50:23Z</modified>
    <created>2008-08-06T12:50:10Z</created>
    <summary>You may notice news items being promoted to the RubyForge front page more rapidly in the upcoming days - and that&#39;s thanks to Ben Bleything, who has agreed to take on the role of RubyForge newscaster for a while. Thanks...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;You may notice news items being promoted to the &lt;a href=&quot;http://rubyforge.org&quot;&gt;RubyForge&lt;/a&gt; front page more rapidly in the upcoming days - and that&#39;s thanks to &lt;a href=&quot;http://blog.bleything.net/&quot;&gt;Ben Bleything&lt;/a&gt;, who has agreed to take on the role of RubyForge newscaster for a while.&amp;nbsp; Thanks Ben!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Browsing git repositories on RubyForge</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/07/browsing-git-re.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=52530652" title="Browsing git repositories on RubyForge" />
    <id>tag:typepad.com,2003:post-52530652</id>
    <issued>2008-07-10T23:52:12-04:00</issued>
    <modified>2008-07-11T03:52:29Z</modified>
    <created>2008-07-11T03:52:12Z</created>
    <summary>Thanks to gitweb and an assist from Garry Dolley, you can now browse the Git repositories that are hosted on RubyForge. For example, Garry&#39;s EBay4R project&#39;s scm page now links to a browsable repo. Good times. The speed is decent,...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Thanks to gitweb and an assist from &lt;a href=&quot;http://scie.nti.st/&quot;&gt;Garry Dolley&lt;/a&gt;, you can now browse the Git repositories that are hosted on RubyForge.&amp;nbsp; For example, Garry&#39;s EBay4R project&#39;s &lt;a href=&quot;http://rubyforge.org/scm/?group_id=1163&quot;&gt;scm page&lt;/a&gt; now links to &lt;a href=&quot;http://ebay4r.rubyforge.org/git?p=ebay4r.git;a=tree&quot;&gt;a browsable repo&lt;/a&gt;.&amp;nbsp; Good times. 

&lt;/p&gt;

&lt;p&gt;The speed is decent, especially considering it&#39;s a CGI script.&amp;nbsp; The GitHub browser is much nicer, but, still, &#39;tis a start.&amp;nbsp; Enjoy!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Faster RubyGem deploys thanks to Jeremy Kemper</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/06/faster-rubygem.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=51958858" title="Faster RubyGem deploys thanks to Jeremy Kemper" />
    <id>tag:typepad.com,2003:post-51958858</id>
    <issued>2008-06-27T15:51:35-04:00</issued>
    <modified>2008-06-29T20:26:47Z</modified>
    <created>2008-06-27T19:51:35Z</created>
    <summary>A long while back Jeremy Kemper did up some nice rewrite rules for RubyForge. The idea was that the filenames of new gems will be tracked and RubyForge will serve those gems locally rather than redirecting the request out to...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;A long while back &lt;a href=&quot;http://bitsweat.net/&quot;&gt;Jeremy Kemper&lt;/a&gt; did up some nice &lt;a href=&quot;http://rubyforge.org/tracker/index.php?func=detail&amp;amp;aid=14803&amp;amp;group_id=5&amp;amp;atid=104&quot;&gt;rewrite rules&lt;/a&gt; for RubyForge.&amp;nbsp; The idea was that the filenames of new gems will be tracked and RubyForge will serve those gems locally rather than redirecting the request out to the mirrors.&amp;nbsp; After a long delay (sorry!) I finally implemented the PHP side of things - e.g., modified the GForge code to write out the filename when a gem is released.

&lt;/p&gt;

&lt;p&gt;So today, for example, &lt;a href=&quot;http://weblog.jamisbuck.org/&quot;&gt;Jamis Buck&lt;/a&gt; released Capistrano 2.4.1 at 1:26.&amp;nbsp; The &amp;quot;new gem check&amp;quot; cronjob ran at 1:40 and placed the gem file in the main gems directory, and the index was rebuilt by around 1:47.&amp;nbsp; And at 1:48, what should appear in the gems.rubyforge.org virtual host log:

&lt;br /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gems.rubyforge.org 213.119.94.76 - - [27/Jun/2008:13:48:11 -0400] &amp;quot;GET /gems/capistrano-2.4.1.gem HTTP/1.1&amp;quot; 200 109056 &amp;quot;-&amp;quot; &amp;quot;RubyGems/1.0.1 universal-darwin-9&amp;quot;&lt;/code&gt;&amp;nbsp; 



&lt;/p&gt;



&lt;p&gt;Huzzah!&amp;nbsp; The gem is being served without waiting for all the mirrors to be updated.&amp;nbsp; Now I just need to write a little code (update 6/29, done) to remove file names from the list after 24 hours or so; by that time the gem will have been sync&#39;d out.&amp;nbsp; &lt;/p&gt;

&lt;p&gt;So, to summarize, gems will now be available very soon after they&#39;re released.&amp;nbsp; Thanks Jeremy!
&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>RubyForge email statistics</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/05/rubyforge-email.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=50516254" title="RubyForge email statistics" />
    <id>tag:typepad.com,2003:post-50516254</id>
    <issued>2008-05-28T12:08:27-04:00</issued>
    <modified>2008-05-31T03:03:00Z</modified>
    <created>2008-05-28T16:08:27Z</created>
    <summary>I came across the Lire log analysis tool yesterday and just had to run it on RubyForge&#39;s mail server (yay Postfix!) logs. Some notes: A week of Postfix log files for RubyForge is 300 MB, so Lire took around an...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;I came across the &lt;a href=&quot;http://www.logreport.org/&quot;&gt;Lire&lt;/a&gt; log analysis tool yesterday and just had to run it on RubyForge&#39;s mail server (yay &lt;a href=&quot;http://www.postfix.org/&quot;&gt;Postfix&lt;/a&gt;!) logs.&amp;nbsp; &amp;nbsp;Some notes:

&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A week of Postfix log files for RubyForge is 300 MB, so Lire took around an hour and a half (on a dual Xeon workstation) to process the log and create the reports.&lt;/li&gt;
&lt;li&gt;RubyForge sent 111,000 messages during that week; this totalled 900 MB of data.&amp;nbsp; Another 45,000 messages were either queued or were undeliverable, so the total number of messages handled in one way or another was 156,000.&lt;/li&gt;
&lt;li&gt;The busiest day in terms of email count was May 23 with 31,000 emails sent.&lt;/li&gt;
&lt;li&gt;The busiest day in terms of data volume was May 20 with 20,000 emails sent comprising 231 MB of data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&#39;d post the entire report, but it&#39;s got a bunch of email addresses in it and I don&#39;t want to make those available to spammers - not that spammers can&#39;t figure them out anyway, but still.&amp;nbsp; 

&lt;/p&gt;

&lt;p&gt;This is more or less a stock Postfix install with just a few tweaks.&amp;nbsp; I&#39;ve got &lt;code&gt;default_process_limit&lt;/code&gt; set to 500, the &lt;code&gt;bounce_size_limit&lt;/code&gt; is 10K, and &lt;code&gt;smtpd_client_connection_count_limit&lt;/code&gt; is set to 5.&amp;nbsp; We&#39;ve also got &lt;a href=&quot;http://postgrey.schweikert.ch/&quot;&gt;postgrey&lt;/a&gt; for greylisting - the verified_senders.db file is 251 MB! - and a few header and body checks.&amp;nbsp; We run &lt;a href=&quot;http://www.list.org/&quot;&gt;Mailman&lt;/a&gt; with 24 OutgoingRunners and 12 RetryRunners; all other runners are just singletons. 

&lt;/p&gt;

&lt;p&gt;Things seem to be working fine, but if anyone has any suggestions on optimizing Postfix or Mailman, please pass them on to me, thanks!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Capistrano, local_repository, and deploy_via :copy</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/05/capistrano-loca.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=50240790" title="Capistrano, local_repository, and deploy_via :copy" />
    <id>tag:typepad.com,2003:post-50240790</id>
    <issued>2008-05-21T19:56:05-04:00</issued>
    <modified>2008-05-21T23:56:22Z</modified>
    <created>2008-05-21T23:56:05Z</created>
    <summary>Today I was working on a Rails app that&#39;s running on the same machine that hosts the Subversion repo. So I figured I&#39;d use local_repository to make the deployments faster. You know, that&#39;s where you have this in your config/deploy.rb:...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Today I was working on a Rails app that&#39;s running on the same machine that hosts the Subversion repo.&amp;nbsp; So I figured I&#39;d use &lt;code&gt;local_repository&lt;/code&gt; to make the deployments faster.&amp;nbsp; You know, that&#39;s where you have this in your &lt;code&gt;config/deploy.rb&lt;/code&gt;:

&lt;/p&gt;

&lt;pre&gt;set :repository,&amp;nbsp; &amp;quot;file:///path/to/svn/#{application}/trunk&amp;quot;&lt;br /&gt;set :local_repository, &amp;quot;svn+ssh://my.server.com/path/to/#{application}/trunk&amp;quot;&lt;/pre&gt;

&lt;p&gt;With these settings, Capistrano checks out the code using the file:// URI which is much faster than going over svn+ssh.&amp;nbsp; Anyhow, it was failing with a &lt;code&gt;svn: Unable to open an ra_local session to URL&lt;/code&gt; error and I couldn&#39;t get it working... until I noticed that I had left the &lt;code&gt;set :deploy_via, :copy&lt;/code&gt; line in from a previous setup.&amp;nbsp; Doh!&amp;nbsp; Once I removed that, all was well.

&lt;/p&gt;

&lt;p&gt;We could check for this with something like this in &lt;code&gt;lib/capistrano/recipes/deploy/scm/base.rb&lt;/code&gt;:

&lt;/p&gt;

&lt;pre&gt;$ diff -Naur base.rb base.new.rb &lt;br /&gt;--- base.rb&amp;nbsp; &amp;nbsp;&amp;nbsp; 2008-05-21 19:50:07.000000000 -0400&lt;br /&gt;+++ base.new.rb 2008-05-21 19:49:59.000000000 -0400&lt;br /&gt;@@ -43,6 +43,7 @@&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;# Creates a new SCM instance with the given configuration options.&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;def initialize(configuration={})&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; @configuration = configuration&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; # The next line is broken into multiple lines only for blog formatting&lt;br /&gt;+&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; logger.info &amp;quot;WARNING: You probably don&#39;t want to use &#39;set :deploy_via, :copy&#39; &lt;br /&gt; and a :local_repository together; remove &#39;set :deploy_via, :copy&#39; and things will &lt;br /&gt; probably work as expected&amp;quot; if @configuration.variables[:deploy_via] == :copy &amp;amp;&amp;amp; &lt;br /&gt; @configuration.variables[:local_repository]&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;end&lt;br /&gt; &lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;# Returns a proxy that wraps the SCM instance and forces it to operate&lt;/pre&gt;

&lt;p&gt;Are there cases in which you&#39;d actually want to use those together?&amp;nbsp; I&#39;m not sure.&amp;nbsp; We&#39;d probably want a better message than that, too :-)&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>mod_rails and Capistrano</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/05/mod_rails-and-c.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=49862512" title="mod_rails and Capistrano" />
    <id>tag:typepad.com,2003:post-49862512</id>
    <issued>2008-05-14T13:37:01-04:00</issued>
    <modified>2008-10-24T23:43:37Z</modified>
    <created>2008-05-14T17:37:01Z</created>
    <summary>Here&#39;s the Capistrano code I&#39;ve been using with mod_rails: namespace :deploy do desc &quot;Restarting mod_rails with restart.txt&quot; task :restart, :roles =&gt; :app, :except =&gt; { :no_release =&gt; true } do run &quot;touch #{current_path}/tmp/restart.txt&quot; end [:start, :stop].each do |t| desc &quot;#{t}...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Here&#39;s the Capistrano code I&#39;ve been using with mod_rails:

&lt;/p&gt;

&lt;pre&gt;namespace :deploy do&lt;br /&gt;&amp;nbsp; desc &amp;quot;Restarting mod_rails with restart.txt&amp;quot;&lt;br /&gt;&amp;nbsp; task :restart, :roles =&amp;gt; :app, :except =&amp;gt; { :no_release =&amp;gt; true } do&lt;br /&gt;&amp;nbsp; &amp;nbsp; run &amp;quot;touch #{current_path}/tmp/restart.txt&amp;quot;&lt;br /&gt;&amp;nbsp; end&lt;br /&gt;&lt;br /&gt;&amp;nbsp; [:start, :stop].each do |t|&lt;br /&gt;&amp;nbsp; &amp;nbsp; desc &amp;quot;#{t} task is a no-op with mod_rails&amp;quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; task t, :roles =&amp;gt; :app do ; end&lt;br /&gt;&amp;nbsp; end&lt;br /&gt;end&lt;/pre&gt;

&lt;p&gt;I think that&#39;s all there is to it... as far as I can tell, start and stop don&#39;t make much sense in a mod_rails context.&amp;nbsp; I suppose you could use them to disable the app altogether somehow, although that kind of relates to &lt;a href=&quot;http://code.google.com/p/phusion-passenger/issues/detail?id=53&amp;amp;colspec=ID%20Type%20Status%20Priority%20Milestone%20Stars%20Summary&quot;&gt;this issue&lt;/a&gt; about &lt;code&gt;maintenance.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Credit for the restart task goes to &lt;a href=&quot;http://jimneath.org/2008/05/10/using-capistrano-with-passenger-mod_rails/&quot;&gt;Jim Neath&lt;/a&gt;; the change I made was just to put it in the &lt;code&gt;deploy&lt;/code&gt; namespace.&amp;nbsp; Works either way, though.&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>mod_rails for your staging environment</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/05/mod_rails-for-y.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=49854586" title="mod_rails for your staging environment" />
    <id>tag:typepad.com,2003:post-49854586</id>
    <issued>2008-05-14T11:10:37-04:00</issued>
    <modified>2009-01-14T12:45:45Z</modified>
    <created>2008-05-14T15:10:37Z</created>
    <summary>This is more of a twitter than a proper blog entry, but if you&#39;re using mod_rails for an environment other than production, don&#39;t forget to set RailsEnv staging or whatever your environment name is in your Apache configuration file.</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="xhtml" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
<div xmlns="http://www.w3.org/1999/xhtml"><p>This is more of a twitter than a proper blog entry, but if you're using <a href="http://modrails.com/">mod_rails</a> for an environment other than production, don't forget to set <code>RailsEnv staging</code> or whatever your environment name is in your Apache configuration file.</p></div>
</content>



  </entry>
  <entry>
    <title>mod_rails and &quot;Apache 2... not found&quot;</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/05/mod_rails-and-a.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=49772538" title="mod_rails and &quot;Apache 2... not found&quot;" />
    <id>tag:typepad.com,2003:post-49772538</id>
    <issued>2008-05-12T21:36:39-04:00</issued>
    <modified>2008-12-09T19:22:05Z</modified>
    <created>2008-05-13T01:36:39Z</created>
    <summary>This is probably too easy a fix to even blog about, but, hey. I was installing mod_rails for the first (second?) time, and got this message when I ran passenger-install-apache2-module: * Apache 2... not found * Apache 2 development headers......</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;This is probably too easy a fix to even blog about, but, hey.&amp;nbsp; I was installing &lt;a href=&quot;http://modrails.com/&quot;&gt;mod_rails&lt;/a&gt; for the first (second?) time, and got this message when I ran &lt;code&gt;passenger-install-apache2-module&lt;/code&gt;:
&lt;/p&gt;

&lt;pre&gt; * Apache 2... not found&lt;br /&gt; * Apache 2 development headers... not found&lt;/pre&gt;
&lt;p&gt;I had Apache installed in &lt;code&gt;/usr/local/apache2&lt;/code&gt; and &lt;code&gt;/usr/local/apache2/bin&lt;/code&gt; wasn&#39;t on the PATH, so passenger&#39;s &lt;code&gt;PlatformInfo.find_httpd&lt;/code&gt; method couldn&#39;t find it.&amp;nbsp; A quick &lt;code&gt;PATH=$PATH:/usr/local/apache2/bin/ &amp;amp;&amp;amp; export PATH&lt;/code&gt;, rerun &lt;code&gt;passenger-install-apache2-module&lt;/code&gt;, and all was well.&lt;/p&gt;

&lt;p&gt;5/14/2008 update: If you do this you&#39;ll probably also want to add that directory to your PATH setting in /etc/profile; otherwise you&#39;ll get similar error messages when you run passenger-memory-stats.&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Problem trends with PMDReports</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/04/problem-trends.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=48207256" title="Problem trends with PMDReports" />
    <id>tag:typepad.com,2003:post-48207256</id>
    <issued>2008-04-09T10:46:30-04:00</issued>
    <modified>2008-04-09T14:46:45Z</modified>
    <created>2008-04-09T14:46:30Z</created>
    <summary>Ben Northrup emailed me about his PMDReports project. To quote from his project page, &quot;Whereas PMD generates and displays code quality statistics at a source code level, PMDReports persists and aggregates these statistics so that code quality can be viewed...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;&lt;a href=&quot;http://www.bennorthrop.com/&quot;&gt;Ben Northrup&lt;/a&gt; emailed me about his &lt;a href=&quot;http://www.bennorthrop.com/pmdreports/pmdreports.php&quot;&gt;PMDReports&lt;/a&gt; project.&amp;nbsp; To quote from his project page, &amp;quot;Whereas PMD generates and displays code quality statistics at a source code level, PMDReports persists and aggregates these statistics so that code quality can be viewed from a more macro, component level.&amp;quot; 

&lt;/p&gt;

&lt;p&gt;I got the latest version (0.8.2) and ran it on PMD&#39;s util package; here&#39;s the resulting &lt;a href=&quot;http://infoether.com/~tom/pmdreports_on_pmd/ComponentQualitySnapshotToday.html&quot;&gt;&amp;quot;Component Quality Snapshot Today&amp;quot;&lt;/a&gt; report.&amp;nbsp; You can drill down into the rule violations, and although I just ran it on one component I could see how this could be the makings of a nice dashboard.&amp;nbsp; It would also be interesting to see those trend graphs after a few days.

&lt;/p&gt;

&lt;p&gt;Ben&#39;s past postings are worth a read; I enjoyed &lt;a href=&quot;http://www.bennorthrop.com/Home/Blog/2007_01_17_code_quality.php&quot;&gt;Why Code Quality Tools Work&lt;/a&gt; and &lt;a href=&quot;http://www.bennorthrop.com/Home/Blog/2007_12_17_unkempt.php&quot;&gt;Why our Programming Gods are so Unkempt?&lt;/a&gt;.&amp;nbsp; Especially the latter one!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>RubyForge now has Git support</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/04/rubyforge-now-h.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=48146730" title="RubyForge now has Git support" />
    <id>tag:typepad.com,2003:post-48146730</id>
    <issued>2008-04-08T09:29:15-04:00</issued>
    <modified>2008-04-11T02:54:11Z</modified>
    <created>2008-04-08T13:29:15Z</created>
    <summary>Folks using RubyForge have been requesting alternatives to CVS and Subversion for a while - there are feature requests in for Mercurial, Monotone, Darcs, and Git. Of those, Git seems to be the most popular at the moment, so thanks...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Folks using &lt;a href=&quot;http://rubyforge.org/&quot;&gt;RubyForge&lt;/a&gt; have been requesting alternatives to CVS and Subversion for a while - there are feature requests in for Mercurial, Monotone, Darcs, and Git.&amp;nbsp; Of those, &lt;a href=&quot;http://git.or.cz/&quot;&gt;Git&lt;/a&gt; seems to be the most popular at the moment, so thanks to &lt;a href=&quot;http://scie.nti.st/&quot;&gt;Garry Dolley&lt;/a&gt;&#39;s excellent &lt;a href=&quot;http://scie.nti.st/2007/11/14/hosting-git-repositories-the-easy-and-secure-way&quot;&gt;tutorial&lt;/a&gt; on Gitosis, RubyForge now supports Git as one of the SCM choices.&amp;nbsp; &amp;nbsp; Huzzah!&amp;nbsp; &amp;nbsp;Garry not only put up the tutorial, he also volunteered &lt;a href=&quot;http://rubyforge.org/projects/ebay4r/&quot;&gt;EBay4R&lt;/a&gt; as the first project to use Git and helped me work through the initial configuration.&amp;nbsp; Thanks, Garry!&amp;nbsp; 

&lt;/p&gt;

&lt;p&gt;This Git support is still pretty new, so I&#39;m not quite sure if we&#39;ve got all the right things set up.&amp;nbsp; But you should be able to start a project, select Git as the SCM, and push to and pull from a repository on RubyForge, and the Git repos are part of the nightly backup job.&amp;nbsp; There are nine projects so far that have established Git repositories, so something must be working.&amp;nbsp; Also, I&#39;ve put up some notes in the &lt;a href=&quot;http://rubyforge.org/docman/view.php/5/460/faq.html&quot;&gt;RubyForge FAQ&lt;/a&gt; on getting started with a repository.&amp;nbsp; 

&lt;/p&gt;

&lt;p&gt;Dr. Nic Williams posted some helpful notes on &lt;a href=&quot;http://drnicwilliams.com/2008/04/08/git-for-rubyforge-accounts/&quot;&gt;using RubyForge Git repositories&lt;/a&gt;.&amp;nbsp; He&#39;s also got some ideas on RubyForge supporting both Svn and Git for a project which are being discussed in a &lt;a href=&quot;http://rubyforge.org/tracker/index.php?func=detail&amp;amp;aid=19355&amp;amp;group_id=5&amp;amp;atid=102&quot;&gt;support ticket&lt;/a&gt;.&amp;nbsp; &lt;/p&gt;

&lt;p&gt;Another thing I&#39;m thinking about is providing a sort of pseudo-SCM that lets you say &amp;quot;the source for this project is hosted on GitHub or Gitorious or some other place&amp;quot;.&amp;nbsp; Does anyone think that&#39;d be useful?

&lt;/p&gt;

&lt;p&gt;Comments and suggestions are always welcome, and as they say on the &lt;a href=&quot;http://www.railsenvy.com/&quot;&gt;Rails Envy podcast&lt;/a&gt;, let&#39;s git &#39;er done!&amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>RubyForge virtual host definitions</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/04/rubyforge-virtu.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=47897034" title="RubyForge virtual host definitions" />
    <id>tag:typepad.com,2003:post-47897034</id>
    <issued>2008-04-02T23:35:03-04:00</issued>
    <modified>2008-04-03T03:35:22Z</modified>
    <created>2008-04-03T03:35:03Z</created>
    <summary>This is a little silly, but, hey. Until this evening, all 5500+ RubyForge virtual host definitions have been embedded in one massive httpd.conf. So httpd.conf was up to around 1.5 MB, or in terms of line count: $ wc -l...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;This is a little silly, but, hey.&amp;nbsp; Until this evening, all 5500+ RubyForge virtual host definitions have been embedded in one massive httpd.conf.&amp;nbsp; So httpd.conf was up to around 1.5 MB, or in terms of line count:

&lt;/p&gt;

&lt;pre&gt;$ wc -l /usr/local/apache2/conf/bkp.httpd.conf &lt;br /&gt;71045 /usr/local/apache2/conf/bkp.httpd.conf&lt;/pre&gt;

&lt;p&gt;Nice, huh?&amp;nbsp; Yikes.&amp;nbsp; Anyhow, I finally buckled down to moving all the vhosts into separate files in a subdirectory and doing an &lt;code&gt;Include *.conf&lt;/code&gt;.&amp;nbsp; Although I&#39;ve put this off for a _long_ time, it only took about 15 minutes, makes the project management code simpler, and also makes a couple things - like project deletion - a bit easier to automate.&amp;nbsp; The only tricky bit is backing up all those files... but come to think of it, 99% of them are exactly the same (or could be generated) and thus don&#39;t need to be backed up.&amp;nbsp; The only outliers are vhosts like &lt;code&gt;gems.rubyforge.org&lt;/code&gt;, which has a &lt;code&gt;RewriteMap&lt;/code&gt; to support gem mirroring.

&lt;/p&gt;

&lt;p&gt;So often this seems to be the case... if I can just buckle down to a job it ends up being quicker and more enjoyable than I thought.&amp;nbsp; &amp;quot;In every job that must be done there is an element of fun....&amp;quot; &lt;/p&gt;

&lt;p&gt;All that said, if you notice something awry with a RubyForge virtual host, please drop me a line - I might have missed something, thanks!&lt;br /&gt; &lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Rails, Capistrano, and Ruby extension dependencies</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/03/rails-capistran.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=47554172" title="Rails, Capistrano, and Ruby extension dependencies" />
    <id>tag:typepad.com,2003:post-47554172</id>
    <issued>2008-03-26T09:48:25-04:00</issued>
    <modified>2008-03-26T13:48:42Z</modified>
    <created>2008-03-26T13:48:25Z</created>
    <summary>Sometimes if I hose up a Ruby install it won&#39;t have zlib or openssl or readline compiled in, which produces problems later when I try to get a Rails app running on there. But with a little code we can...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Sometimes if I hose up a Ruby install it won&#39;t have zlib or openssl or readline compiled in, which produces problems later when I try to get a Rails app running on there.&amp;nbsp; But with a little code we can get Capistrano to check for Ruby extensions (or, really, Ruby libraries in general) via the deploy:check task.&amp;nbsp; 

&lt;/p&gt;

&lt;p&gt;Here&#39;s the new RemoteDependency implementation; you can just put this in your deploy.rb:

&lt;/p&gt;

&lt;pre&gt;module ::Capistrano&lt;br /&gt;&amp;nbsp; module Deploy&lt;br /&gt;&amp;nbsp; &amp;nbsp; class RemoteDependency&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;def ruby_extension(extension_name, options={})&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; output_per_server = {}&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; try(&amp;quot;ruby -r#{extension_name} -e &#39;&#39;&amp;quot;, options) do |ch, stream, out|&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; output_per_server[ch[:server]] ||= &#39;&#39;&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; output_per_server[ch[:server]] += out&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; end&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; @success = true&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; errored_hosts = []&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; output_per_server.each_pair do |server, output|&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; next if output.empty?&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; errored_hosts &amp;lt;&amp;lt; server&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; end&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; if errored_hosts.any?&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; @hosts = errored_hosts.join(&#39;, &#39;)&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; output = output_per_server[errored_hosts.first]&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; @message = &amp;quot;The Ruby interpreter was unable to load the extension #{extension_name}&amp;quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; @success = false&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; end&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; self&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;end&lt;br /&gt;&amp;nbsp; &amp;nbsp; end&lt;br /&gt;&amp;nbsp; end&lt;br /&gt;end&lt;/pre&gt;

&lt;p&gt; Here&#39;s how to declare instances of this new dependency type; these go in deploy.rb also.&amp;nbsp; Note that we&#39;re only checking for these dependencies on the app server; you may not even have Ruby installed on your web servers:

&lt;/p&gt;

&lt;pre&gt;depend :remote, :ruby_extension, :zlib, :roles =&amp;gt; :app&lt;br /&gt;depend :remote, :ruby_extension, :openssl, :roles =&amp;gt; :app&lt;br /&gt;depend :remote, :ruby_extension, :readline, :roles =&amp;gt; :app&lt;/pre&gt;

&lt;p&gt;And here&#39;s a sample run:

&lt;/p&gt;

&lt;pre&gt;$ cap deploy:check&lt;br /&gt;&amp;nbsp; &amp;nbsp; triggering start callbacks for `deploy:check&#39;&lt;br /&gt;&amp;nbsp; * executing `multistage:ensure&#39;&lt;br /&gt;*** Defaulting to `production&#39;&lt;br /&gt;&amp;nbsp; * executing `production&#39;&lt;br /&gt;&amp;nbsp; * executing `deploy:check&#39;&lt;br /&gt;&amp;nbsp; * executing &amp;quot;test -d /var/www/myapp/releases&amp;quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; servers: [&amp;quot;myserver.com&amp;quot;]&lt;br /&gt;&amp;nbsp; &amp;nbsp; [myserver.com] executing command&lt;br /&gt;&amp;nbsp; &amp;nbsp; command finished&lt;br /&gt;&amp;nbsp; * executing &amp;quot;test -w /var/www/myapp&amp;quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; servers: [&amp;quot;myserver.com&amp;quot;]&lt;br /&gt;&amp;nbsp; &amp;nbsp; [myserver.com] executing command&lt;br /&gt;&amp;nbsp; &amp;nbsp; command finished&lt;br /&gt;&amp;nbsp; * executing &amp;quot;test -w /var/www/myapp/releases&amp;quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; servers: [&amp;quot;myserver.com&amp;quot;]&lt;br /&gt;&amp;nbsp; &amp;nbsp; [myserver.com] executing command&lt;br /&gt;&amp;nbsp; &amp;nbsp; command finished&lt;br /&gt;&amp;nbsp; * executing &amp;quot;which svn&amp;quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; servers: [&amp;quot;myserver.com&amp;quot;]&lt;br /&gt;&amp;nbsp; &amp;nbsp; [myserver.com] executing command&lt;br /&gt;&amp;nbsp; &amp;nbsp; command finished&lt;br /&gt;&amp;nbsp; * executing &amp;quot;which gem&amp;quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; servers: [&amp;quot;myserver.com&amp;quot;]&lt;br /&gt;&amp;nbsp; &amp;nbsp; [myserver.com] executing command&lt;br /&gt;&amp;nbsp; &amp;nbsp; command finished&lt;br /&gt;&amp;nbsp; * executing &amp;quot;ruby -rzlib -e &#39;&#39;&amp;quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; servers: [&amp;quot;myserver.com&amp;quot;]&lt;br /&gt;&amp;nbsp; &amp;nbsp; [myserver.com] executing command&lt;br /&gt;&amp;nbsp; &amp;nbsp; command finished&lt;br /&gt;&amp;nbsp; * executing &amp;quot;ruby -ropenssl -e &#39;&#39;&amp;quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; servers: [&amp;quot;myserver.com&amp;quot;]&lt;br /&gt;&amp;nbsp; &amp;nbsp; [myserver.com] executing command&lt;br /&gt;&amp;nbsp; &amp;nbsp; command finished&lt;br /&gt;&amp;nbsp; * executing &amp;quot;ruby -rreadline -e &#39;&#39;&amp;quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; servers: [&amp;quot;myserver.com&amp;quot;]&lt;br /&gt;&amp;nbsp; &amp;nbsp; [myserver.com] executing command&lt;br /&gt;&amp;nbsp; &amp;nbsp; command finished&lt;br /&gt;You appear to have all necessary dependencies installed&lt;/pre&gt;

&lt;p&gt;Note the boilerplate deploy:check commands up front followed by the custom checks for the libraries.&amp;nbsp; As always, many thanks to &lt;a href=&quot;http://weblog.jamisbuck.org/&quot;&gt;Jamis Buck&lt;/a&gt; for Capistrano!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Awesome new RubyForge hardware</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/03/awesome-new-rub.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=47041590" title="Awesome new RubyForge hardware" />
    <id>tag:typepad.com,2003:post-47041590</id>
    <issued>2008-03-14T16:15:58-04:00</issued>
    <modified>2008-12-15T21:04:27Z</modified>
    <created>2008-03-14T20:15:58Z</created>
    <summary>Last fall I posted about some sweet new hardware that Sun had sent us. Well, they&#39;ve outdone themselves this time - they sent us both a T5120 and an X4500 with 24 TB (yup, I had &quot;GB&quot; here at first,...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Last fall I posted about some sweet new &lt;a href=&quot;http://tomcopeland.blogs.com/juniordeveloper/2007/10/new-hardware-fo.html&quot;&gt;hardware&lt;/a&gt; that Sun had sent us.&amp;nbsp; Well, they&#39;ve outdone themselves this time - they sent us both a T5120 and an X4500 with 24 TB (yup, I had &amp;quot;GB&amp;quot; here at first, doh!) of storage.&amp;nbsp; Great scott!&amp;nbsp; Wow, does that X4500 weigh a ton.&lt;/p&gt;

&lt;p&gt;Pictures are below.... and I&#39;ll post more details on the uses of these machines as we get them set up.&amp;nbsp; Thanks Sun!!

&lt;/p&gt;

&lt;h3&gt;The T5120&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://tomcopeland.blogs.com/T5120.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h3&gt;The X4500&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://tomcopeland.blogs.com/X4500.jpg&quot; /&gt;&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Lots of RubyForge traffic</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/03/lots-of-rubyfor.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=46612408" title="Lots of RubyForge traffic" />
    <id>tag:typepad.com,2003:post-46612408</id>
    <issued>2008-03-05T10:04:01-05:00</issued>
    <modified>2008-03-05T15:04:33Z</modified>
    <created>2008-03-05T15:04:01Z</created>
    <summary>Back in Sep 2005 I posted a note about RubyForge getting 200K hits per day. I&#39;m not sure how I was calculating hits back then - was I including images and vhosts and gems and all that? Dunno. Well, anyhow,...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Back in Sep 2005 I posted a note about RubyForge getting &lt;a href=&quot;http://tomcopeland.blogs.com/juniordeveloper/2005/09/200k_hits_in_on.html&quot;&gt;200K hits per day&lt;/a&gt;.&amp;nbsp; I&#39;m not sure how I was calculating hits back then - was I including images and vhosts and gems and all that?&amp;nbsp; Dunno.&amp;nbsp; 

&lt;/p&gt;

&lt;p&gt;Well, anyhow, I did some basic &amp;quot;grep -c&amp;quot; calculations and RubyForge got 350K hits on Mar 4 - about four hits per second.&amp;nbsp; That&#39;s not counting all the vhosts, not counting RubyGem downloads, not counting images and other static content stuff.&amp;nbsp; So those are pretty much all dynamic requests, where dynamic == something that hits the DB.&amp;nbsp; Some of those are bots, of course, but, meh.&amp;nbsp; Also, some of those hits result in redirects to other sites - e.g., when someone downloads a file the download is recorded in the database and then the request is redirected off to a mirror.

&lt;/p&gt;

&lt;p&gt;So once again let me seize this opportunity to thank the RubyForge &lt;a href=&quot;http://rubyforge.org/credits/&quot;&gt;mirror providers&lt;/a&gt; - without you guys serving up all the long requests RubyForge would be swamped.&amp;nbsp; Thanks to &lt;a href=&quot;http://www.lulu.com/content/1700117&quot;&gt;Gregory Brown&lt;/a&gt; for monitoring the user&#39;s forum and answering questions.&amp;nbsp; Thanks to &lt;a href=&quot;http://www.workingwithrails.com/person/9449-dennis-oelkers&quot;&gt;Dennis Oelkers&lt;/a&gt; for keeping the mirroring infrastructure running.&amp;nbsp; And thanks to &lt;a href=&quot;http://www.tbray.org/ongoing/&quot;&gt;Tim Bray&lt;/a&gt; (and Sun) for the lovely X4200 that RubyForge is currently running on.&amp;nbsp; Good times!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>mod_security woes</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/02/mod_security-wo.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=46181542" title="mod_security woes" />
    <id>tag:typepad.com,2003:post-46181542</id>
    <issued>2008-02-26T06:15:22-05:00</issued>
    <modified>2008-02-26T11:15:39Z</modified>
    <created>2008-02-26T11:15:22Z</created>
    <summary>A customer had an unfortunate experience with mod_security recently. They were getting occasional HTTP 500 responses from their Rails app on certain large pages. ExceptionNotifier wasn&#39;t reporting any stacktraces, and a check of the actual log file didn&#39;t show any...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;A customer had an unfortunate experience with mod_security recently. They were getting occasional HTTP 500 responses from their Rails app on certain large pages.&amp;nbsp; ExceptionNotifier wasn&#39;t reporting any stacktraces, and a check of the actual log file didn&#39;t show any problems either.&amp;nbsp; Even connecting to the production machines and running the same request using script/console&#39;s app.get worked fine! 
&lt;/p&gt;

&lt;p&gt;Finally they took an entire slice out of their production architecture and made the request while watching the Apache logs.&amp;nbsp; And lo and behold - mod_security was seeing a large response and returning a 500 code.&lt;br /&gt;
This was a surprise since mod_security had been (we thought) configured in &amp;quot;logging-only&amp;quot; mode.&amp;nbsp; &lt;/p&gt;
&lt;p&gt;Lessons learned are 1) load up the staging environment with lots of data to shake out any such issues, 2) study the mod_security settings to ensure it&#39;ll do what&#39;s expected, and 3) if ExceptionNotifier and app.get&lt;br /&gt;
tells you no exception is happening in the Rails app, widen your search.&amp;nbsp; 
&lt;/p&gt;
&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>TeaClipse and JavaCC</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/02/teaclipse-and-j.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=46129462" title="TeaClipse and JavaCC" />
    <id>tag:typepad.com,2003:post-46129462</id>
    <issued>2008-02-25T12:15:27-05:00</issued>
    <modified>2008-03-25T02:50:23Z</modified>
    <created>2008-02-25T17:15:27Z</created>
    <summary>I recently came across Matthew Hind&#39;s TeaClipse project which he recently announced on his blog. TeaClipse is an open source compiler for the Tea programming language. You can read Matthew&#39;s thesis on the project here. Note that if you want...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;I recently came across Matthew Hind&#39;s &lt;a href=&quot;http://code.google.com/p/teaclipse/&quot;&gt;TeaClipse&lt;/a&gt; project which he &lt;a href=&quot;http://clearlyvague.com/?p=25&quot;&gt;recently announced&lt;/a&gt; on his blog.&amp;nbsp; TeaClipse is an open source compiler for the &lt;a href=&quot;http://www.pdmfc.com/tea-site/info/index.html&quot;&gt;Tea programming&lt;/a&gt; language.&amp;nbsp; You can read Matthew&#39;s thesis on the project &lt;a href=&quot;http://code.google.com/p/teaclipse/downloads/list&quot;&gt;here&lt;/a&gt;.&amp;nbsp; Note that if you want to use the grammar you&#39;ll need to make a couple of small modifications to SimpleNode that he describes in the thesis - and if you don&#39;t make them, the compiler will tell you about them.

&lt;/p&gt;

&lt;p&gt;I ran the grammar through JJDoc and &lt;a href=&quot;http://infoether.com/~tom/tea.html&quot;&gt;here is the HTML&#39;ized grammer&lt;/a&gt;.&amp;nbsp; &amp;nbsp;It looks good and is pretty straightforward.&amp;nbsp; One minor suggestion I have is that the &lt;code&gt;OPTIMIZE_TOKEN_MANAGER&lt;/code&gt; option is no longer available in JavaCC 4.0, so it can be removed from the grammar.&amp;nbsp; You may want to use &lt;code&gt;CACHE_TOKENS&lt;/code&gt; instead, especially in this case since the Tea editor is reading from a file rather than processing new characters as they&#39;re typed.

&lt;/p&gt;

&lt;p&gt;Another small suggestion - JavaCC now has a facility for inlining assignment code more effectively.&amp;nbsp; For example, rather than doing this:

&lt;/p&gt;

&lt;pre&gt;void foo():&lt;br /&gt;{&amp;nbsp; &amp;nbsp;Token t;}&lt;br /&gt;{&lt;br /&gt; t = &amp;lt;TYPE&amp;gt;&lt;type&gt;&lt;p&gt; { jjtThis.firstValue = t.image;}&lt;br /&gt;}&lt;/p&gt;&lt;/type&gt;&lt;/pre&gt;

&lt;p&gt;

You can now do this:

&lt;/p&gt;

&lt;pre&gt;void foo():&lt;br /&gt;{}&lt;br /&gt;{&lt;br /&gt; jjtThis.firstValue = &lt;type&gt;&lt;p&gt;&amp;lt;TYPE&amp;gt;.image&lt;br /&gt;}&lt;/p&gt;&lt;/type&gt;&lt;/pre&gt;

&lt;p&gt;That is, you can just make the assignment inline rather than first assigning to a temporary variable and then making another assignment in a syntactic action.&amp;nbsp; This saves some space, is arguably easier to read, and is more efficient to boot.&amp;nbsp; &amp;nbsp; The method_declaration nonterminal in tea.jjt is one place where this might be useful.

&lt;/p&gt;

&lt;p&gt;I&#39;m reading through the rest of Matthew&#39;s thesis now and learning a bit about quadruples.&amp;nbsp; Good stuff!&amp;nbsp; &amp;nbsp;And of course, as the author of a &lt;a href=&quot;http://generatingparserswithjavacc.com/&quot;&gt;JavaCC book&lt;/a&gt; I&#39;m always happy to see new grammars surface!
&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Rails and ProxyPreserveHost</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/02/rails-and-proxy.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=45995132" title="Rails and ProxyPreserveHost" />
    <id>tag:typepad.com,2003:post-45995132</id>
    <issued>2008-02-22T10:04:32-05:00</issued>
    <modified>2008-02-22T15:04:51Z</modified>
    <created>2008-02-22T15:04:32Z</created>
    <summary>This will probably be a &quot;duh&quot; thing for the Apache gurus out there, but it was a learning experience for me. The other day I ran into a little Apache/Rails problem. I had a front end server running Apache, and...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;This will probably be a &amp;quot;duh&amp;quot; thing for the Apache gurus out there, but it was a learning experience for me.&amp;nbsp; The other day I ran into a little Apache/Rails problem.&amp;nbsp; I had a front end server running Apache, and a back end server running Apache and proxying to a Mongrel cluster.&amp;nbsp; When the Rails app controller code would call &lt;code&gt;do_redirect&lt;/code&gt; the client browser would be redirected to the back end server&#39;s hostname.&amp;nbsp; &amp;nbsp;The solution was two-fold:

&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I added a &lt;code&gt;ProxyPreserveHost On&lt;/code&gt; directive to the front end server&lt;/li&gt;&lt;br /&gt;

&lt;li&gt;I added a &lt;code&gt;ServerAlias frontend&lt;/code&gt; directive on the backend server to the definition for the virtual host that I was proxying to.&amp;nbsp; This might not have been necessary if we only had one vhost on the backend, or if we had no vhosts on the backend and were just proxying to an IP address.&amp;nbsp; &amp;nbsp; But we had multiple vhosts on that backend machine, so, bob&#39;s your uncle.

&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;Once those directives were in place the redirects worked as expected and all was well.&amp;nbsp; Apache for the win!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>More JavaCC optimizations</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/01/more-javacc-opt.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=44596628" title="More JavaCC optimizations" />
    <id>tag:typepad.com,2003:post-44596628</id>
    <issued>2008-01-24T09:44:10-05:00</issued>
    <modified>2008-02-27T20:20:11Z</modified>
    <created>2008-01-24T14:44:10Z</created>
    <summary>Paul Cager has been improving JavaCC again - this time he reduced the amount of object allocation done by a JavaCC-generated lexer. This began with a nicely detailed bug filed by s_fuhrm that showed that a new StringBuffer is being...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;&lt;a href=&quot;http://www.paulcager.org/&quot;&gt;Paul Cager&lt;/a&gt; has been improving JavaCC again - this time he reduced the amount of object allocation done by a JavaCC-generated lexer.&amp;nbsp; 

&lt;/p&gt;

&lt;p&gt;This began with a nicely detailed &lt;a href=&quot;https://javacc.dev.java.net/issues/show_bug.cgi?id=176&quot;&gt;bug filed by s_fuhrm&lt;/a&gt; that showed that a new StringBuffer is being recreated for every token that&#39;s parsed when we could really just reuse one StringBuffer and clear it out after each match.&amp;nbsp; The change that Paul implemented is especially nice in that it also eliminates an &lt;code&gt;if&lt;/code&gt; statement (a null check), so that&#39;s an extra performance boost. 

&lt;/p&gt;

&lt;p&gt;The only gotcha is that if you&#39;ve been using the &lt;code&gt;image&lt;/code&gt; variable in your lexical actions, you&#39;ll start getting different results.&amp;nbsp; For example, suppose you had a lexical specification like this:

&lt;/p&gt;

&lt;pre&gt;TOKEN_MGR_DECLS : {&lt;br /&gt;&amp;nbsp; static StringBuffer lastB = new StringBuffer();&lt;br /&gt;&amp;nbsp; static void p() {&lt;br /&gt;&amp;nbsp; &amp;nbsp; System.out.println(&amp;quot;lastB is : &amp;quot; + lastB);&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;}&lt;br /&gt;TOKEN : {&lt;br /&gt;&amp;nbsp; &amp;lt;A : &amp;quot;a&amp;quot;&amp;gt; { p(); }&lt;br /&gt;&amp;nbsp; | &amp;lt;B : &amp;quot;b&amp;quot; ([&amp;quot;1&amp;quot;-&amp;quot;9&amp;quot;])* &amp;gt; { p() ; lastB = image; }&lt;br /&gt;}&lt;/pre&gt;

&lt;p&gt;With JavaCC 4.0, the &lt;code&gt;image&lt;/code&gt; would never be reused and with input data of &lt;code&gt;b12 a b42&lt;/code&gt; you&#39;d get output like this:

&lt;/p&gt;

&lt;pre&gt;lastB is : &lt;br /&gt;lastB is : b12&lt;br /&gt;lastB is : b12&lt;/pre&gt;

&lt;p&gt;In other words, that &lt;code&gt;image&lt;/code&gt; object that &lt;code&gt;lastB&lt;/code&gt; is referencing would stick around.&amp;nbsp; With this change in place, &lt;code&gt;image&lt;/code&gt; (like the Matrix) is reloaded and you&#39;ll get this:

&lt;/p&gt;

&lt;pre&gt;lastB is : &lt;br /&gt;lastB is : a&lt;br /&gt;lastB is : b42&lt;/pre&gt;

&lt;p&gt;One solution is to use &lt;code&gt;matchedToken.image&lt;/code&gt; instead - or you could just call &lt;code&gt;toString&lt;/code&gt; on the &lt;code&gt;image&lt;/code&gt; reference to get a copy of the String.&amp;nbsp; &amp;nbsp; You can see an example of this on page 59 of &lt;a href=&quot;http://generatingparserswithjavacc.com/&quot;&gt;Generating Parsers with JavaCC&lt;/a&gt;.&amp;nbsp; Finally, if you want to give your grammar a whirl with this change, I&#39;ve posted a new javacc.jar built from the latest code in CVS &lt;a href=&quot;http://infoether.com/~tom/javacc.jar&quot;&gt;here&lt;/a&gt;.&amp;nbsp; Enjoy!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>RubyForge - 5000 projects</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/01/rubyforge---500.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=44523930" title="RubyForge - 5000 projects" />
    <id>tag:typepad.com,2003:post-44523930</id>
    <issued>2008-01-22T20:03:55-05:00</issued>
    <modified>2008-02-27T19:58:05Z</modified>
    <created>2008-01-23T01:03:55Z</created>
    <summary>Just a quick post to note that RubyForge just went over the 5K project mark - ruby-reddit was #5000. Good times, and here&#39;s to the next 5000 projects!</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Just a quick post to note that RubyForge just went over the 5K project mark - &lt;a href=&quot;http://rubyforge.org/projects/ruby-reddit/&quot;&gt;ruby-reddit&lt;/a&gt; was #5000.  Good times, and here&#39;s to the next 5000 projects!&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>RubyForge and transparent proxies</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2008/01/rubyforge-and-t.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=43648472" title="RubyForge and transparent proxies" />
    <id>tag:typepad.com,2003:post-43648472</id>
    <issued>2008-01-03T23:07:09-05:00</issued>
    <modified>2008-03-04T15:05:22Z</modified>
    <created>2008-01-04T04:07:09Z</created>
    <summary>Some folks have reported problems logging into RubyForge from networks behind certain ISPs&#39; not-so-transparent proxies - Telkom and TPG users seem to have this problem, and folks in Singapore have reported it as well. So there&#39;s been a long-standing bug...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Some folks have reported problems logging into &lt;a href=&quot;http://rubyforge.org&quot;&gt;RubyForge&lt;/a&gt; from networks behind certain ISPs&#39; not-so-transparent proxies - Telkom and TPG users seem to have this problem, and folks in Singapore have reported it as well.&amp;nbsp; So there&#39;s been a &lt;a href=&quot;http://rubyforge.org/tracker/index.php?func=detail&amp;amp;aid=10650&amp;amp;group_id=5&amp;amp;atid=101&quot;&gt;long-standing bug&lt;/a&gt; on this problem.&amp;nbsp; 

&lt;/p&gt;

&lt;p&gt;I think we&#39;ve got a work around for this now since I&#39;ve hacked some IP subnet exclusions into the session tracking code.&amp;nbsp; It seems to be working; thanks to &lt;a href=&quot;http://rubyforge.org/projects/screensvr/&quot;&gt;Sau Sheong Chang&lt;/a&gt; and &lt;a href=&quot;http://www.workingwithrails.com/person/6602-andy-shen&quot;&gt;Andy Shen&lt;/a&gt; for helping to test out the fix.&amp;nbsp; 

&lt;/p&gt;

&lt;p&gt;So anyhow, I&#39;m closing that bug. If you have problems logging into the RubyForge site and keep getting cookie-related errors, please drop me a note and we&#39;ll sort through it.&amp;nbsp; Thanks!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Updates for the Ruby PostgreSQL native driver</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/12/updates-for-the.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=42774382" title="Updates for the Ruby PostgreSQL native driver" />
    <id>tag:typepad.com,2003:post-42774382</id>
    <issued>2007-12-12T23:49:07-05:00</issued>
    <modified>2008-02-26T08:36:00Z</modified>
    <created>2007-12-13T04:49:07Z</created>
    <summary>UPDATE: Jeff Davis has released a new PostgreSQL native driver gem, so just doing a gem install postgres should work fine again; no need for the hackery that I had suggested in this post. Thanks to Jeff for getting a...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;

&lt;p&gt;&lt;strong&gt;UPDATE: Jeff Davis has released a new PostgreSQL native driver gem, so just doing a &lt;code&gt;gem install postgres&lt;/code&gt; should work fine again; no need for the hackery that I had suggested in this post.&amp;nbsp; Thanks to Jeff for getting a new gem out there so quickly!&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;del&gt;&lt;a href=&quot;http://www.ittoolbox.com/profiles/josh_berkus&quot;&gt;Josh Berkus&lt;/a&gt; let me and some other folks know that the gem that you get with &amp;quot;gem install postgres&amp;quot; won&#39;t work with PostgreSQL 8.3.&amp;nbsp; That gem (postgres-0.7.1 gem) has been languishing for a while and is finally, well, gone.&amp;nbsp; So if you do a &amp;quot;gem install postgres&amp;quot; you&#39;ll see this:&lt;/del&gt;

&lt;/p&gt;

&lt;pre&gt;$ gem install postgres&lt;br /&gt;ERROR:&amp;nbsp; While executing gem ... (Gem::GemNotFoundException)&lt;br /&gt;&amp;nbsp; &amp;nbsp; Could not find postgres (&amp;gt; 0) in the repository&lt;/pre&gt;

&lt;p&gt;&lt;del&gt;OK, so, now what?&amp;nbsp; Well, &lt;a href=&quot;http://j-davis.com/&quot;&gt;Jeff Davis&lt;/a&gt; (who originally &lt;a href=&quot;http://archives.postgresql.org/pgsql-interfaces/2007-12/msg00001.php&quot;&gt;noticed&lt;/a&gt; the breakage) has been maintaining the driver in a different RubyForge project, &lt;a href=&quot;http://rubyforge.org/projects/ruby-pg/&quot;&gt;ruby-pg&lt;/a&gt;.&amp;nbsp; So to use his Postgres library, go to &lt;a href=&quot;http://rubyforge.org/frs/?group_id=3214&quot;&gt;the ruby-pg files page&lt;/a&gt;, download the latest, untar it, and do a &lt;code&gt;ruby extconf.rb &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install&lt;/code&gt;.&amp;nbsp; Huzzah!&lt;/del&gt;

&lt;/p&gt;

&lt;p&gt;&lt;del&gt;I noticed that when I built and installed the library, I ran it with Rails and got the error &lt;code&gt;MissingSourceFile: no such file to load -- postgres&lt;/code&gt;.&amp;nbsp; I had to tweak ActiveRecord to pick up the new library, specifically, I edited line 7 of&amp;nbsp; &lt;code&gt;activerecord-some_version_number_like_1.14.4/lib/active_record/connection_adapters/postgresql_adapter.rb&lt;/code&gt; to read &lt;code&gt;require_library_or_gem &#39;pg&#39; unless self.class.const_defined?(:PGconn)&lt;/code&gt;.&amp;nbsp; There&#39;s probably a better way to do this, please feel free to chime in with a comment or just email me or whatever... thanks!&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;As a last resort, the &amp;quot;postgres-pr&amp;quot; gem is still available.&amp;nbsp; That&#39;s the pure Ruby driver, so it&#39;s very slow.&amp;nbsp; I haven&#39;t tried it with PostgreSQL 8.3 either, so, who knows.&amp;nbsp; And as a last last resort, I stuck a gzip&#39;d copy of postgres-0.7.1.gem &lt;a href=&quot;http://rubyforge.org/frs/?group_id=5&quot;&gt;here&lt;/a&gt;, so you can always just grab that too.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;Thanks to Jeff for keeping this driver going, and thanks to Josh for the prodding!&lt;/del&gt;&lt;/p&gt;
&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Finding copy/pasted code in a Rails app</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/12/finding-copypas.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=42351026" title="Finding copy/pasted code in a Rails app" />
    <id>tag:typepad.com,2003:post-42351026</id>
    <issued>2007-12-03T10:05:01-05:00</issued>
    <modified>2008-02-26T02:13:35Z</modified>
    <created>2007-12-03T15:05:01Z</created>
    <summary>Ryan Owens and I were looking at a Rails app a few days ago; we knew that there was some view code that had been copied and pasted but we weren&#39;t sure exactly where it was. When I was doing...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Ryan Owens and I were looking at a Rails app a few days ago; we knew that there was some view code that had been copied and pasted but we weren&#39;t sure exactly where it was.&amp;nbsp; When I was doing Java fulltime I had worked on a copy/paste detector &lt;a href=&quot;http://pmd.sourceforge.net/cpd.html&quot;&gt;CPD&lt;/a&gt;; this handy utility has support for several languages including - thanks to &lt;a href=&quot;http://jdj.sys-con.com/author/298Blut.htm&quot;&gt;Zev Blut&lt;/a&gt; - Ruby!

&lt;/p&gt;

&lt;p&gt;So we went to the CPD web page, fired it up via the Java Web Start link, had it scan app/controllers/ as a trial run, and lo and behold, it found a couple of duplicate methods!&amp;nbsp; Then we twiddled the settings to check the .rhtml files - we selected the &amp;quot;by extension&amp;quot; setting from the &amp;quot;language&amp;quot; dropdown, and put &amp;quot;rhtml&amp;quot; in the &amp;quot;extension&amp;quot; text field.&amp;nbsp; We kicked it off and what do you know - it found the exact duplication that we were looking for.&amp;nbsp; A few minutes later we had cleaned all that up and checked it in.&amp;nbsp; Good times.

&lt;/p&gt;

&lt;p&gt;The Ruby support isn&#39;t as good as it could be; it&#39;d be nicer if we had a real &lt;a href=&quot;http://javacc.dev.java.net/&quot;&gt;JavaCC&lt;/a&gt; tokenizer for Ruby and it&#39;d also be nice if we had one for ERB.&amp;nbsp; Right now we just skip spaces and comments and pretty much every other character is seen as a token.&amp;nbsp; So someone should get my &lt;a href=&quot;http://generatingparserswithjavacc.com/&quot;&gt;JavaCC book&lt;/a&gt; and do this work.&amp;nbsp; If I get motivated, perhaps that someone will be me....&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>PMD 4.1 released!</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/11/pmd-41-released.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=41799600" title="PMD 4.1 released!" />
    <id>tag:typepad.com,2003:post-41799600</id>
    <issued>2007-11-20T09:38:12-05:00</issued>
    <modified>2008-09-24T20:44:16Z</modified>
    <created>2007-11-20T14:38:12Z</created>
    <summary>Xavier Le Vourch has released PMD 4.1! PMD is a Java static code analysis utility - it finds unused code, design issues, duplicated code, and much more. I posted earlier about the release candidate, and the 4.1 final is pretty...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;&lt;a href=&quot;http://brittanysoftware.com/index.html&quot;&gt;Xavier Le Vourch&lt;/a&gt; has released &lt;a href=&quot;http://pmd.sf.net/&quot;&gt;PMD&lt;/a&gt; 4.1!&amp;nbsp; &amp;nbsp;PMD is a Java static code analysis utility - it finds unused code, design issues, duplicated code, and much more.&amp;nbsp; I posted &lt;a href=&quot;http://tomcopeland.blogs.com/juniordeveloper/2007/11/pmd-41-rc1---14.html&quot;&gt;earlier&lt;/a&gt; about the release candidate, and the 4.1 final is pretty much the same code - 14 new rules, a bunch of bug fixes, fewer false positives, and the IntelliJ IDEA integration works again.&amp;nbsp; You can &lt;a href=&quot;https://sourceforge.net/project/showfiles.php?group_id=56262&amp;amp;package_id=51441&amp;amp;release_id=554834&quot;&gt;download this release&lt;/a&gt; or &lt;a href=&quot;https://sourceforge.net/project/shownotes.php?release_id=554834&amp;amp;group_id=56262&quot;&gt;view the changelog&lt;/a&gt;.

&lt;/p&gt;

&lt;p&gt;On the CPD (copy/pasted code detector) side of the house there&#39;s better Ruby support and a new Microsoft Visual Studio output format.&amp;nbsp; I used the Ruby CPD checker to scan a Rails app just yesterday and it worked great - it found a couple of duplicated methods across some helpers and controllers.&amp;nbsp; You can even check .rhtml files using the &amp;quot;Any language&amp;quot; support and find duplicated code there.

&lt;/p&gt;

&lt;p&gt;PMD continues to develop nicely; I hope to post on the type resolution inner workings soon.&amp;nbsp; Go PMD!&amp;nbsp; &amp;nbsp;And of course, go &lt;a href=&quot;http://pmdapplied.com/&quot;&gt;PMD book&lt;/a&gt;!&amp;nbsp; Now a mere $20.&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>JDeveloper PMD plugin release</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/11/jdeveloper-pmd-.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=41596368" title="JDeveloper PMD plugin release" />
    <id>tag:typepad.com,2003:post-41596368</id>
    <issued>2007-11-15T10:19:38-05:00</issued>
    <modified>2008-02-25T16:04:00Z</modified>
    <created>2007-11-15T15:19:38Z</created>
    <summary>The PMD plugin for JDeveloper has been brought up to date thanks to Torsten Kleiber. Here are the release notes, and you can download the plugin here. From the release notes, it looks like this version of the plugin should...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;The &lt;A href=&quot;http://pmd.sf.net/&quot;&gt;PMD&lt;/a&gt; plugin for JDeveloper has been brought up to date thanks to Torsten Kleiber.  Here are the &lt;a href=&quot;https://sourceforge.net/project/shownotes.php?release_id=530073&quot;&gt;release notes&lt;/a&gt;, and you can download the plugin &lt;a href=&quot;https://sourceforge.net/project/showfiles.php?group_id=56262&amp;package_id=75287&amp;release_id=530073&quot;&gt;here&lt;/a&gt;.    From the release notes, it looks like this version of the plugin should work in JDeveloper 11.1.1 Developer Preview 2.    Also, you may be able to upgrade the plugin from within JDeveloper itself - there&#39;s a new zip file on the update site (http://pmd.sf.net), but I haven&#39;t tried that.  I&#39;ll try to give it a whirl later.&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>PMD 4.1 rc1 - 14 new rules</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/11/pmd-41-rc1---14.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=41281854" title="PMD 4.1 rc1 - 14 new rules" />
    <id>tag:typepad.com,2003:post-41281854</id>
    <issued>2007-11-08T10:11:11-05:00</issued>
    <modified>2008-02-25T10:47:55Z</modified>
    <created>2007-11-08T15:11:11Z</created>
    <summary>Xavier Le Vourch has released PMD 4.1 rc1! PMD is a Java code analysis utility that includes a bunch of rules and makes it easy to write custom rules to meet your needs. This release has a whopping 14 new...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;&lt;a href=&quot;http://brittanysoftware.com/index.html&quot;&gt;Xavier Le Vourch&lt;/a&gt; has released &lt;a href=&quot;https://sourceforge.net/project/showfiles.php?group_id=56262&quot;&gt;PMD 4.1 rc1&lt;/a&gt;!&amp;nbsp; &amp;nbsp; PMD is a Java code analysis utility that includes a bunch of rules and makes it easy to write custom rules to meet your needs.

&lt;/p&gt;

&lt;p&gt;This release has a whopping 14 new rules, including some EJB sanity checks like &lt;code&gt;DoNotCallSystemExit&lt;/code&gt; and &lt;code&gt;StaticEJBFieldShouldBeFinal&lt;/code&gt;, a design ruleset addition with &lt;code&gt;EmptyMethodInAbstractClassShouldBeAbstract&lt;/code&gt;, and a check for a specific embedded literal type with &lt;code&gt;AvoidUsingHardCodedIP&lt;/code&gt;.

&lt;/p&gt;

&lt;p&gt;PMD 4.1rc1 includes a pile of bug fixes and features.&amp;nbsp; False positives have been eliminated from &lt;code&gt;BooleanInstantiation&lt;/code&gt;, &lt;code&gt;UnusedPrivateField&lt;/code&gt;, &lt;code&gt;SingularField&lt;/code&gt;, and various other rules.&amp;nbsp; &lt;code&gt;CloneMethodMustImplementCloneable&lt;/code&gt; no longer throws exceptions when checking enums.&amp;nbsp; There&#39;s a new &amp;quot;nicehtml&amp;quot; renderer, Jaxen has been upgraded to 1.1.1, and &lt;a href=&quot;http://pmd.sf.net/cpd.html&quot;&gt;CPD&lt;/a&gt;&#39;s Ruby support is better.

&lt;/p&gt;

&lt;p&gt;Xavier, Allan, Wouter, and Romain have also made good progress on type resolution... but I&#39;ll write that up in another post.&amp;nbsp; Go PMD!&amp;nbsp; &amp;nbsp; And of course, go &lt;a href=&quot;http://pmdapplied.com/&quot;&gt;PMD book&lt;/a&gt;!&amp;nbsp; Now a mere $20.&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>RubyForge on Rails</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/11/rubyforge-on-ra.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=41231504" title="RubyForge on Rails" />
    <id>tag:typepad.com,2003:post-41231504</id>
    <issued>2007-11-07T09:55:33-05:00</issued>
    <modified>2008-02-25T09:37:30Z</modified>
    <created>2007-11-07T14:55:33Z</created>
    <summary>Since I&#39;ve been doing a lot of Rails lately, I&#39;ve been talking with Rich Kilmer and Ryan Owens about porting RubyForge to Rails. Right now RubyForge runs on a somewhat customized version of GForge. Some noodlings on what a rewrite...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Since I&#39;ve been doing a lot of Rails lately, I&#39;ve been talking with &lt;a href=&quot;http://richkilmer.blogs.com/&quot;&gt;Rich Kilmer&lt;/a&gt; and Ryan Owens about porting RubyForge to Rails.&amp;nbsp; Right now RubyForge runs on a somewhat customized version of &lt;a href=&quot;http://gforge.org/&quot;&gt;GForge&lt;/a&gt;.&amp;nbsp; Some noodlings on what a rewrite would involve:

&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One cost would be that we would have our own codebase that we&#39;d then have to support.&amp;nbsp; And one benefit is that we&#39;d have our own codebase that we&#39;d then be more able to support :-)&amp;nbsp; The performance would probably be about the same; the current site is pretty snappy.&amp;nbsp; &lt;/li&gt;

&lt;li&gt;We&#39;re currently running GForge 4.0.2.&amp;nbsp; It would make sense to upgrade to the newest release (4.5.x or even 4.6 beta) in case anyone other GForge users wanted to follow suit.&lt;/li&gt;

&lt;li&gt;We could probably port to Rails by doing an ActiveRecord model on the existing schema.&amp;nbsp; Doing an AR model first would let us do some of the peripheral parts - like the RSS feeds and the cronjobs and such - without affecting the core code.&lt;/li&gt;

&lt;li&gt;This would take a fair bit of effort, and a lot of the work would be stuff that I&#39;m not good at - user interface, layouts, CSS.&amp;nbsp; &amp;nbsp;Maybe we could make the job simpler by just supporting one theme and then re-adding the other themes as we had time.&amp;nbsp; Ryan could do this stuff better than I, but it&#39;d be in his spare time, which is already in high demand.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A rewrite would mean a lot of work in people&#39;s spare time and no one would see any initial benefit.&amp;nbsp; But it make it easier for us to add more AJAXy niftiness and other features as needed.&amp;nbsp; &amp;nbsp;But also.... it would probably be fun.&amp;nbsp; That might tip the balance :-)&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>JavaCC/JJTree file generation bug fix</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/11/javaccjjtree-fi.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=41123680" title="JavaCC/JJTree file generation bug fix" />
    <id>tag:typepad.com,2003:post-41123680</id>
    <issued>2007-11-05T09:53:24-05:00</issued>
    <modified>2008-12-13T18:15:03Z</modified>
    <created>2007-11-05T14:53:24Z</created>
    <summary>For a long time there&#39;s been an annoying bug with JJTree and Windows. JJTree generates source files with the directory path in a comment header, and if one of the subdirectoy names starts with a &quot;u&quot; it ends up being...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;For a long time there&#39;s been an annoying bug with &lt;a href=&quot;http://javacc.dev.java.net/&quot;&gt;JJTree&lt;/a&gt; and Windows.&amp;nbsp; &amp;nbsp;JJTree generates source files with the directory path in a comment header, and if one of the subdirectoy names starts with a &amp;quot;u&amp;quot; it ends up being output as a Unicode escape.&amp;nbsp; This causes problems about ten seconds down the road when you try to compile the code.&lt;/p&gt;

&lt;p&gt;For example, suppose you&#39;re generating the JJTree files into &lt;code&gt;my\utils\dir&lt;/code&gt;.&amp;nbsp; You&#39;ll get a comment header like this in your Constants file:

&lt;/p&gt;

&lt;pre&gt;/* Generated By:JJTree: Do not edit this line.&amp;nbsp; my\utils\dir\SomeParserTreeConstants.java */&lt;/pre&gt;

&lt;p&gt;A &lt;code&gt;\u&lt;/code&gt; &lt;a href=&quot;http://java.sun.com/docs/books/jls/second_edition/html/lexical.doc.html#100850&quot;&gt;begins a Java Unicode escape sequence&lt;/a&gt;, and &lt;code&gt;\utils&lt;/code&gt; is, of course, an invalid escape sequence.&amp;nbsp; Thus the compiler chokes on this invalid sequence when it tries to lex this file.&amp;nbsp; 

&lt;/p&gt;

&lt;p&gt;Well, thanks to &lt;a href=&quot;http://www.paulcager.org/&quot;&gt;Paul Cager&lt;/a&gt;, this bug is fixed in CVS.&amp;nbsp; He actually just avoided the problem by just printing the generated file name in the comment header rather than including the whole directory path.&amp;nbsp; I&#39;ve uploaded an updated JavaCC 4.0 jar file &lt;a href=&quot;http://infoether.com/~tom/javacc.jar&quot;&gt;here&lt;/a&gt; if you want to give it a try.&amp;nbsp; &amp;nbsp;Enjoy, and thanks to Paul for cleaning this up!

&lt;/p&gt;

&lt;p&gt;Using JavaCC?&amp;nbsp; Check out my &lt;a href=&quot;http://generatingparserswithjavacc.com&quot;&gt;JavaCC book&lt;/a&gt;!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Better JJTree Visitors</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/10/better-jjtree-v.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=40715360" title="Better JJTree Visitors" />
    <id>tag:typepad.com,2003:post-40715360</id>
    <issued>2007-10-26T09:37:08-04:00</issued>
    <modified>2008-02-25T01:04:12Z</modified>
    <created>2007-10-26T13:37:08Z</created>
    <summary>JavaCC comes with a built in tree builder, JJTree. One of the nice bits about JJTree is that it will generate a visitor implementation so you can easily traverse the abstract syntax tree. However, the interface that JJTree generates looks...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;&lt;a href=&quot;http://javacc.dev.java.net/&quot;&gt;JavaCC&lt;/a&gt; comes with a built in tree builder, &lt;a href=&quot;https://javacc.dev.java.net/doc/JJTree.html&quot;&gt;JJTree&lt;/a&gt;.&amp;nbsp; One of the nice bits about
JJTree is that it will generate a visitor implementation so you can easily traverse the abstract syntax tree.&amp;nbsp; However, the interface that JJTree generates looks like this:
&lt;/p&gt;

&lt;pre&gt;public interface FooVisitor {&lt;br /&gt;&amp;nbsp; public Object visit(SimpleNode node, Object data);&lt;br /&gt;&amp;nbsp; public Object visit(ASTBar node, Object data);&lt;br /&gt;}&lt;/pre&gt;
&lt;p&gt;Since that second parameter is an Object, you&#39;re always downcasting if you want to use it.&amp;nbsp; For example, if you&#39;re passing around a Map, you&#39;ll need to do something like this in your visitor:
&lt;/p&gt;

&lt;pre&gt;public class MyVisitor extends MyVisitorAdapter {&lt;br /&gt;&amp;nbsp; public Object visit(ASTBar node, Object data) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; Map myMap = (Map)data;&lt;br /&gt;&amp;nbsp; &amp;nbsp; // do stuff with the Map&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;}&lt;/pre&gt;
&lt;p&gt;But thanks to &lt;a href=&quot;http://www.paulcager.org/&quot;&gt;Paul Cager&lt;/a&gt;, JJTree has a new &lt;code&gt;VISITOR_DATA_TYPE&lt;/code&gt; option.&amp;nbsp; Just set it like this:
&lt;/p&gt;

&lt;pre&gt;options {&lt;br /&gt;&amp;nbsp; VISITOR=true;&lt;br /&gt;&amp;nbsp; MULTI=true;&lt;br /&gt;&amp;nbsp; VISITOR_DATA_TYPE=&amp;quot;java.util.Map&amp;quot;;&lt;br /&gt;}&lt;/pre&gt;
&lt;p&gt;With this option in place, the generated visitor interface looks like this:
&lt;/p&gt;

&lt;pre&gt;public interface FooVisitor {&lt;br /&gt;&amp;nbsp; public Object visit(SimpleNode node, java.util.Map data);&lt;br /&gt;&amp;nbsp; public Object visit(ASTBar node, java.util.Map data);&lt;br /&gt;}&lt;/pre&gt;
&lt;p&gt;And now your visitor implementation can look like this - no cast necessary!
&lt;/p&gt;

&lt;pre&gt;public class MyVisitor extends MyVisitorAdapter {&lt;br /&gt;&amp;nbsp; public Object visit(ASTBar node, java.util.Map data) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; // do stuff with the Map&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;}&lt;/pre&gt;

&lt;p&gt;Note that you&#39;ll want to declare a fully-qualified type, otherwise you&#39;ll need to go back and fill in the import statements.&amp;nbsp; So it&#39;s more readable, more type-safe, and it probably yields a small runtime performance improvement due to the eliminated cast.&amp;nbsp; You can grab &lt;a href=&quot;http://infoether.com/~tom/javacc.jar&quot;&gt;a javacc.jar built from CVS here&lt;/a&gt; if you want to give it a whirl.&amp;nbsp; Props to Paul for this and his &lt;a href=&quot;http://tomcopeland.blogs.com/juniordeveloper/2007/10/a-javaccjjtree-.html&quot;&gt;other
recent bug fixes&lt;/a&gt;!

&lt;/p&gt;

&lt;p&gt;Using JavaCC or JJTree?&amp;nbsp; Get the &lt;a href=&quot;http://generatingparserswithjavacc.com/&quot;&gt;JavaCC book&lt;/a&gt;!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>A JavaCC/JJTree bug fixed</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/10/a-javaccjjtree-.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=40579720" title="A JavaCC/JJTree bug fixed" />
    <id>tag:typepad.com,2003:post-40579720</id>
    <issued>2007-10-23T09:57:03-04:00</issued>
    <modified>2008-04-06T21:10:25Z</modified>
    <created>2007-10-23T13:57:03Z</created>
    <summary>Paul Cager has been working on various JavaCC and JJTree bugs lately. Just recently he fixed a rather annoying bug; in JavaCC 4.0, the OUTPUT_DIRECTORY option setting wasn&#39;t copied from the .jjt file into the .jj file. So you&#39;d have...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;&lt;a href=&quot;http://www.paulcager.org/&quot;&gt;Paul Cager&lt;/a&gt; has been working on various &lt;a href=&quot;http://javacc.dev.java.net/&quot;&gt;JavaCC&lt;/a&gt; and JJTree bugs lately.&amp;nbsp; Just recently he fixed a rather annoying &lt;a href=&quot;https://javacc.dev.java.net/issues/show_bug.cgi?id=148&quot;&gt;bug&lt;/a&gt;; in JavaCC 4.0, the &lt;code&gt;OUTPUT_DIRECTORY&lt;/code&gt; option setting wasn&#39;t copied from the .jjt file into the .jj file.&amp;nbsp; So you&#39;d have a grammar like this:

&lt;/p&gt;

&lt;pre&gt;$ cat foo.jjt &lt;br /&gt;options {&lt;br /&gt;&amp;nbsp; OUTPUT_DIRECTORY=&amp;quot;foobar&amp;quot;;&lt;br /&gt;}&lt;br /&gt;PARSER_BEGIN(Foo)&lt;br /&gt;public class Foo {}&lt;br /&gt;PARSER_END(Foo)&lt;br /&gt;void a() : {} {&amp;quot; a&amp;quot; } &lt;/pre&gt;

&lt;p&gt;And running JJTree on it would result in an error like this:

&lt;/p&gt;

&lt;pre&gt;$ jjtree foo.jjt &lt;br /&gt;Java Compiler Compiler Version 4.0 (Tree Builder)&lt;br /&gt;(type &amp;quot;jjtree&amp;quot; with no arguments for help)&lt;br /&gt;Reading from file foo.jjt . . .&lt;br /&gt;File &amp;quot;foobar/Node.java&amp;quot; does not exist.&amp;nbsp; Will create one.&lt;br /&gt;Exception in thread &amp;quot;main&amp;quot; java.lang.Error: java.io.FileNotFoundException:&lt;br /&gt; foobar/Node.java (No such file or directory)&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; at org.javacc.jjtree.NodeFiles.ensure(Unknown Source)&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; at org.javacc.jjtree.NodeFiles.ensure(Unknown Source)&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; at org.javacc.jjtree.NodeScope.insertOpenNodeCode(Unknown Source)&lt;/pre&gt;

&lt;p&gt;And if you did create the &amp;quot;foobar&amp;quot; directory and run JJTree again, the &amp;quot;foo.jj&amp;quot; file would be created in the working directory and wouldn&#39;t have the OUTPUT_DIRECTORY option.&amp;nbsp; Booo.&amp;nbsp; However, with Paul&#39;s changes, it now works fine:

&lt;/p&gt;

&lt;pre&gt;$ ~/javacc/bin/jjtree foo.jjt &lt;br /&gt;Java Compiler Compiler Version 4.1d1 (Tree Builder)&lt;br /&gt;(type &amp;quot;jjtree&amp;quot; with no arguments for help)&lt;br /&gt;Reading from file foo.jjt . . .&lt;br /&gt;Warning: Output directory &amp;quot;foobar&amp;quot; does not exist. Creating the directory.&lt;br /&gt;File &amp;quot;foobar/Node.java&amp;quot; does not exist.&amp;nbsp; Will create one.&lt;br /&gt;File &amp;quot;foobar/SimpleNode.java&amp;quot; does not exist.&amp;nbsp; Will create one.&lt;br /&gt;Annotated grammar generated successfully in foobar/foo.jj&lt;/pre&gt;

&lt;p&gt;And the OUTPUT_DIRECTORY option is preserved:

&lt;/p&gt;

&lt;pre&gt;$ grep OUTPUT_DIRECTORY foobar/foo.jj &lt;br /&gt;&amp;nbsp; OUTPUT_DIRECTORY=&amp;quot;foobar&amp;quot;;&lt;/pre&gt;

&lt;p&gt;Good stuff!&amp;nbsp; I think we&#39;re getting close to a 4.1 release, which will be nice since it&#39;ll have lots of improvements to the Java 1.5 code that JavaCC generates, and it&#39;ll be the first official release that&#39;s BSD licensed.&amp;nbsp; &amp;nbsp;&amp;nbsp; Hopefully we can get in a few more bug fixes and then get this release out the door.
&lt;/p&gt;

&lt;p&gt;And, of course, here&#39;s a gratuitous plug for my &lt;a href=&quot;http://generatingparserswithjavacc.com/&quot;&gt;JavaCC book&lt;/a&gt;!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>A new domain specific language book - with JavaCC</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/10/a-new-domain-sp.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=40082020" title="A new domain specific language book - with JavaCC" />
    <id>tag:typepad.com,2003:post-40082020</id>
    <issued>2007-10-11T11:15:39-04:00</issued>
    <modified>2008-02-24T20:35:52Z</modified>
    <created>2007-10-11T15:15:39Z</created>
    <summary>I came across a post on Warner Onstine&#39;s blog; he&#39;s working on a book on DSLs for the Pragmatic Programmers. Sounds like a great project; and I&#39;m glad to see that they&#39;re including a chapter on what are usually known...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;I came across a post on &lt;a href=&quot;http://www.warneronstine.com/blog/articles/2007/10/10/dsl-book-in-progress&quot;&gt;Warner Onstine&#39;s blog&lt;/a&gt;; he&#39;s working on a book on DSLs for the Pragmatic Programmers.&amp;nbsp; Sounds like a great project; and I&#39;m glad to see that they&#39;re including a chapter on what are usually known as &amp;quot;external DSLs&amp;quot; with ANTLR and &lt;a href=&quot;http://javacc.dev.java.net/&quot;&gt;JavaCC&lt;/a&gt;.&amp;nbsp; 

&lt;/p&gt;

&lt;p&gt;He has a comment about how well PragProg&#39;s book production system is working.&amp;nbsp; I used what I think is a similar system - Docbook plus a bunch of customized XSLT and Ruby utilities - to put together &lt;a href=&quot;http://generatingparserswithjavacc.com/&quot;&gt;Generating Parsers with JavaCC&lt;/a&gt; and it&#39;s worked out quite nicely too.&amp;nbsp; It&#39;s great to be able to run all the code examples and have both the code and the output plugged into the book&#39;s content - no more copying and pasting code!&amp;nbsp; I was even able to do callouts, which I only used in one or two places, but it&#39;s handy to have the option.
&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>New hardware for RubyForge.</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/10/new-hardware-fo.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=40008264" title="New hardware for RubyForge." />
    <id>tag:typepad.com,2003:post-40008264</id>
    <issued>2007-10-09T21:02:59-04:00</issued>
    <modified>2008-02-24T19:52:12Z</modified>
    <created>2007-10-10T01:02:59Z</created>
    <summary>Thanks to our friends at Sun, we&#39;ve got a spiffy new X4200 M2 server (with a prodigious 8 GB of RAM) for RubyForge. It&#39;s racked up and ready to go; we&#39;re migrating it this evening. This will mean a bit...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Thanks to &lt;a href=&quot;http://www.tbray.org/ongoing/&quot;&gt;our friends at Sun&lt;/a&gt;, we&#39;ve got a spiffy new X4200 M2 server (with a prodigious 8 GB of RAM) for RubyForge.&amp;nbsp; It&#39;s racked up and ready to go; we&#39;re migrating it this evening.&amp;nbsp; This will mean a bit of downtime, but hopefully not too much.&amp;nbsp; I&#39;ll post updates here.&lt;/p&gt;

&lt;p&gt;0246 EDT: Most things should be in place.&amp;nbsp; If you notice anything awry, please let me know, thanks!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>More reliable gem installs</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/10/more-reliable-g.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=39824214" title="More reliable gem installs" />
    <id>tag:typepad.com,2003:post-39824214</id>
    <issued>2007-10-05T13:33:42-04:00</issued>
    <modified>2008-02-24T19:07:15Z</modified>
    <created>2007-10-05T17:33:42Z</created>
    <summary>You may have seen this message from &quot;gem install&quot; before: $ gem install railsERROR: While executing gem ... (Gem::GemNotFoundException) Could not find rails (&gt; 0) in any repository Then when you run &quot;gem install rails&quot; five minutes later, it installs...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Ruby</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;You may have seen this message from &amp;quot;gem install&amp;quot; before:

&lt;/p&gt;

&lt;pre&gt;$ gem install rails&lt;br /&gt;ERROR:&amp;nbsp; While executing gem ... (Gem::GemNotFoundException)&lt;br /&gt;&amp;nbsp; &amp;nbsp; Could not find rails (&amp;gt; 0) in any repository&lt;/pre&gt;

&lt;p&gt;Then when you run &amp;quot;gem install rails&amp;quot; five minutes later, it installs just fine.&amp;nbsp; This was due to the way we were rebuilding the gem index on &lt;a href=&quot;http://rubyforge.org/&quot;&gt;RubyForge&lt;/a&gt; - we were doing it &amp;quot;in place&amp;quot;, so that the current index would be overwritten and then populated over the course of the build.&amp;nbsp; These take a fair while - 10 minutes or so - and during that time the index was essentially empty.&amp;nbsp; Booooo.

&lt;/p&gt;

&lt;p&gt;Well, no longer.&amp;nbsp; &lt;a href=&quot;http://segment7.net/&quot;&gt;Eric Hodel&lt;/a&gt; has twiddled the gem index builder to build it in a temporary directory and then move it in place.&amp;nbsp; So those gem index outages should be a thing of the past.&amp;nbsp; Thanks Eric!
&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>Generating Parsers With JavaCC reviewed</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/10/generating-pars.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=39650114" title="Generating Parsers With JavaCC reviewed" />
    <id>tag:typepad.com,2003:post-39650114</id>
    <issued>2007-10-02T09:15:30-04:00</issued>
    <modified>2008-02-24T16:15:46Z</modified>
    <created>2007-10-02T13:15:30Z</created>
    <summary>I just noticed that Andy Glover has posted a nice review of my JavaCC book. He&#39;s got some kind words to say about the book, which is especially meaningful to me since I know that Andy travels all over the...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;I just noticed that &lt;a href=&quot;http://www.nofluffjuststuff.com/speaker_view.jsp?speakerId=32&quot;&gt;Andy Glover&lt;/a&gt; has posted a &lt;a href=&quot;http://thediscoblog.com/2007/09/30/book-review-generating-hip-parsers-with-javacc/&quot;&gt;nice review&lt;/a&gt; of my &lt;a href=&quot;http://generatingparserswithjavacc.com/&quot;&gt;JavaCC book&lt;/a&gt;.  He&#39;s got some kind words to say about the book, which is especially meaningful to me since I know that Andy travels all over the place giving talks and so he&#39;s got a good overview of the kinds of problems that folks are dealing with these days.  As he says, DSLs are the new hotness and tools like JavaCC can help make the front end part of a DSL easier to build.  Thanks Andy!&lt;/div&gt;
</content>



  </entry>
  <entry>
    <title>An LOLCODE interpreter using JJTree</title>
    <link rel="alternate" type="text/html" href="http://tomcopeland.blogs.com/juniordeveloper/2007/09/an-lolcode-in-1.html" />
    <link rel="service.edit" type="application/x.atom+xml" href="http://www.typepad.com/t/atom/weblog/blog_id=210513/entry_id=39561246" title="An LOLCODE interpreter using JJTree" />
    <id>tag:typepad.com,2003:post-39561246</id>
    <issued>2007-09-29T22:33:06-04:00</issued>
    <modified>2008-02-24T15:52:13Z</modified>
    <created>2007-09-30T02:33:06Z</created>
    <summary>Here&#39;s something that&#39;s lingered in my blog TODO queue for far too long. Brian Egge, formerly of ThoughtWorks and now of Macquarie Bank Limited, wrote an LOLCODE interpreter with JavaCC and JJTree. Behold: $ bin/lol.sh test/samples/hello_world.LOL HAI WORLD! I salute...</summary>
    <author>
      <name>tomcopeland</name>
    </author>
    <dc:subject>Java</dc:subject>

    <content type="html" xml:lang="en-US" xml:base="http://tomcopeland.blogs.com/juniordeveloper/">
&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;p&gt;Here&#39;s something that&#39;s lingered in my blog TODO queue for far too long.&amp;nbsp; &lt;a href=&quot;http://www.theeggeadventure.com/&quot;&gt;Brian Egge&lt;/a&gt;, formerly of ThoughtWorks and now of Macquarie Bank Limited, wrote an &lt;a href=&quot;http://code.google.com/p/lolcode-java/&quot;&gt;LOLCODE interpreter with JavaCC and JJTree&lt;/a&gt;.&amp;nbsp; Behold:

&lt;/p&gt;

&lt;pre&gt;$ bin/lol.sh test/samples/hello_world.LOL &lt;br /&gt;HAI WORLD!&lt;/pre&gt;

&lt;p&gt;I salute his efforts in this crucial field and humbly submit a small patch:

&lt;/p&gt;

&lt;pre&gt;Index: src/com/lolcode/parser/LolCode.jjt&lt;br /&gt;===================================================================&lt;br /&gt;--- src/com/lolcode/parser/LolCode.jjt&amp;nbsp; (revision 20)&lt;br /&gt;+++ src/com/lolcode/parser/LolCode.jjt&amp;nbsp; (working copy)&lt;br /&gt;@@ -141,7 +141,7 @@&lt;br /&gt; {}&lt;br /&gt; {&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;lt;IM&amp;gt; &amp;lt;IN&amp;gt; &amp;lt;YR&amp;gt; &amp;lt;LOOP&amp;gt; &amp;lt;EOL&amp;gt;&lt;br /&gt;-&amp;nbsp; ( LOOKAHEAD(2147483647) Statement() )+&lt;br /&gt;+&amp;nbsp; ( LOOKAHEAD(Statement()) Statement() )+&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;lt;IM&amp;gt; &amp;lt;OUTTA&amp;gt; &amp;lt;YR&amp;gt; &amp;lt;LOOP&amp;gt; &amp;lt;EOL&amp;gt;&lt;br /&gt; }&lt;br /&gt; &lt;br /&gt;@@ -157,7 +157,7 @@&lt;br /&gt; {}&lt;br /&gt; {&lt;br /&gt;&amp;nbsp; &amp;nbsp;IncrFunction()&lt;br /&gt;-|&amp;nbsp; LOOKAHEAD(2147483647) BreakFunction()&lt;br /&gt;+|&amp;nbsp; LOOKAHEAD(BreakFunction()) BreakFunction()&lt;br /&gt; |&amp;nbsp; &amp;lt;IZ&amp;gt; BoolExpression() &amp;lt;O_RLY&amp;gt; &amp;lt;QUESTION&amp;gt; &amp;lt;EOL&amp;gt; then() ( Else() )? &amp;lt;KTHX&amp;gt; &amp;lt;EOL&amp;gt;&lt;br /&gt; | &amp;lt;OPEN&amp;gt; &amp;lt;IDENT&amp;gt; &amp;lt;QUOTED_STRING&amp;gt;&lt;br /&gt; }&lt;br /&gt;@@ -245,4 +245,4 @@&lt;br /&gt;&amp;nbsp; &amp;nbsp; return t.image.substring(1, t.image.length() - 1);&lt;br /&gt;&amp;nbsp; }&lt;br /&gt; }&lt;/pre&gt;

&lt;p&gt;I&#39;m just happy to be able to contribute anything to this work.&amp;nbsp; Go Brian!&lt;/p&gt;&lt;/div&gt;
</content>



  </entry>

</feed>
<!-- ph=1 -->
<!-- nhm:from_kauri -->
