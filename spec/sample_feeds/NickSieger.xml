<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="http://feeds.feedburner.com/~d/styles/atom10full.xsl" type="text/xsl" media="screen"?><?xml-stylesheet href="http://feeds.feedburner.com/~d/styles/itemcontent.css" type="text/css" media="screen"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US">
  <title>Nick Sieger</title>
  <subtitle type="html">do what you love</subtitle>
  <id>tag:blog.nicksieger.com,2005:Typo</id>
  <generator uri="http://www.typosphere.org" version="4.0">Typo</generator>
  
  <link rel="alternate" type="text/html" href="http://blog.nicksieger.com/" />
  <updated>2009-01-10T20:09:01+00:00</updated>
  <link rel="self" href="http://feeds.feedburner.com/nicksieger" type="application/atom+xml" /><entry>
    <author>
      <name>Nick Sieger</name>
    </author>
    <id>urn:uuid:924637a6-a799-47c7-be6c-986b51b86402</id>
    <published>2009-01-10T20:04:00+00:00</published>
    <updated>2009-01-10T20:09:01+00:00</updated>
    <title>JRuby 1.1.6: Gems-in-a-jar</title>
    <link rel="alternate" type="text/html" href="http://blog.nicksieger.com/articles/2009/01/10/jruby-1-1-6-gems-in-a-jar" />
    <category term="jruby" scheme="http://blog.nicksieger.com/articles/tag/jruby" />
    <category term="rubygems" scheme="http://blog.nicksieger.com/articles/tag/rubygems" />
    <content type="html">&lt;p&gt;As a result of some fruitful hacking at RubyConf 2008, I was able to modify JRuby so that gems can be loaded and used without having to unpack them&amp;#46; The feature became generally available with the &lt;a href="http://docs.codehaus.org/display/JRUBY/2008/12/17/JRuby+1.1.6+Released"&gt;1&amp;#46;1&amp;#46;6 release last month&lt;/a&gt;&amp;#46; Gems in a jar!&lt;/p&gt;

&lt;p&gt;&lt;a href="http://flickr.com/photos/splorp/36991739/" title="Gem Jar"&gt;
&lt;img src="http://farm1.static.flickr.com/26/36991739_48ab6e8fb7.jpg" alt="gemjar"/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;div style="clear:both"&gt;&lt;/div&gt;

&lt;p&gt;&lt;span style="font-size:75%"&gt;by &lt;a href="http://flickr.com/photos/splorp"&gt;splorp on flickr&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;This opens up a couple new possibilities for running, packaging and deploying JRuby&amp;#45;based applications&amp;#46; Here are some ideas:&lt;/p&gt;

&lt;h2&gt;Run Gem&amp;#45;based applications with &lt;code&gt;jruby-complete.jar&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;JRuby has &lt;a href="http://jira.codehaus.org/browse/JRUBY-969"&gt;bundled Rake and RSpec since version 1&amp;#46;0&lt;/a&gt;&amp;#46; As of JRuby 1&amp;#46;1&amp;#46;6 the versions we bundle are Rake 0&amp;#46;8&amp;#46;3 and RSpec 1&amp;#46;1&amp;#46;11&amp;#46; With &lt;a href="http://repository.codehaus.org/org/jruby/jruby-complete/1.1.6/jruby-complete-1.1.6.jar"&gt;&lt;code&gt;jruby-complete-1.1.6.jar&lt;/code&gt;&lt;/a&gt; you can easily run these with &lt;code&gt;java -jar&lt;/code&gt;:&lt;/p&gt;

&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_default "&gt;$ java -jar jruby-complete-1.1.6.jar -S rake --help
rake [-f rakefile] {options} targets...

Options are ...

$ java -jar jruby-complete-1.1.6.jar -S spec --help
Usage: spec (FILE|DIRECTORY|GLOB)+ [options]

    -p, --pattern [PATTERN] ...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Package gem collections into reusable jar files&lt;/h2&gt;

&lt;p&gt;One of the features I added was to enhance RubyGems to search for directories named &lt;code&gt;specifications&lt;/code&gt; on the classpath and add them to the &lt;code&gt;Gem.path&lt;/code&gt; automatically&amp;#46; This means you can package up a whole gem repository into a jar file for easy reuse and sharing of commonly used gems&amp;#46; There isn&amp;#8217;t a tool for this yet, but the process is pretty straightforward&amp;#46; (If someone plays with this and can come up with a patch to build this into JRuby, we&amp;#8217;ll gladly accept one&amp;#46;)&lt;/p&gt;

&lt;p&gt;First, create a gem repository by installing the gems you want into it&amp;#46; Let&amp;#8217;s say you want to package the natural language date/time parser &lt;code&gt;chronic&lt;/code&gt;:&lt;/p&gt;

&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_default "&gt;$ java -jar jruby-complete-1.1.6.jar -S gem install -i ./chronic chronic --no-rdoc --no-ri
Successfully installed rubyforge-1.0.2
Successfully installed rake-0.8.3
Successfully installed hoe-1.8.2
Successfully installed chronic-0.2.3
4 gems installed&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With this command, RubyGems created &lt;code&gt;chronic/bin&lt;/code&gt;, &lt;code&gt;chronic/cache&lt;/code&gt;, &lt;code&gt;chronic/gems&lt;/code&gt;, and &lt;code&gt;chronic/specifications&lt;/code&gt; directories and installed &lt;code&gt;chronic&lt;/code&gt; and its dependencies into it&amp;#46; Now, simply package those directories into a jar file:&lt;/p&gt;

&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_default "&gt;$ jar cf chronic.jar -C chronic .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When you inspect the contents of the jar, you&amp;#8217;ll see the gem repository structure in the root of the jar file:&lt;/p&gt;

&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_default "&gt;$ jar tf chronic.jar | head
META-INF/
META-INF/MANIFEST.MF
bin/
bin/rake
bin/rubyforge
bin/sow
cache/
cache/chronic-0.2.3.gem
cache/hoe-1.8.2.gem
cache/rake-0.8.3.gem&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chronic is now a re&amp;#45;useable jar library that can be easily loaded, either by requiring the jar in ruby code or adding to the classpath:&lt;/p&gt;

&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_default "&gt;$ # Without chronic.jar
$ java -jar jruby-complete-1.1.6.jar -S gem list

*** LOCAL GEMS ***

rake (0.8.3)
rspec (1.1.11)
sources (0.0.1)

$ # With chronic.jar
$ java -jar jruby-complete-1.1.6.jar -rchronic.jar -S gem list

*** LOCAL GEMS ***

chronic (0.2.3)
hoe (1.8.2)
rake (0.8.3)
rspec (1.1.11)
rubyforge (1.0.2)
sources (0.0.1)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Unfortunately this technique does not yet work with gems that include Java code in embedded jar files (e&amp;#46;g&amp;#46;, hpricot, mongrel, jruby&amp;#45;openssl)&amp;#46; See &lt;a href="http://jira.codehaus.org/browse/JRUBY-3299"&gt;JRUBY&amp;#45;3299&lt;/a&gt;&amp;#46; (We&amp;#8217;d like to get this fixed for 1&amp;#46;1&amp;#46;7, but could use your help&amp;#46;)&lt;/p&gt;

&lt;h2&gt;Bundle pure&amp;#45;Ruby gem applications into an uber&amp;#45;jar&lt;/h2&gt;

&lt;p&gt;Taking a cue from the previous techniques, we can stuff the gem directories into a copy of &lt;code&gt;jruby-complete-1.1.6.jar&lt;/code&gt; rather than creating a new jar, and distribute an entire gem&amp;#45;based application in a single file&amp;#46; Imagine something like:&lt;/p&gt;

&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_default "&gt;$ java -jar jruby-complete-1.1.6.jar -S gem install -i ./mycoolapp mycoolapp
$ jar uf jruby-complete-1.1.6.jar -C mycoolapp .
$ mv jruby-complete-1.1.6.jar mycoolapp.jar
$ java -jar mycoolapp.jar -S mycoolapp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bonus points to the enterprising individual who provides a patch to make this a one&amp;#45;step process, including creating a mechanism to provide a default &lt;code&gt;-S&lt;/code&gt; script so that &lt;code&gt;java -jar mycoolapp&lt;/code&gt; is all that&amp;#8217;s needed to run the application&amp;#46;&lt;/p&gt;

&lt;p&gt;I hope you find interesting uses for this new feature&amp;#46; Let us know what you make with it!&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Nick Sieger</name>
    </author>
    <id>urn:uuid:e553c913-f396-4976-ad3d-89d2cf1407db</id>
    <published>2008-12-19T13:46:33+00:00</published>
    <updated>2008-12-19T13:46:33+00:00</updated>
    <title>Warbler 0.9.12 Released, Includes JRuby 1.1.6</title>
    <link rel="alternate" type="text/html" href="http://blog.nicksieger.com/articles/2008/12/19/warbler-0-9-12-released-includes-jruby-1-1-6" />
    <category term="jruby" scheme="http://blog.nicksieger.com/articles/tag/jruby" />
    <category term="warbler" scheme="http://blog.nicksieger.com/articles/tag/warbler" />
    <category term="rails" scheme="http://blog.nicksieger.com/articles/tag/rails" />
    <content type="html">&lt;p&gt;I finally got around to releasing the next version of &lt;a href="http://kenai.com/projects/warbler"&gt;Warbler&lt;/a&gt;&amp;#46; I try to keep pace with JRuby releases but 1&amp;#46;1&amp;#46;5 had some bugs that I wanted to wait out (in particular, one with Rubygems assuming &lt;code&gt;Etc&lt;/code&gt; is always available)&amp;#46;&lt;/p&gt;

&lt;p&gt;New in this release is better automatic gem detection for both Rails and Merb&amp;#46; In particular, Warbler will use the contents of Merb&amp;#8217;s &lt;code&gt;config/dependencies.rb&lt;/code&gt; file&amp;#46; As an added bonus, only runtime dependencies are loaded&amp;#46; This detection is done by running the Rails &lt;code&gt;environment&lt;/code&gt; or the Merb &lt;code&gt;merb_env&lt;/code&gt; Rake task&amp;#46; Usually, loading the application environment requires a database connection&amp;#46; If you don&amp;#8217;t want this behavior, you can manually specify dependent gems in &lt;code&gt;config/warble.rb&lt;/code&gt; and turn off the framework detection with &lt;code&gt;Warbler.framework_detection = false&lt;/code&gt;&amp;#46; See &lt;a href="http://caldersphere.rubyforge.org/warbler/"&gt;the documentation&lt;/a&gt; for details&amp;#46;&lt;/p&gt;

&lt;h3&gt;Warbler 0&amp;#46;9&amp;#46;12&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Allow framework auto&amp;#45;detection to be disabled&amp;#46; Set &lt;code&gt;Warbler.framework_detection = false&lt;/code&gt; at the top of config/warble&amp;#46;rb or uncomment the line from a newly generated config&amp;#46;&lt;/li&gt;
&lt;li&gt;Add configuration option to set manifest file (thanks Tommy McGuire)&lt;/li&gt;
&lt;li&gt;Mitigate RubyGems 1&amp;#46;3 compatibility issue (thanks Jens Norrgrann)&lt;/li&gt;
&lt;li&gt;Add experimental &lt;code&gt;war:exploded&lt;/code&gt; task&amp;#46; This allows you to deploy your application in an exploded mode, thus allowing continual development without re&amp;#45;warring and re&amp;#45;deploying&amp;#46; Feedback is appreciated if you try this feature; it may not work in all application servers and for applications other than Rails&amp;#46;&lt;/li&gt;
&lt;li&gt;Handle Rails gem dependencies better (thanks Laszlo Bacsi)&lt;/li&gt;
&lt;li&gt;Auto&amp;#45;detect Merb dependencies (Merb &gt;= 1&amp;#46;0 only)&amp;#46; Please give feedback if you try Warbler with a Merb 1&amp;#46;0 app&amp;#46;&lt;/li&gt;
&lt;li&gt;Ignore gem development dependencies&lt;/li&gt;
&lt;li&gt;Upgrade to JRuby 1&amp;#46;1&amp;#46;6 and JRuby&amp;#45;Rack 0&amp;#46;9&amp;#46;3&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Nick Sieger</name>
    </author>
    <id>urn:uuid:c5dabd13-4c71-4a68-9ebf-b44551764476</id>
    <published>2008-12-19T05:04:00+00:00</published>
    <updated>2008-12-19T05:06:15+00:00</updated>
    <title>My Article for Ruby Advent 2008</title>
    <link rel="alternate" type="text/html" href="http://blog.nicksieger.com/articles/2008/12/19/my-article-for-ruby-advent-2008" />
    <category term="ruby" scheme="http://blog.nicksieger.com/articles/tag/ruby" />
    <category term="rubyadvent" scheme="http://blog.nicksieger.com/articles/tag/rubyadvent" />
    <category term="jruby" scheme="http://blog.nicksieger.com/articles/tag/jruby" />
    <category term="gruff" scheme="http://blog.nicksieger.com/articles/tag/gruff" />
    <category term="jmx" scheme="http://blog.nicksieger.com/articles/tag/jmx" />
    <content type="html">&lt;p&gt;I wrote an article for &lt;a href="http://advent2008.hackruby.com/" title="Ruby Advent 2008"&gt;Ruby Advent 2008&lt;/a&gt; about using JRuby, &lt;a href="http://code.google.com/p/rmagick4j/" title="rmagick4j -  Google Code"&gt;RMagick4J&lt;/a&gt;, &lt;a href="http://nubyonrails.com/pages/gruff" title="Gruff Graphs for Ruby | Ruby on Rails for Newbies"&gt;Gruff&lt;/a&gt;, and JMX to create a simple JVM memory monitoring application&amp;#46; &lt;a href="http://advent2008.hackruby.com/past/2008/12/19/ruby_graphs_and_java_monitoring_with_jruby/"&gt;Go check it out and let me know what you think&lt;/a&gt;&amp;#46;&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve also &lt;a href="http://github.com/nicksieger/advent-jruby/tree/master"&gt;posted the source for the article&lt;/a&gt;&amp;#46;&lt;/p&gt;

&lt;p&gt;Happy Holidays!&lt;/p&gt;

&lt;p&gt;&lt;a href="http://advent2008.hackruby.com/past/2008/12/19/ruby_graphs_and_java_monitoring_with_jruby/"&gt;
&lt;img src="http://img.skitch.com/20081219-kh1h2s82sc528pcnjwa2x21rtm.jpg" alt="rubyadvent"/&gt;
&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Nick Sieger</name>
    </author>
    <id>urn:uuid:3b208b1c-8cf2-4a11-9286-7c38035a9105</id>
    <published>2008-12-10T14:50:44+00:00</published>
    <updated>2008-12-10T14:50:45+00:00</updated>
    <title>My RailsConf Europe Mini-Keynote</title>
    <link rel="alternate" type="text/html" href="http://blog.nicksieger.com/articles/2008/12/10/my-railsconf-europe-mini-keynote" />
    <category term="railsconf" scheme="http://blog.nicksieger.com/articles/tag/railsconf" />
    <category term="railsconfeurope" scheme="http://blog.nicksieger.com/articles/tag/railsconfeurope" />
    <content type="html">&lt;p&gt;Here&amp;#8217;s a nice surprise&amp;#46; My mini&amp;#45;keynote at &lt;a href="http://en.oreilly.com/railseurope2008/public/schedule/detail/4881"&gt;RailsConf Europe&lt;/a&gt; was posted over at &lt;a href="http://railsconfeurope.blip.tv/posts?view=archive&amp;amp;nsfw=dc"&gt;blip&amp;#46;tv&lt;/a&gt;&amp;#46; It&amp;#8217;s only 10 minutes, so give it a watch and let me know what you think&amp;#46; I even watched it myself, without cringing! I laughed (at how I actually sounded credible), I cried (at how I laughed at my own poorly&amp;#45;delivered joke)&amp;#46;&lt;/p&gt;

&lt;p&gt;&lt;embed src="http://blip.tv/play/Ad+6LYa8Ew" type="application/x-shockwave-flash" width="480" height="390" allowscriptaccess="always" allowfullscreen="true"&gt;&lt;/embed&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Nick Sieger</name>
    </author>
    <id>urn:uuid:2fa688b9-5180-4da4-820b-e4314e9211ee</id>
    <published>2008-11-24T18:51:00+00:00</published>
    <updated>2008-11-24T21:17:56+00:00</updated>
    <title>QCon: Interviewed by Fabio Akita</title>
    <link rel="alternate" type="text/html" href="http://blog.nicksieger.com/articles/2008/11/24/qcon-interviewed-by-fabio-akita" />
    <category term="qcon" scheme="http://blog.nicksieger.com/articles/tag/qcon" />
    <category term="ruby" scheme="http://blog.nicksieger.com/articles/tag/ruby" />
    <category term="jruby" scheme="http://blog.nicksieger.com/articles/tag/jruby" />
    <category term="akitaonrails" scheme="http://blog.nicksieger.com/articles/tag/akitaonrails" />
    <content type="html">&lt;p&gt;Fabio Akita played the role of the Energizer Bunny, making a blur around the hallways at QCon&amp;#46; He managed to catch me on Thursday morning, and we had a great chat&amp;#46;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://s3.amazonaws.com/twitter_production/profile_images/51717868/AkitaOnRails_small.png" alt="Fabio" title="Fabio Akita"/&gt;
&lt;img src="/files/ebunny.jpg" alt="Bunny" title="Energizer Bunny"/&gt;&lt;/p&gt;

&lt;div style="clear:both;"&gt;&lt;/div&gt;

&lt;p&gt;Go &lt;a href="http://akitaonrails.com/2008/11/21/rails-podcast-brasil-qcon-special-nick-sieger-jruby-and-francesco-cesarini-erlang"&gt;check out our conversation on Akita On Rails&lt;/a&gt; to hear my take on JRuby and Rails 2&amp;#46;2 and more&amp;#46; Thanks for doing the interview Fabio!&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Nick Sieger</name>
    </author>
    <id>urn:uuid:7f7ee1f0-1cb0-40ff-b8e5-8ef15100016b</id>
    <published>2008-11-23T08:51:03+00:00</published>
    <updated>2008-11-23T08:51:03+00:00</updated>
    <title>QCon Wrap-up: Enterprise, Have You Met Ruby?</title>
    <link rel="alternate" type="text/html" href="http://blog.nicksieger.com/articles/2008/11/23/qcon-wrap-up-enterprise-have-you-met-ruby" />
    <category term="qcon" scheme="http://blog.nicksieger.com/articles/tag/qcon" />
    <category term="ruby" scheme="http://blog.nicksieger.com/articles/tag/ruby" />
    <content type="html">&lt;p&gt;This year&amp;#8217;s QCon San Francisco conference was my first time attending, and it was an eye&amp;#45;opener for me for several reasons&amp;#46;&lt;/p&gt;

&lt;p&gt;First, the tutorial &lt;a href="http://olabini.com/"&gt;Ola&lt;/a&gt; and I gave on Monday went well, though I was mildly surprised to find that only about 10% of the attendees at our talk had any familiarity with Ruby&amp;#46; This turned out to work just fine as we were able to adjust and fill in a little bit of the back story on both Ruby and Rails&amp;#46; Still, to try to convey a sense of Ruby, Rails, and JRuby all in the span of a 2&amp;#46;5 hour session is a tall order!&lt;/p&gt;

&lt;p&gt;Next, I was impressed with the diversity the conference organizers were able to achieve&amp;#46; There were tracks on &lt;a href="http://qconsf.com/sf2008/tracks/show_track.jsp?trackOID=167"&gt;agile development&lt;/a&gt;, &lt;a href="http://qconsf.com/sf2008/tracks/show_track.jsp?trackOID=159"&gt;cloud computing&lt;/a&gt;, &lt;a href="http://qconsf.com/sf2008/tracks/show_track.jsp?trackOID=160"&gt;REST&lt;/a&gt;, &lt;a href="http://qconsf.com/sf2008/tracks/show_track.jsp?trackOID=165"&gt;DSLs&lt;/a&gt;, &lt;a href="http://qconsf.com/sf2008/tracks/show_track.jsp?trackOID=166"&gt;design and clean code&lt;/a&gt;, &lt;a href="http://qconsf.com/sf2008/tracks/show_track.jsp?trackOID=172"&gt;Ruby&lt;/a&gt;, &lt;a href="http://qconsf.com/sf2008/tracks/show_track.jsp?trackOID=169"&gt;functional programming&lt;/a&gt;, &lt;a href="http://qconsf.com/sf2008/tracks/show_track.jsp?trackOID=158"&gt;real&amp;#45;world architectures&lt;/a&gt;, &lt;a href="http://qconsf.com/sf2008/tracks/show_track.jsp?trackOID=170"&gt;storage rethinking&lt;/a&gt;, and more&amp;#46; Tracks were relevant and topical even if the quality of talks was mixed&amp;#46;&lt;/p&gt;

&lt;p&gt;The last item relates to my perception that Ruby is not yet seen as a worthwhile tool for enterprise software
development&amp;#46; It leaves me with some cause for concern, though it reflects more on the state of the industry
rather than on the way Ruby was presented at the conference itself&amp;#46;&lt;/p&gt;

&lt;p&gt;What does it mean for Ruby to be &amp;#8220;ready for the enterprise&amp;#8221;? Does that imply JRuby? Running on the JVM or a Java application server, or even &amp;#46;NET? Reams of XML? Presence of buzzwords, such as JMS, Spring/Hibernate? Or ability to adapt to or leverage legacy code? All of these?&lt;/p&gt;

&lt;p&gt;I would argue that Ruby already has everything it needs to be a successful enterprise software development platform, even without using JRuby&amp;#46; Ruby has a mature standard library, a large and ever&amp;#45;growing list of gems and extensions, and a vibrant community&amp;#46; Testing tooling, certainly seen more and more as a critical piece of software development, is also an area where Ruby excels (and brings a strong culture bias toward testing as well)&amp;#46; Add JRuby to the mix and the ability to leverage existing infrastructure as well as code, and the picture gets even stronger&amp;#46; Best of all, Ruby the language is a malleable medium perfectly suited for gluing enterprise components together, creating DSLs on top of &lt;a href="http://olabini.com/blog/2008/01/viability-of-java-and-the-stable-layer/"&gt;stable layers&lt;/a&gt; and remaining clean enough to be eminently readable and maintainable&amp;#46; Yet behind&amp;#45;the&amp;#45;firewall deployments appear to be elusive; if they do exist, they&amp;#8217;re small, isolated apps that work so well, the community doesn&amp;#8217;t hear about them&amp;#46; Judging from the low level of participation in Ruby&amp;#45;related talks at QCon, I&amp;#8217;m inclined to believe the former&amp;#46;&lt;/p&gt;

&lt;p&gt;I was speaking with &lt;a href="http://blog.jayfields.com/"&gt;Jay Fields&lt;/a&gt; about this topic on Friday&amp;#46; Jay also noticed that the the Ruby and DSL tracks were sparsely attended&amp;#46; (For that matter, so was the functional programming track&amp;#46;) His observation was that the track content was not marketed and tailored enough toward toward solving enterprise&amp;#45;class problems, or being approachable enough in that regard&amp;#46; We can certainly do better&amp;#46;&lt;/p&gt;

&lt;p&gt;Do we have an issue here? Are we, the Ruby community, being too insular and not concerning ourselves enough with bringing Ruby&amp;#45;based solutions to the enterprise? Or perhaps businesses are waiting for more organizations that can provide services, support and indemnification? Does there need to be a Ruby, Inc&amp;#46; (or even a JRuby, Inc&amp;#46;) that looks at common enterprise problems and devises best&amp;#45;of&amp;#45;breed solutions (a sort of SpringSource for Ruby) for things like enterprise integration, security and identity, reporting, business workflow, decision support, etc&amp;#46; ad infinitum? Ruby should be able to do all of those while bringing the increased agility and productivity that we&amp;#8217;ve all experienced&amp;#46;&lt;/p&gt;

&lt;p&gt;I seem to have raised more questions than I am able to answer at this time&amp;#46; Of course, the obvious answer is that adoption of Ruby will just need more time, but I&amp;#8217;m not willing to accept that as the only reason&amp;#46; I&amp;#8217;d love to hear your opinions on contributing factors and what can be done to mitigate them&amp;#46; It seems like there&amp;#8217;s a huge opportunity waiting to be tapped to help make Ruby more enterprise&amp;#45;worthy&amp;#46;&lt;/p&gt;

&lt;p&gt;And yet, despite the less&amp;#45;than&amp;#45;stellar turnout for Ruby at QCon among conference attendees, I still had a great week, and would go back again&amp;#46; QCon is a fun and well&amp;#45;organized event overall, and I got the impression that the folks present were on the leading edge of &amp;#8220;the enterprise&amp;#8221;, which is exactly the people we need to engage to bring about growth in adoption of Ruby&amp;#46; For that reason, I hope we can &lt;a href="http://en.wikipedia.org/wiki/Emeril"&gt;kick it up a notch&lt;/a&gt; and take another shot at pimping Ruby at the next one&amp;#46; Maybe I&amp;#8217;ll see you there!&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Nick Sieger</name>
    </author>
    <id>urn:uuid:8101f880-3b99-42f0-8dfc-39bed0283467</id>
    <published>2008-11-23T07:10:41+00:00</published>
    <updated>2008-11-23T07:10:41+00:00</updated>
    <title>Redesign!</title>
    <link rel="alternate" type="text/html" href="http://blog.nicksieger.com/articles/2008/11/23/redesign" />
    <content type="html">&lt;p&gt;I finally did it&amp;#46; I ditched the old, crufty Typo theme in favor of one hand&amp;#45;crafted by yours truly&amp;#46; I&amp;#8217;m by no means a professional web designer, but I&amp;#8217;m happy with what I ended up creating&amp;#46; It&amp;#8217;s relatively clean, the colors are a little edgy, and it took less that forever thanks to &lt;a href="http://www.blueprintcss.org/"&gt;blueprint&lt;/a&gt; and &lt;a href="http://kuler.adobe.com/#themeID/308132"&gt;kuler&lt;/a&gt;&amp;#46; Let me know if you have any feedback!&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Nick Sieger</name>
    </author>
    <id>urn:uuid:94767c6b-fd39-49d0-ae75-2a956b34d195</id>
    <published>2008-10-19T18:30:52+00:00</published>
    <updated>2008-10-19T18:30:52+00:00</updated>
    <title>Project Kenai: Open for Business</title>
    <link rel="alternate" type="text/html" href="http://blog.nicksieger.com/articles/2008/10/19/project-kenai-open-for-business" />
    <category term="jruby" scheme="http://blog.nicksieger.com/articles/tag/jruby" />
    <category term="rails" scheme="http://blog.nicksieger.com/articles/tag/rails" />
    <category term="kenai" scheme="http://blog.nicksieger.com/articles/tag/kenai" />
    <content type="html">&lt;h2&gt;Project Kenai&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://kenai.com/" title="Project Kenai -- We're More Than Just a Forge"&gt;Project Kenai&lt;/a&gt; has been open for business for over a month, and I&amp;#8217;m just writing about it now?&lt;/p&gt;

&lt;p&gt;&lt;img src="http://kenai.com/images/project_kenai.gif" alt="Project Kenai" title="Project Kenai"/&gt;&lt;/p&gt;

&lt;p&gt;Blogging is hard&amp;#46; Let&amp;#8217;s go shopping, m&amp;#8217;kay?&lt;/p&gt;

&lt;p&gt;&lt;span style="font-size:60%"&gt;&lt;a href="http://www.flickr.com/photos/zen/1229934/"&gt;
&lt;img src="http://farm1.static.flickr.com/1/1229934_62b6ca3405_m.jpg" alt="barbie" title="Barbie"/&gt;&lt;br/&gt;
http://www&amp;#46;flickr&amp;#46;com/photos/zen/1229934/&lt;/a&gt; on flickr&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;There&amp;#8217;s no excuse for not writing until now about the JRuby on Rails project that&amp;#8217;s kept me busy at work since I joined Sun almost 18 months ago&amp;#46; (Ok, there are a few lame ones&amp;#46; &lt;a href="http://twitter.com/nicksieger"&gt;Twitter&lt;/a&gt;&amp;#46; &lt;a href="http://en.oreilly.com/railseurope2008/public/schedule/speaker/2609"&gt;Conference&lt;/a&gt; &lt;a href="http://openjdk.java.net/projects/mlvm/jvmlangsummit/"&gt;travel&lt;/a&gt;&amp;#46; &lt;a href="http://my.barackobama.com/"&gt;Presidential&lt;/a&gt; &lt;a href="http://huffingtonpost.com/"&gt;political news&lt;/a&gt; &lt;a href="http://fivethirtyeight.com/"&gt;distractions&lt;/a&gt;&amp;#46; Also, &lt;a href="http://www.tbray.org/ongoing/When/200x/2008/09/09/Project-Kenai"&gt;Tim&amp;#8217;s write&amp;#45;up&lt;/a&gt; filled in my side of the story immediately after the launch&amp;#46;)&lt;/p&gt;

&lt;p&gt;So, better late than never&amp;#46; Actually, by looking back on the first month of operation I think that I can give you a better idea of where we&amp;#8217;re going, supported by what we&amp;#8217;ve done (as well as what we haven&amp;#8217;t done), rather than what I might have said we&amp;#8217;re going to do&amp;#46;&lt;/p&gt;

&lt;h2&gt;Word of Mouth&lt;/h2&gt;

&lt;p&gt;One thing we haven&amp;#8217;t done is put the heavy Sun marketing blitzkrieg operation to work on our behalf&amp;#46; Word has made its way around the blogs, and even onto a &lt;a href="http://www.infoworld.com/article/08/09/15/Sun_aims_at_Google_with_opensource_project_hosting_site_1.html"&gt;few&lt;/a&gt; &lt;a href="http://ostatic.com/173304-blog/sun-launches-new-site-for-hosting-open-source-projects"&gt;tech&lt;/a&gt; &lt;a href="http://www.infoq.com/news/2008/09/kenai-project-hosting"&gt;news&lt;/a&gt; &lt;a href="http://t3n.yeebase.com/aktuell/news/newspost/project-kenai-entwicklerplattform-von-sun-auf-jruby/1955/"&gt;sites&lt;/a&gt;, but we&amp;#8217;re still in a growth phase for the project, and we&amp;#8217;d rather earn respect quietly through a site that people find useful instead of shouting the word from the mountain tops&amp;#46;&lt;/p&gt;

&lt;p&gt;We have established that we intend to embrace change, having &lt;a href="http://kenai.com/projects/help/pages/ReleaseNotes"&gt;deployed three additional releases&lt;/a&gt; since launch&amp;#46; During that time, we&amp;#8217;ve &lt;a href="http://kenai.com/projects/help/pages/Downloads"&gt;added a new feature&lt;/a&gt;, fixed bugs and UI inconsistencies, and worked on performance and infrastructure issues&amp;#46;&lt;/p&gt;

&lt;div class="thumbnail"&gt;&lt;a href="http://skitch.com/nicksieger/3n9s/kenai-database"&gt;&lt;img src="http://img.skitch.com/20081019-dt1usp3stwpy6p7e49g67nsh8i.preview.jpg" alt="kenai-database" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;/div&gt;

&lt;p&gt;We&amp;#8217;ve also seen community participation grow&amp;#46; We&amp;#8217;ve had over 2100 people join, 79 projects have been created, and we&amp;#8217;re starting to see real activity in those projects&amp;#46; These are modest but respectable numbers&amp;#46;&lt;/p&gt;

&lt;h2&gt;JRuby on Rails&lt;/h2&gt;

&lt;p&gt;As you&amp;#8217;ve heard, kenai&amp;#46;com runs on &lt;a href="http://www.jruby.org/"&gt;JRuby&lt;/a&gt; and &lt;a href="https://glassfish.dev.java.net/"&gt;Glassfish&lt;/a&gt; and uses bits of software I&amp;#8217;ve worked on like &lt;a href="http://activerecord-jdbc.kenai.com/"&gt;activerecord&amp;#45;jdbc&lt;/a&gt;, &lt;a href="http://warbler.kenai.com"&gt;Warbler&lt;/a&gt; and &lt;a href="http://jruby-rack.kenai.com/"&gt;JRuby&amp;#45;Rack&lt;/a&gt;&amp;#46; Having worked on JRuby itself and Rails support for JRuby for a couple years now, this is a personal validation of all that work&amp;#46; One of the things I&amp;#8217;ve relished the most working on Project Kenai for the past year is to be able to build infrastructure software for and based upon real&amp;#45;world use&amp;#46; The JRuby story continues to get stronger every day, with things like &lt;a href="http://blog.jaoo.dk/2008/10/07/michael-koziarsky-rails-core-team-interview/"&gt;thread&amp;#45;safety in the upcoming Rails 2&amp;#46;2 release&lt;/a&gt; adding fuel to the fire&amp;#46;&lt;/p&gt;

&lt;h2&gt;(Not Yet) More Than Just a Forge&lt;/h2&gt;

&lt;p&gt;One of the things that might have caught your eye when you came to the site is the slogan &lt;em&gt;More Than Just a Forge&lt;/em&gt;&amp;#46; That&amp;#8217;s silly, you might say to yourself&amp;#46; What do they have here that I can&amp;#8217;t get at another project hosting site? And if you said that, I&amp;#8217;d heartily agree with you – the marketers are just getting a little antsy&amp;#46;&lt;/p&gt;

&lt;p&gt;However, that doesn&amp;#8217;t mean we don&amp;#8217;t have plans&amp;#46; For now, we&amp;#8217;re taking the &lt;a href="http://www.aaronsw.com/weblog/howtolaunch"&gt;Gmail Launch&lt;/a&gt; strategy, starting with a simple, solid foundation, and gradually inviting more and more to participate, stabilizing and growing the platform, and soliciting feedback from our user base&amp;#46; We do already have a healthy amount of requests on our &lt;a href="http://kenai.uservoice.com/"&gt;UserVoice page&lt;/a&gt;, and while we hope to make good on a number of those, we also plan to do some new things that aren&amp;#8217;t being done elsewhere&amp;#46; Stay tuned, and I hope to be able to reveal some more in the coming months as we start to roll out the implementation of those plans&amp;#46;&lt;/p&gt;

&lt;p&gt;In the meantime, if you&amp;#8217;d like an invite to create a project, drop me an email&amp;#46; If you have comments or requests, you can share them with me privately via email, &lt;a href="http://kenai.com/forums/"&gt;on the site in the forums&lt;/a&gt;, or on our &lt;a href="http://kenai.uservoice.com/"&gt;UserVoice&lt;/a&gt; page&amp;#46;&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Nick Sieger</name>
    </author>
    <id>urn:uuid:11aa72c1-75ed-4352-b9e6-be49b2ab6a1b</id>
    <published>2008-07-19T19:34:00+00:00</published>
    <updated>2008-07-23T03:57:07+00:00</updated>
    <title>Jazzers and Programmers</title>
    <link rel="alternate" type="text/html" href="http://blog.nicksieger.com/articles/2008/07/19/jazzers-and-programmers" />
    <category term="jazz" scheme="http://blog.nicksieger.com/articles/tag/jazz" />
    <category term="programming" scheme="http://blog.nicksieger.com/articles/tag/programming" />
    <content type="html">&lt;p&gt;At RubyFringe, I could have gone the easy route and talked about any manner of tech that I&amp;#8217;ve been working on or associated with, including &lt;a href="http://wiki.jruby.org/"&gt;JRuby&lt;/a&gt;, &lt;a href="/articles/2008/05/08/introducing-jruby-rack"&gt;JRuby&amp;#45;Rack&lt;/a&gt;, &lt;a href="/articles/2007/09/04/warbler-a-little-birdie-to-introduce-your-rails-app-to-java"&gt;Warbler&lt;/a&gt;, &lt;a href="/articles/2008/03/27/imagevoodoo-0-1-released"&gt;image_voodoo&lt;/a&gt;, &lt;a href="/articles/2008/07/10/blog-setup"&gt;Glassfish&lt;/a&gt;, &lt;a href="/articles/2008/06/04/activerecord-jdbc-adapter-0-8-1-released"&gt;activerecord&amp;#45;jdbc&lt;/a&gt;, &lt;a href="http://groups.google.com/group/rubyonrails-core/msg/e89e9c741f89227e"&gt;Connection pooling for Rails&lt;/a&gt;, or &lt;a href="http://github.com/jashkenas/ruby-processing/tree"&gt;Ruby&amp;#45;Processing&lt;/a&gt;&amp;#46; Instead, I took a risk and went in a completely different direction&amp;#46; What follows are some thoughts I expressed in the talk&amp;#46; I&amp;#8217;d be interested to hear your take as well&amp;#46;&lt;/p&gt;

&lt;h3&gt;Jazzers and Programmers&lt;/h3&gt;

&lt;p&gt;Why do we program? Why do &lt;em&gt;you&lt;/em&gt; program? Not the 9&amp;#45;5 systems analyst working for a paycheck&amp;#46; I&amp;#8217;m talking about you and me; we, the passionate fringe of the programming world&amp;#46; Fame and fortune? A knee&amp;#45;jerk answer, but that&amp;#8217;s not the one I&amp;#8217;m looking for&amp;#46; What I think drives great programmers is the desire to learn, share, collaborate, and constantly get better at what you do&amp;#46; Which might explain, to a large degree, why all of you came to RubyFringe&amp;#46;&lt;/p&gt;

&lt;p&gt;RubyFringe bills itself as &lt;em&gt;deep nerd tech with punk rock spirit&lt;/em&gt;&amp;#46; So what are some elements of punk rock spirit that we identify with? While I enjoy and appreciate punk and its culture of DIY, I&amp;#8217;m not an expert&amp;#46; However, I am passionate and knowledgeable about jazz&amp;#46;&lt;/p&gt;

&lt;p&gt;At this point you may be shaking your head, &amp;#8220;Sieger didn&amp;#8217;t get the memo!&amp;#8221;&lt;/p&gt;

&lt;div class="thumbnail"&gt;&lt;a href="http://skitch.com/nicksieger/tbje/rubyfringe-kenny-g"&gt;&lt;img src="http://img.skitch.com/20080716-fcbj7h1jybfn88q7swntbjrydx.preview.jpg" alt="rubyfringe kenny g" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;At which point I counter: if you think this clown and the music he plays is jazz, then prepare to be corrected, because you need to hear what I&amp;#8217;m about to tell you&amp;#46; Listen&amp;#46; Jazz is punk before punk even existed&amp;#46; And if we&amp;#8217;re associating ourselves with punk, the &lt;em&gt;fringe&lt;/em&gt;, or, to use another word, &lt;em&gt;vanguard&lt;/em&gt;, perhaps we can learn a few things from this truly unique American art form&amp;#46;&lt;/p&gt;

&lt;div class="thumbnail"&gt;&lt;a href="http://www.flickr.com/photos/professorbop/402962828"&gt;&lt;img src="http://farm1.static.flickr.com/179/402962828_323a31723f_m.jpg" alt="village vanguard"/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;How did I pick this topic for my talk? I was thinking about the fringe, the vanguard and growing up nerdy and a misfit, which we probably all can relate to&amp;#46; In addition to my interest in computers, I was also a band geek&amp;#46; I wore ties on random days at school just to accentuate myself away from the &amp;#8220;in&amp;#8221; crowd&amp;#46; And after school, I played in the jazz band&amp;#46; Playing in the jazz bands continued through college, where despite my majoring (and graduating) in electrical engineering, I decided to move to New York City to experience the big city and hopefully continue to play jazz&amp;#46; Instead, in an odd but practical twist, NYC became my transition into a programming career&amp;#46; Because you gotta pay the bills somehow, after all&amp;#46;&lt;/p&gt;

&lt;p&gt;Recently, after taking in &lt;a href="http://bit.ly/dhh-surplus"&gt;David&amp;#8217;s &amp;#8220;Surplus&amp;#8221; talk at RailsConf&lt;/a&gt;, although it sounds trite, I really took his suggestion to heart to look outside the programming world for insights on how to become a better programmer&amp;#46; I soon realized that jazz, my dormant passion, was that place right in front of me that might hold some of those crucial insights&amp;#46; And as odd as it may appear that I am speaking about jazz at a programming conference, I thought I&amp;#8217;d share some thoughts about this from my vantage point as programmer and jazz musician&amp;#46; (Plus, I get a kick out of saying that I came to RubyFringe, stood up in front of a captive audience, and auditioned jazz clips for 30 odd minutes&amp;#46;)&lt;/p&gt;

&lt;h3&gt;Styles of Jazz&lt;/h3&gt;

&lt;blockquote&gt;
    &lt;p&gt;It’s taken me all my life to learn what not to play&amp;#46;
    – Dizzy Gillespie&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jazz as a unique musical style is incredibly diverse&amp;#46; Its history spans over a hundred years, and is remarkable in its breadth&amp;#46; From Ragtime, New Orleans &amp;#8220;Hot&amp;#8221; Jazz, Swing, Bebop, Cool, Hard Bop, Free/Avant Garde, Jazz Rock/Fusion to splintering into a thousand directions, the music was (and is) constantly evolving and changing with the times&amp;#46;&lt;/p&gt;

&lt;p&gt;The history of programming is undergoing a similar arc, but is nowhere near as developed as a communication medium as jazz is&amp;#46; Whereas modern programming only 40&amp;#45;50 years old depending on when you start counting, jazz was just getting a head of steam at that point&amp;#46; You could break it down like this: C is akin to New Orleans &amp;#8220;hot&amp;#8221; jazz: foundation for much that followed, and still relevant in a lot of ways, but definitely showing its age&amp;#46; Java is like swing (literally! c&amp;#46;f &lt;code&gt;javax.swing.*&lt;/code&gt;): appeals to the masses, anyone gets it without a lot of cognitive load&amp;#46; Ruby is like bebop: favors minimalism, more powerful, more intellectual, and less understood&amp;#46;&lt;/p&gt;

&lt;p&gt;So what does that mean for the future of programming? We&amp;#8217;re already seeing an increase in DSLs, polyglotism, and languages and tools used for specialized purposes&amp;#46; I would expect that trend to continue, and using the development of the many styles of jazz as a ruler, would say that there will not be a Next Big Language (NBL)&amp;#46; Specialization and niche skills will be increasingly important as differentiators in our careers, but that means there will also be plenty of opportunity to stake out that new ground for ourselves and become leaders in these new specializations&amp;#46;&lt;/p&gt;

&lt;h3&gt;Jazz Fundamentals&lt;/h3&gt;

&lt;blockquote&gt;
    &lt;p&gt;Anyone can make the simple complicated&amp;#46; Creativity is making the complicated simple&amp;#46;”
    – Charles Mingus&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jazz as a creative medium has a number of compelling features that surround the music itself as well as the players&amp;#46; Let&amp;#8217;s examine a few of these, using them as a mirror to reflect on programming&amp;#46;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Instrumentation&lt;/strong&gt;&amp;#46; The modern jazz small ensemble is built upon the &lt;em&gt;rhythm section&lt;/em&gt; &amp;#45;&amp;#45; piano, bass, and drums&amp;#46; The bass is the starting point, and is responsible for marking the beat as well as laying the harmonic foundation, often by &amp;#8220;walking&amp;#8221;&amp;#46; Because of this critical role, the bass player in a jazz band is almost always positioned in the rear&amp;#45;center of the stage, between the piano and the drums&amp;#46; The piano and drums also have a role in keeping time, but have more freedom in creating tension and dissonance by layering rhythms on top of the bass, in an activity known as &lt;a href="http://en.wikipedia.org/wiki/Comping"&gt;&lt;em&gt;Comping&lt;/em&gt;&lt;/a&gt;&amp;#46;&lt;/p&gt;

&lt;p&gt;The easiest parallel to programming is libraries, frameworks and patterns&amp;#46; These are the building blocks upon which we code&amp;#46; A well&amp;#45;designed library makes your work as a programmer easier and more enjoyable in the same way a solid, experienced rhythm section complements a soloist&amp;#46;&lt;/p&gt;

&lt;p&gt;To use an example from web programming, may I suggest Bass&amp;#45;Drums&amp;#45;Piano == Model&amp;#45;View&amp;#45;Controller?&lt;/p&gt;

&lt;div class="thumbnail"&gt;&lt;a href="http://skitch.com/nicksieger/tr3h/m-v-c"&gt;&lt;img src="http://img.skitch.com/20080718-jp38m9d3sp5cm2kaxgcic63std.preview.jpg" alt="m-v-c" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;blockquote&gt;
    &lt;p&gt;When you hit a wrong note it’s the next note that makes it good or bad&amp;#46;
    – Miles Davis&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Musical Structures&lt;/strong&gt;&amp;#46; Much of bebop and straight&amp;#45;ahead jazz employs the well&amp;#45;established structure of the &lt;a href="http://en.wikipedia.org/wiki/Head_%28music%29"&gt;head&lt;/a&gt;, followed by solos, and finally repeating the head&amp;#46; The head is basically a crib sheet that consists of a tune or melody (usually a well&amp;#45;known jazz standard) and a set of chord &lt;a href="http://en.wikipedia.org/wiki/Chord_changes"&gt;&lt;em&gt;changes&lt;/em&gt;&lt;/a&gt; that forms the harmonic basis for the entire piece&amp;#46; During the solo section, one or more musicians improvise over the changes for one or more &amp;#8220;choruses&amp;#8221;&amp;#46;&lt;/p&gt;

&lt;div class="thumbnail"&gt;&lt;a href="http://skitch.com/nicksieger/tr4i/blue-monk"&gt;&lt;img src="http://img.skitch.com/20080718-m9krg37qrjrt1mpqut8eq77g2a.preview.jpg" alt="blue-monk" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;The &lt;a href="http://en.wikipedia.org/wiki/12_bar_blues"&gt;12&amp;#45;bar blues&lt;/a&gt; is easily the most common form found in jazz&amp;#46; It is usually the first form that a budding jazz musician practices when learning how to improvise&amp;#46;&lt;/p&gt;

&lt;p&gt;Every working jazz musician is expected to memorize and be able to play a large number of tunes and harmonic structures&amp;#46; This body of tunes is exemplified by the &lt;a href="http://en.wikipedia.org/wiki/Real_Book"&gt;Real Book&lt;/a&gt;, an underground, illegal transcription of a large number of tunes by some Berklee College students in the 70&amp;#8217;s that has become a standard part of a jazz musician&amp;#8217;s toolbox&amp;#46;&lt;/p&gt;

&lt;p&gt;Collectively, these musical conventions and rules form a jazz vocabulary and a shared ritual that allow musicians to play together in a &lt;a href="http://en.wikipedia.org/wiki/Jam_session"&gt;jam session&lt;/a&gt; without having played together before&amp;#46;&lt;/p&gt;

&lt;p&gt;The takeaway is that conventions and standards, when organically grown, tend to be powerful, liberating forces for communication and collaboration&amp;#46; There was no OASIS&amp;#45; or W3C&amp;#45;like committee that sat down when the roots of jazz were taking hold and dictated that it would be played this way&amp;#46; It just happened, night in, night out, on bandstands and in sessions all over New Orleans and Chicago and New York&amp;#46;&lt;/p&gt;

&lt;p&gt;I believe that some of the best examples of programming and technology embody those same ideas&amp;#46; Certainly Rails is a shining example in the programming world of such a set of conventions and how they allow you to be productive no matter what Rails project you&amp;#8217;re working on&amp;#46;&lt;/p&gt;

&lt;blockquote&gt;
    &lt;p&gt;It was when I found out I could make mistakes that I knew I was on to something&amp;#46;
    – Ornette Coleman&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Improvisation&lt;/strong&gt;&amp;#46; Making it up as you go&amp;#46; Jazz wouldn&amp;#8217;t be jazz without improvisation&amp;#46; The whole concept of improvisation in jazz builds upon the conventions and structure, but gives you the license to do whatever you want&amp;#46; Improvisation is what turns those constraints into freedom&amp;#46; Conviction is the key&amp;#46; Get up and play, tell your story, tell it with conviction, and there will be no wrong notes&amp;#46;&lt;/p&gt;

&lt;p&gt;Improvisation is also where the musical conversation happens&amp;#46; Where the soloist connects with the crowd and his/her fellow musicians&amp;#46; As a listener, following along with that conversation sometimes takes a trained ear&amp;#46; But there are still some musical devices that are easy for anyone to appreciate and can give you something to listen for&amp;#46;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://people.virginia.edu/~skd9r/MUSI212_new/materials/definitions2.html#tradingfours"&gt;&lt;em&gt;Trading fours&lt;/em&gt;&lt;/a&gt; is a conversational device between players in the group&amp;#46; Most commonly, it&amp;#8217;s used to give the drummer a chance to stretch out by alternating four bars of soloing with one or all of the instrumentalists&amp;#46; It&amp;#8217;s a great way to enjoy the inventiveness of the group collaboration element of jazz by listening to how the soloists play off each other in short spurts&amp;#46;&lt;/p&gt;

&lt;p&gt;An outstanding example of trading fours can be found in &lt;a href="http://www.youtube.com/watch?v=bZhVmES8FLQ"&gt;&amp;#8220;The Blues Walk&amp;#8221;&lt;/a&gt; between Clifford Brown and Harold Land (at about the 5:30 mark in the tune)&amp;#46; They trade fours for two choruses, then twos, then ones, then halfs&amp;#46; The lines they weave are unreal!&lt;/p&gt;

&lt;p&gt;&lt;object width="425" height="344"&gt;&lt;param name="movie" value="http://www.youtube.com/v/bZhVmES8FLQ&amp;amp;hl=en&amp;amp;fs=1"&gt;&lt;/param&gt;&lt;param name="allowFullScreen" value="true"&gt;&lt;/param&gt;&lt;embed src="http://www.youtube.com/v/bZhVmES8FLQ&amp;amp;hl=en&amp;amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" width="425" height="344"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Quoting&lt;/em&gt; is humor and inventiveness applied to improvisation&amp;#46; It&amp;#8217;s named for a device where a player spontaneously inserts a recognizable melody into the middle of a solo&amp;#46; It&amp;#8217;s basically &lt;a href="http://en.wikipedia.org/wiki/Easter_egg_%28virtual%29"&gt;easter eggs&lt;/a&gt; applied to jazz&amp;#46; Dexter Gordon and Sonny Rollins are two players known for their penchant for breaking out and quoting in the middle of a solo&amp;#46;&lt;/p&gt;

&lt;h3&gt;Improvisation and Programming&lt;/h3&gt;

&lt;blockquote&gt;
    &lt;p&gt;Learn the changes, then forget them&amp;#46;
    – Charlie Parker&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As far as programming is concerned, it&amp;#8217;s harder to see how improvisation can translate&amp;#46; &lt;a href="http://chadfowler.com/2008/6/23/programming-as-performance-art"&gt;Chad Fowler recently posted about programming as performance&lt;/a&gt;, asking for examples&amp;#46; Unfortunately, most of the examples given use programming as a means, but with some form of multimedia art as the end&amp;#46; I&amp;#8217;d like to see programming performance where the code itself is the end result&amp;#46;&lt;/p&gt;

&lt;p&gt;Do programmers improvise? I certainly believe that the best ones do&amp;#46; While it may be hard to capture the spontaneity of pure, real&amp;#45;time improvisation in a way that maps to how we write code, I think we can get close&amp;#46;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Continuous rewrites&lt;/em&gt;&amp;#46; Consider &lt;a href="http://en.wikipedia.org/wiki/Fred_Brooks"&gt;Fred Brooks&amp;#8217;&lt;/a&gt; axiom, &amp;#8220;Plan to throw one away; you will, anyhow&amp;#46;&amp;#8221; Jazz musicians do this on the bandstand every night! What if, rather than throwing one away, you rewrote a non&amp;#45;trivial piece of code five, ten, twenty times? What do you think would come out of that exercise as a result?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Live coding as a performance and teaching mechanism&lt;/em&gt;&amp;#46; I think live coding is an awesome example of spontaneity and risk&amp;#45;taking in programming, and one that not enough people attempt&amp;#46; Have you ever looked over the shoulder of a great programmer? It&amp;#8217;s fun to watch, because you learn &lt;em&gt;a lot&lt;/em&gt;&amp;#46; I could easily sit for an hour watching a seasoned programmer create code while working in their own environment&amp;#46; On the other hand, there&amp;#8217;s a trend in conference talks where the presenter, to avoid the wrath of the demo gods, stands idly by while playing back a pre&amp;#45;recorded video of the demo&amp;#46; Sorry, I don&amp;#8217;t buy this&amp;#46; If it&amp;#8217;s not live, it&amp;#8217;s not real&amp;#46; Let&amp;#8217;s make live&amp;#45;coding something we all strive to do! Don&amp;#8217;t be afraid to show the audience that you&amp;#8217;re not perfect!&lt;/p&gt;

&lt;blockquote&gt;
    &lt;p&gt;Do not fear mistakes&amp;#46; There are none&amp;#46;
    – Miles Davis&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Instead of a hackfest, try a Coding Jam Session&lt;/em&gt;&amp;#46; Hackfests only rarely unite people to work toward a common cause;  people enjoy the communal feel but too often people revert to working on their own thing instead of collaborating&amp;#46; Sprints are better, where the general topic or project is shared but each person is still working on their separate pieces&amp;#46; Rather, what I&amp;#8217;d like to see is a group of programmers working toward a single shared goal&amp;#46; Plan ahead for a gathering of a handful of people for a lengthy period of time, say 8 or 12 or even 24 hours&amp;#46; Agree upon a theme or rough plan ahead of time, but allow for serendipity and improvisation to take hold of the group during the session&amp;#46; Get together, and start writing code&amp;#46; Try &amp;#8220;trading fours&amp;#8221;, allowing each person in the session to drive and add their bit of code into the mix in short spurts&amp;#46; The overarching theme should be collaboration and building on each other&amp;#8217;s contributions&amp;#46; Avoid negative responses, such as saying &amp;#8220;No&amp;#8221; or &amp;#8220;Yes, but&amp;#46;&amp;#46;&amp;#46;&amp;#8221; or taking over and deleting or substantially rewriting someone else&amp;#8217;s code&amp;#46; Instead, say &amp;#8220;Yes, and&amp;#46;&amp;#46;&amp;#46;&amp;#8221;&amp;#46; Imagine yourself on the bandstand, where once a note is played, it can&amp;#8217;t be taken back&amp;#46; Really try hard to put away your devil&amp;#8217;s advocate side or need to take control and instead play up to each others&amp;#8217; strengths&amp;#46; Depending on the blend of personalities, this could be a great way to spike a idea for a new website or a startup!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Group Gitjour repository sharing&lt;/em&gt;&amp;#46; Crazy idea: what about using &lt;a href="http://github.com/chad/gitjour/tree" title="chad's gitjour at master &amp;mdash; GitHub"&gt;gitjour&lt;/a&gt; at a coding jam in a mode where everyone broadcasts their own repository and adds everyone else as remotes? Commit notifications could be broadcast on the local network with Growl or a similar tool, and pulling in someone else&amp;#8217;s changes could be a simple short one&amp;#45;line command, or perhaps even automatic&amp;#46; Imagine writing code together where suddenly a git merge is done for you automatically and the text changes right before your eyes right in your editor! Real&amp;#45;time collaboration!&lt;/p&gt;

&lt;h3&gt;Join the conversation!&lt;/h3&gt;

&lt;p&gt;I hope you&amp;#8217;ll join me and post your thoughts about some of these ideas, either in the comments below or on your own blogs&amp;#46; And find some inspiration in your passions and pastimes you have outside of the programming world that help you become a better programmer and collaborator!&lt;/p&gt;

&lt;h3&gt;Discography&lt;/h3&gt;

&lt;p&gt;Those who saw my talk in person may be interested in this list of song samples&amp;#46; I personally recommend any of these albums&amp;#46; Information is organized as &lt;strong&gt;Section&lt;/strong&gt;: Artist, &lt;em&gt;Song&lt;/em&gt;, Album&amp;#46;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Intro&lt;/strong&gt;&amp;#46; Naked City, &lt;em&gt;Thrash Jazz Assassin&lt;/em&gt;, &lt;strong&gt;Torture Garden&lt;/strong&gt;&amp;#46;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ragtime&lt;/strong&gt;&amp;#46; Jelly Roll Morton, &lt;em&gt;Maple Leaf Rag (Morton style)&lt;/em&gt;, &lt;strong&gt;The Library of Congress Recordings, Vol&amp;#46; 1: Kansas City Stomp&lt;/strong&gt;&amp;#46;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New Orleans &amp;#8220;Hot&amp;#8221;&lt;/strong&gt;&amp;#46; King Oliver&amp;#8217;s Creole Jazz Band, &lt;em&gt;Dipper Mouth Blues&lt;/em&gt;, &lt;strong&gt;Louis Armstrong And King Oliver&lt;/strong&gt;&amp;#46;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Swing&lt;/strong&gt;&amp;#46; Duke Ellington &amp;amp; His Orchestra, &lt;em&gt;Take The &amp;#8220;A&amp;#8221; Train&lt;/em&gt;, &lt;strong&gt;The Fabulous Swing Collection&lt;/strong&gt;&amp;#46;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bebop&lt;/strong&gt;&amp;#46; Charlie Parker, &lt;em&gt;Koko&lt;/em&gt;, &lt;strong&gt;The Complete Savoy and Dial Studio Recordings&lt;/strong&gt;&amp;#46;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cool&lt;/strong&gt;&amp;#46; Miles Davis, &lt;em&gt;Israel&lt;/em&gt;, &lt;strong&gt;The Birth of the Cool&lt;/strong&gt;&amp;#46;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hard Bop&lt;/strong&gt;&amp;#46; Herbie Hancock, &lt;em&gt;Watermelon Man&lt;/em&gt;, &lt;strong&gt;Takin&amp;#8217; Off&lt;/strong&gt;&amp;#46;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Free&lt;/strong&gt;&amp;#46; Ornette Coleman, &lt;em&gt;Free Jazz&lt;/em&gt;, &lt;strong&gt;Free Jazz&lt;/strong&gt;&amp;#46;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jazz Rock&lt;/strong&gt;&amp;#46; Miles Davis, &lt;em&gt;Black Satin&lt;/em&gt;, &lt;strong&gt;On the Corner&lt;/strong&gt;&amp;#46; (Also remixed on Panthalassa: The Music of Miles Davis, 1969&amp;#45;1974&amp;#46;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contemporary&lt;/strong&gt;&amp;#46; The Bad Plus, &lt;em&gt;Iron Man&lt;/em&gt;, &lt;strong&gt;Give&lt;/strong&gt;&amp;#46;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Walking&lt;/strong&gt;&amp;#46; Sonny Rollins, &lt;em&gt;Blue Seven&lt;/em&gt;, &lt;strong&gt;Saxophone Colossus&lt;/strong&gt;&amp;#46;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Trading Fours&lt;/strong&gt;&amp;#46; Clifford Brown, &lt;em&gt;The Blues Walk&lt;/em&gt;, &lt;strong&gt;Clifford Brown and Max Roach&lt;/strong&gt;&amp;#46;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;&amp;#46; I&amp;#8217;ve posted a &lt;a href="http://rubyfringejazz.muxtape.com/"&gt;muxtape of the songs here&lt;/a&gt;&amp;#46; Enjoy! (Also, I had to substitute &lt;em&gt;Focus On Sanity&lt;/em&gt; from Ornette&amp;#8217;s &lt;strong&gt;Shape of Jazz to Come&lt;/strong&gt; album due to the length of &lt;strong&gt;Free Jazz&lt;/strong&gt;&amp;#46; SoJtC is an early free album, a little more digestible than FJ&amp;#46;)&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Nick Sieger</name>
    </author>
    <id>urn:uuid:e7399075-a1ca-4af7-b122-ede5647c4fcc</id>
    <published>2008-07-10T05:10:27+00:00</published>
    <updated>2008-07-10T05:10:27+00:00</updated>
    <title>Blog Setup</title>
    <link rel="alternate" type="text/html" href="http://blog.nicksieger.com/articles/2008/07/10/blog-setup" />
    <category term="jruby" scheme="http://blog.nicksieger.com/articles/tag/jruby" />
    <category term="rails" scheme="http://blog.nicksieger.com/articles/tag/rails" />
    <category term="warbler" scheme="http://blog.nicksieger.com/articles/tag/warbler" />
    <category term="rack" scheme="http://blog.nicksieger.com/articles/tag/rack" />
    <content type="html">&lt;p&gt;The other day &lt;a href="http://blog.nicksieger.com/articles/2008/07/06/this-blog-powered-by-glassfish-jruby-and-jruby-rack#comments"&gt;several people chimed in&lt;/a&gt; wondering how I set up this blog with JRuby and Glassfish&amp;#46; One of the reasons I didn&amp;#8217;t include the details in the post is that it&amp;#8217;s not really much different than any JRuby/Glassfish/Warbler deployment, but in case you don&amp;#8217;t know what that looks like, here are the basics&amp;#46;&lt;/p&gt;

&lt;h3&gt;Preconditions (Java)&lt;/h3&gt;

&lt;p&gt;I&amp;#8217;m running on a &lt;a href="http://joyent.com/accelerator"&gt;Joyent Accelerator&lt;/a&gt;, which runs &lt;a href="http://opensolaris.org/"&gt;OpenSolaris&lt;/a&gt;, which has JDK 6 installed by default&amp;#46; If you&amp;#8217;re running on some flavor of Linux, hopefully &lt;a href="https://jdk-distros.dev.java.net/"&gt;there&amp;#8217;s a package available for you to install&lt;/a&gt;, otherwise you may have to &lt;a href="http://www.java.com/en/download/help/5000010500.xml"&gt;download a self&amp;#45;extracting binary&lt;/a&gt;&amp;#46;&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://glassfish.dev.java.net/downloads/v2ur2-b04.html"&gt;Install Glassfish&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;This step is actually straightforward; not at all as problematic as you might expect of a piece of Java technology! In the parent directory where you want Glassfish to be installed (substituting the name of the Glassfish jar you downloaded as appropriate):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;java -Xmx256m -jar glassfish-installer-v2ur2-b04-sunos_x86.jar
cd glassfish
chmod -R +x lib/ant/bin
./lib/ant/bin/ant -f setup.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Start Glassfish&amp;#46;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./bin/asadmin start-domain
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may want to add &lt;code&gt;GLASSFISH/bin&lt;/code&gt; to your path so that you can run the Glassfish &lt;code&gt;asadmin&lt;/code&gt; command from anywhere&amp;#46;&lt;/p&gt;

&lt;p&gt;On Solaris, &lt;a href="http://www.sun.com/bigadmin/content/selfheal/smf-quickstart.jsp"&gt;SMF&lt;/a&gt; is the subsystem that is used to ensure services are started at boot time (among other things)&amp;#46; Glassfish &lt;a href="http://blogs.sun.com/bloggerkedar/entry/app_server_and_solaris_10"&gt;works nicely with SMF&lt;/a&gt;&amp;#46; On other systems, there may be &lt;code&gt;/etc/rc.d&lt;/code&gt; init scripts out there, or you can roll your own (&lt;code&gt;asadmin start-domain&lt;/code&gt; and &lt;code&gt;asadmin stop-domain&lt;/code&gt;)&amp;#46;&lt;/p&gt;

&lt;h3&gt;Install JRuby&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://dist.codehaus.org/jruby/jruby-bin-1.1.2.tar.gz"&gt;Download JRuby&lt;/a&gt; and &lt;a href="http://wiki.jruby.org/wiki/Getting_Started"&gt;unpack it somewhere&lt;/a&gt;&amp;#46; I recommend adding &lt;code&gt;JRUBY_HOME/bin&lt;/code&gt; to the end of your path, so it doesn&amp;#8217;t clash with Matz&amp;#45;Ruby&amp;#46;&lt;/p&gt;

&lt;h3&gt;Install Warbler and activerecord&amp;#45;jdbcmysql&amp;#45;adapter&lt;/h3&gt;

&lt;p&gt;In addition to Warbler, I&amp;#8217;m using the activerecord&amp;#45;jdbcmysql&amp;#45;adapter to connect to the blog&amp;#8217;s database&amp;#46; Both can be installed with Rubygems:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jruby -S gem install warbler activerecord-jdbcmysql-adapter
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With Rails 2 and up, the application&amp;#8217;s &lt;code&gt;config/database.yml&lt;/code&gt; file should be updated for &lt;code&gt;adapter: jdbcmysql&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;% jdbc = defined?(JRUBY_VERSION) ? 'jdbc' : '' %&amp;gt;
development:
  adapter: &amp;lt;%= jdbc %&amp;gt;mysql
  encoding: utf8
  database: testapp_development
  username: root
  password:
  socket: /tmp/mysql.sock
# same for test/production...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Otherwise, you need to &lt;a href="http://wiki.jruby.org/wiki/Running_Rails_with_ActiveRecord-JDBC"&gt;jump through some extra environment&amp;#46;rb configuration hoops&lt;/a&gt;&amp;#46;&lt;/p&gt;

&lt;h3&gt;Configure Warbler&lt;/h3&gt;

&lt;p&gt;Warbler needs to be told about any gems that your application uses&amp;#46; To generate a Warbler configuration file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jruby -S warble config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The file is generated at &lt;code&gt;config/warble.rb&lt;/code&gt;&amp;#46; In it, modify the following sections:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config.gems = ["activerecord-jdbcmysql-adapter"]
...
config.webxml.jruby.min.runtimes = 2
config.webxml.jruby.max.runtimes = 4
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Build and deploy the &amp;#46;war&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jruby -S warble
asadmin deploy --contextroot / blog.war
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;code&gt;--contextroot /&lt;/code&gt; makes the application rooted at &lt;code&gt;/&lt;/code&gt; in the server, rather than at &lt;code&gt;/blog&lt;/code&gt; which would be the default&amp;#46;)&lt;/p&gt;

&lt;p&gt;At this point, the blog application is up and running on port 8080&amp;#46; I had previously been running the blog with an Apache/&amp;#46;htaccess&amp;#45;based setup reverse&amp;#45;proxying to mongrel, so all I had to do was change the port&amp;#46; I haven&amp;#8217;t touched it since&amp;#46;&lt;/p&gt;

&lt;h3&gt;But is this right for you?&lt;/h3&gt;

&lt;p&gt;Chances are, this setup is overkill for a simple blog&amp;#46; If you&amp;#8217;re going to try it, I&amp;#8217;d recommend at minimum running on a VPS with at least 1G of memory&amp;#46; But once you get the core pieces in place, updating and re&amp;#45;deploying the application is really just as simple as the last two commands&amp;#46; It&amp;#8217;s mundane and boring in its simplicity&amp;#46; But boring is good when you don&amp;#8217;t want to worry about having to keep Mongrel running, or max out the memory in your server and make it unstable&amp;#46;&lt;/p&gt;</content>
  </entry>
</feed>
