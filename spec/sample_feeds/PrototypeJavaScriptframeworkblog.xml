<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" xml:lang="en-US">
  <title>Prototype JavaScript framework - blog</title>
  <id>tag:prototypejs.org,2008:mephisto/blog</id>
  <generator uri="http://mephistoblog.com" version="0.7.3">Mephisto Noh-Varr</generator>
  <link href="http://prototypejs.org/feed/blog/atom.xml" rel="self" type="application/atom+xml" />
  <link href="http://prototypejs.org/blog" rel="alternate" type="text/html" />
  <updated>2008-10-17T07:33:12Z</updated>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Tobie</name>
    </author>
    <id>tag:prototypejs.org,2008-10-17:22154</id>
    <published>2008-10-17T07:32:00Z</published>
    <updated>2008-10-17T07:33:12Z</updated>
    <category term="blog" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/423480891/prototype-linkedin-group" rel="alternate" type="text/html" />
    <title>Prototype Linkedin Group</title>
<summary type="html">&lt;p&gt;When we first &lt;a href="http://prototypejs.org/2008/5/6/prototype-linkedin-group"&gt;launched&lt;/a&gt; the &lt;a href="http://www.linkedin.com/e/gis/99273/13A82A188D9E"&gt;Linkedin Prototype Group&lt;/a&gt;, we weren’t necessarily expecting it to be such a success–it’s over 800 members strong and counting.&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;When we first &lt;a href="http://prototypejs.org/2008/5/6/prototype-linkedin-group"&gt;launched&lt;/a&gt; the &lt;a href="http://www.linkedin.com/e/gis/99273/13A82A188D9E"&gt;Linkedin Prototype Group&lt;/a&gt;, we weren’t necessarily expecting it to be such a success–it’s over 800 members strong and counting.&lt;/p&gt;
&lt;p&gt;Also, at the time, there wasn’t much you could do after having joined the group. This has changed with the recent introduction of discussions.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.linkedin.com/groupAnswers?viewQuestionAndAnswers=&amp;amp;gid=99273&amp;amp;discussionID=196323"&gt;One of the first posts&lt;/a&gt; spurred some thoughts about the usefulness and goals of this Linkedin group especially given the high quality of our &lt;a href="http://groups.google.com/group/prototype-scriptaculous"&gt;new mailing list&lt;/a&gt;. (And let me take the opportunity to sincerely thank &lt;a href="http://crowdersoftware.com/"&gt;T.J. Crowder&lt;/a&gt; for all the effort he’s put into it.)&lt;/p&gt;

&lt;p&gt;My initial reaction, based on &lt;a href="http://groups.google.com/group/prototype-scriptaculous/browse_thread/thread/efc72972db79650e"&gt;an early August thread&lt;/a&gt; was to suggest keeping the development-orientated discussions in the mailing list, while expecting more career-orientated ones to take place in the Linkedin group.&lt;/p&gt;

&lt;p&gt;Of course, there’s no way we can nor should be controlling this, and in the end, you will be deciding what will happen where. So I suppose the only real &lt;em&gt;raison d’être&lt;/em&gt; of this post is to advise you of this new feature and open up the debate.&lt;/p&gt;

&lt;p&gt;Thoughts ?&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=FNi1m"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=FNi1m" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=RhgrM"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=RhgrM" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/10/17/prototype-linkedin-group</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Andrew</name>
    </author>
    <id>tag:prototypejs.org,2008-10-07:22119</id>
    <published>2008-10-07T21:23:00Z</published>
    <updated>2008-10-07T21:24:52Z</updated>
    <category term="blog" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/414175387/want-your-code-pimped" rel="alternate" type="text/html" />
    <title>Want your code "pimped"?</title>
<summary type="html">&lt;p&gt;We decided it’s finally time to implement an idea we had long ago.&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;We decided it’s finally time to implement an idea we had long ago.&lt;/p&gt;
&lt;p&gt;I’m an avid reader of the blog of Wil Shipley, a man in the business of writing great apps for OS X. His running code improvment series, &lt;a href="http://www.wilshipley.com/blog/2005/07/i-will-insult-your-code.html" title="Call Me Fishmeal.: I will insult your code!"&gt;Pimp My Code&lt;/a&gt;, takes submissions from readers who think their code needs refactoring. Then Shipley refactors them, explaining the whys and hows along the way. The submissions are small (never more than 75-100 lines), but in rewriting them Shipley always happens upon specific, useful programming tips. I don’t know the first thing about Objective-C, but I find the series fascinating and instructive.&lt;/p&gt;

&lt;p&gt;So we’re going to do something similar on this blog. Do you have a piece of JavaScript you want refactored? Does it use Prototype? Do this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Sign up for a &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; account if you don’t have one. It’s free and quick.&lt;/li&gt;
&lt;li&gt;Go to &lt;a href="http://gist.github.com/" title="Gist &amp;mdash; GitHub"&gt;Gist&lt;/a&gt;, GitHub’s pastebin app, and paste the code you want us to refactor. Mark it as “private” if you like.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/inbox/new/savetheclocktower"&gt;Message me on GitHub&lt;/a&gt; with the URL to your code snippet. If necessary, explain a bit about what the code does (or should do), but don’t write an epistle or anything.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I’ll share the submissions with the rest of the team and we’ll pick a few that we like. Then we’ll dedicate a post to each one, refactoring out loud along the way. We won’t be mean or snarky; this is not a &lt;a href="http://thedailywtf.com/" title="The Daily WTF: Curious Perversions in Information Technology"&gt;DailyWTF&lt;/a&gt;-style exercise.&lt;/p&gt;

&lt;p&gt;To pre-empt the obvious rebuttal: we do not consider this to be an act of charity, or code manna from computer heaven, or a gift from the light-bearers to the huddled masses. Whether we actually “improve” your code is not for us to say. It will, however, illustrate our coding style.&lt;/p&gt;

&lt;p&gt;If that sounds useful to you, then step up! Give us code and ask that it be pimped!&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=JQZWm"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=JQZWm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=3Zh5M"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=3Zh5M" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/10/7/want-your-code-pimped</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Andrew</name>
    </author>
    <id>tag:prototypejs.org,2008-10-07:22118</id>
    <published>2008-10-07T17:39:00Z</published>
    <updated>2008-10-07T19:37:06Z</updated>
    <category term="blog" />
    <category term="Featured" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/414004550/growing-the-community" rel="alternate" type="text/html" />
    <title>Growing the community</title>
<summary type="html">&lt;p&gt;Now that 1.6.0.3 is out, let’s talk about the Prototype community.&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;Now that 1.6.0.3 is out, let’s talk about the Prototype community.&lt;/p&gt;
&lt;p&gt;A lot of people have been commenting on how quiet it’s been around here over the last few months. There are several reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We were quite busy with behind-the-scenes stuff. Moving to &lt;a href="http://github.com"&gt;GitHub&lt;/a&gt; and &lt;a href="http://lighthouseapp.com"&gt;Lighthouse&lt;/a&gt; was quite the task. As part of that migration we went through all the bugs on the old Rails Trac and were therefore left with a large backlog of bugs that we’d waited too long to address.&lt;/li&gt;
&lt;li&gt;We were quite busy with our day jobs. Only a couple of us are freelancers; the rest work full-time for software companies. And usually there are several people working on Prototype at any one time, but over the summer it’s rarely been more than one or two.&lt;/li&gt;
&lt;li&gt;In an effort to “catch up” with the accumulated tickets, we tried to stuff too much into a single bugfix release. We need to keep releases small and focused; trying to change too much at once tends to disorient us and our users. Once we realized we needed to scale back this release, it took a while to figure out which changes needed to stay and which needed to be reverted.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These aren’t excuses; they’re just explanations. As a team, we agree that we’ve got to prevent such a long release gap from happening again, and to keep an eye out for warning signs like the ones listed above.&lt;/p&gt;

&lt;p&gt;This means, among other things, that we’re planning to move away from a “when it’s ready” release schedule. Instead, we’ll move toward one in which there are several releases per year; whatever &lt;em&gt;is&lt;/em&gt; ready in time for a given release will go in, and whatever &lt;em&gt;is not&lt;/em&gt; will have to wait. That applies to bug fixes and features alike. Eight months between releases just won’t work.&lt;/p&gt;

&lt;h3&gt;What you can do&lt;/h3&gt;

&lt;p&gt;Community outreach was one of the major goals of Prototype Developer Day. Many people are frustrated with the state of the Prototype community and would like to see some changes made. We’re in complete agreement.&lt;/p&gt;

&lt;p&gt;Ideally, as an open-source community grows, those who want to help out gravitate toward specific roles. Those who can grok the source code write patches; those who are good at diagnosing problems file bug reports; those who can write clearly contribute documentation; and so on. We’d love to grow that “halo” around Prototype Core so that things can get done more quickly.&lt;/p&gt;

&lt;p&gt;To be more specific, we would love help in any of these areas:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Give support on the &lt;a href="http://groups.google.com/group/prototype-scriptaculous"&gt;Prototype &amp;amp; scrip.aculous mailing list&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://prototype.lighthouseapp.com/projects/8886/home"&gt;File bugs in Lighthouse&lt;/a&gt; when you encounter errors or surprising behavior in Prototype.&lt;/li&gt;
&lt;li&gt;Write test cases or patches for &lt;a href="http://prototype.lighthouseapp.com/projects/8886-prototype/tickets?q=tagged%3A%22needs_tests%22"&gt;existing bugs in Lighthouse&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Discuss the direction of the library and its future on the &lt;a href="http://groups.google.com/group/prototype-core"&gt;Prototype Core mailing list&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Propose new features and implement them.&lt;/li&gt;
&lt;li&gt;Write documentation wherever you feel we need more; &lt;a href="http://prototype.lighthouseapp.com/projects/8886/home"&gt;submit it to Lighthouse&lt;/a&gt; as an enhancement.&lt;/li&gt;
&lt;li&gt;Suggest blog posts. (Or even write them!) &lt;a href="http://groups.google.com/group/prototype-core"&gt;Post to the Prototype Core list&lt;/a&gt; if you’re interested in doing this.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are, of course, many other things one can do to help us out. But if you’re looking for a way to contribute and don’t have something specific in mind, we’d suggest doing one of these seven things.&lt;/p&gt;

&lt;h3&gt;What we can do&lt;/h3&gt;

&lt;p&gt;We know we need more help, but we also know we need to be better community curators. So here are some things we pledge to do better:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We’ll beef up the Prototype web site so that it’s easier to get started with the framework, easier to find great resources like &lt;a href="http://scripteka.com/" title="Scripteka :: Prototype extensions library"&gt;Scripteka&lt;/a&gt; and &lt;a href="http://prototype-ui.com/" title="Prototype UI"&gt;Prototype UI&lt;/a&gt;, and easier to find answers to common questions.&lt;/li&gt;
&lt;li&gt;We’ll give special attention to documentation tickets on Lighthouse so that our API docs don’t stay stale and thin.&lt;/li&gt;
&lt;li&gt;We’ll release on a more consistent schedule, as explained above.&lt;/li&gt;
&lt;li&gt;We’ll resume work on &lt;a href="http://github.com/tobie/pdoc/tree/master"&gt;PDoc&lt;/a&gt; (inline documentation) and &lt;a href="http://github.com/sstephenson/sprockets/tree/master"&gt;Sprockets&lt;/a&gt; (JS dependency management), spin-off projects that make Prototype more of a “platform.” They’ll be a boon to the Prototype ecosystem when they’re completed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally: if you consider yourself to be good at planning and organizing an open-source project, then we’d love your input on how to grow our community. Our highest priority, however, is not to launch a new initiative or process; it’s to get more people doing the seven things listed above.&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=zV6Am"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=zV6Am" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=XxZnM"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=XxZnM" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/10/7/growing-the-community</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Andrew</name>
    </author>
    <id>tag:prototypejs.org,2008-09-30:22022</id>
    <published>2008-09-30T17:48:00Z</published>
    <updated>2008-09-30T17:49:27Z</updated>
    <category term="blog" />
    <category term="Featured" />
    <category term="Releases" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/407477101/prototype-1-6-0-3-one-more-bugfix-release-before-1-6-1" rel="alternate" type="text/html" />
    <title>Prototype 1.6.0.3: A long-awaited bugfix release</title>
<summary type="html">&lt;p&gt;Yesterday we released Prototype 1.6.0.3, the result of some much-needed bug fixes, and a stopgap release on the road to 1.6.1.&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;Yesterday we released Prototype 1.6.0.3, the result of some much-needed bug fixes, and a stopgap release on the road to 1.6.1.&lt;/p&gt;
&lt;p&gt;It’s a backwards-compatible, drop-in replacement recommended for all users of Prototype 1.6. We’ve fixed 30 bugs and made 25 other improvements to our already-rock-solid library.&lt;/p&gt;

&lt;p&gt;Developers who follow along in Git might’ve noticed that the repository has seen &lt;em&gt;a lot&lt;/em&gt; of disruptive activity in the last few days as we reassessed many of the commits that had gone into the library since April. Rather than try to fit too many fixes into one release, we decided to scale back and release 1.6.0.3 with the set of improvements we were in complete agreement on.&lt;/p&gt;

&lt;p&gt;Because of the way we handled this overhaul, those who try to update their Git working copies to the latest trunk will encounter conflicts, &lt;em&gt;even if they hadn’t made local changes&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Here’s how we recommend bringing your working copy up to date:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First, if you’ve made any local changes, please create a new branch so that those changes aren’t lost.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On your local master branch, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git fetch origin master
git reset --hard 34ee207&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first line fetches the new commits without trying to apply them to your local copy. The second line resets your master branch to be in sync with the latest revision.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;From there, you can cherry-pick from your branch any local commits you made (though you may have to do some manual merging).&lt;/li&gt;
&lt;/ol&gt;



&lt;h3&gt;Download, report bugs, and get help&lt;/h3&gt;


	&lt;ul&gt;
	&lt;li&gt;&lt;a href="http://prototypejs.org/assets/2008/9/29/prototype-1.6.0.3.js"&gt;Download Prototype 1.6.0.3&lt;/a&gt;&lt;/li&gt;
		&lt;li&gt;&lt;a href="http://prototype.lighthouseapp.com/projects/8886-prototype"&gt;Submit bug reports&lt;/a&gt; to Lighthouse&lt;/li&gt;
		&lt;li&gt;&lt;a href="http://prototypejs.org/discuss"&gt;Get Prototype help&lt;/a&gt; on the Prototype &amp; script.aculo.us mailing list or #prototype &lt;span class="caps"&gt;IRC&lt;/span&gt; channel&lt;/li&gt;
		&lt;li&gt;&lt;a href="http://groups.google.com/group/prototype-core"&gt;Interact with the Core Team&lt;/a&gt; on the prototype-core mailing list&lt;/li&gt;
	&lt;/ul&gt;


	&lt;p&gt;As always, thanks to the core team and the many users who contributed bug reports and well-tested patches for this release.&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=YaW0l"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=YaW0l" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=c82WL"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=c82WL" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/9/30/prototype-1-6-0-3-one-more-bugfix-release-before-1-6-1</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Tobie</name>
    </author>
    <id>tag:prototypejs.org,2008-08-11:21243</id>
    <published>2008-08-11T13:48:00Z</published>
    <updated>2008-08-11T16:52:17Z</updated>
    <category term="blog" />
    <category term="books" />
    <category term="Featured" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/361987159/practical-prototype-and-scriptaculous" rel="alternate" type="text/html" />
    <title>Practical Prototype and script.aculo.us</title>
<summary type="html">&lt;p&gt;&lt;a href="http://www.apress.com/book/view/1590599195"&gt;&lt;img src="/assets/2008/8/11/9781590599198.gif" /&gt;&lt;/a&gt;
We’re very happy to announce a new addition to the Prototype bookshelf: core committer &lt;a href="http://andrewdupont.net/"&gt;Andrew Dupont&lt;/a&gt;’s &lt;a href="http://www.apress.com/book/view/1590599195"&gt;&lt;cite&gt;Practical Prototype and script.aculo.us&lt;/cite&gt;&lt;/a&gt; published by Apress.&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;&lt;a href="http://www.apress.com/book/view/1590599195"&gt;&lt;img src="/assets/2008/8/11/9781590599198.gif" /&gt;&lt;/a&gt;
We’re very happy to announce a new addition to the Prototype bookshelf: core committer &lt;a href="http://andrewdupont.net/"&gt;Andrew Dupont&lt;/a&gt;’s &lt;a href="http://www.apress.com/book/view/1590599195"&gt;&lt;cite&gt;Practical Prototype and script.aculo.us&lt;/cite&gt;&lt;/a&gt; published by Apress.&lt;/p&gt;
&lt;p&gt;Obviously, &lt;a href="http://www.apress.com/book/view/1590599195"&gt;&lt;cite&gt;Practical Prototype and script.aculo.us&lt;/cite&gt;&lt;/a&gt; covers all you need to know about the latest versions of Prototype and script.aculo.us. But it goes well beyond that. Andrew does an awesome job at setting the context and giving appropriate background information, so much so that you’ll end up knowing not only the &lt;em&gt;how&lt;/em&gt; but also the &lt;em&gt;why&lt;/em&gt;. In the ruthless world of client-side development, that’s a serious asset!&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.apress.com/book/view/1590599195"&gt;&lt;cite&gt;Practical Prototype and script.aculo.us&lt;/cite&gt;&lt;/a&gt; is a pleasure to read – the style is both straightforward &lt;em&gt;and&lt;/em&gt; witty – and should appeal to beginners and seasoned developers alike.&lt;/p&gt;

&lt;p&gt;If you want to try before you buy, you can always download a &lt;a href="http://www.apress.com/book/downloadfile/4037"&gt;sample chapter&lt;/a&gt; or the &lt;a href="http://www.apress.com/book/downloadfile/4038"&gt;table of contents&lt;/a&gt; from the Apress website. Or you can grab a hard copy and/or a pdf from the &lt;a href="http://www.apress.com/book/view/1590599195"&gt;Apress website&lt;/a&gt; or from &lt;a href="http://www.amazon.com/Practical-Prototype-script-aculo-us-Experts-Development/dp/1590599195/"&gt;Amazon&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As always, happy Prototyping!&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=UPRBo"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=UPRBo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=TkQUO"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=TkQUO" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/8/11/practical-prototype-and-scriptaculous</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Christophe</name>
    </author>
    <id>tag:prototypejs.org,2008-07-25:21197</id>
    <published>2008-07-25T16:29:00Z</published>
    <updated>2008-09-03T07:35:31Z</updated>
    <category term="blog" />
    <category term="Featured" />
    <category term="devday,tae,conference" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/345808947/first-prototype-developer-day-monday-september-29-2008" rel="alternate" type="text/html" />
    <title>First Prototype Developer Day: Monday September 29, 2008!</title>
<summary type="html">&lt;p&gt;&lt;img src="/assets/2008/7/25/pdd75.gif" /&gt;&lt;/p&gt;


	&lt;p&gt;Prototype Core is happy to announce the first Prototype Developer Day!  The Prototype Developer Day is going to be a recurring event bringing together Prototype Core members and users from the Prototype community to share experiences, offer insight into what’s coming up, and discuss topics like contribution, support, and the Prototype ecosystem.  If you’re big on Prototype, you cannot miss this!&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;&lt;img src="/assets/2008/7/25/pdd75.gif" /&gt;&lt;/p&gt;


	&lt;p&gt;Prototype Core is happy to announce the first Prototype Developer Day!  The Prototype Developer Day is going to be a recurring event bringing together Prototype Core members and users from the Prototype community to share experiences, offer insight into what’s coming up, and discuss topics like contribution, support, and the Prototype ecosystem.  If you’re big on Prototype, you cannot miss this!&lt;/p&gt;
&lt;p&gt;This fall, the Prototype Developer Day is being held in conjunction with &lt;a href="http://ajaxexperience.techtarget.com"&gt;The Ajax Experience&lt;/a&gt;, held in Boston from Monday, September 29 to Wednesday, October 1 2008.  The Prototype Developer Day itself will happen on Monday.&lt;/p&gt;


	&lt;p&gt;&lt;strong&gt;Admission to the Developer Day is free&lt;/strong&gt;. If you’re interested in attending the full three days of The Ajax Experience, you can &lt;strong&gt;save $100 with the code &lt;code&gt;Prototype&lt;/code&gt;&lt;/strong&gt;. Register before August 22nd and &lt;strong&gt;save an additional $100&lt;/strong&gt;.&lt;/p&gt;


	&lt;p&gt;The provisional agenda for this Prototype Developer Day is as follows (more details coming up on the &lt;a href="http://ajaxexperience.techtarget.com/east/html/eventsataglance.html?Offer=AEprot717"&gt;full agenda&lt;/a&gt;):&lt;/p&gt;


&amp;lt;style type="text/css"&gt;#pddAgenda { border: 2px solid silver; border-collapse: collapse; margin: 1em auto; } #pddAgenda th, #pddAgenda td { border: 1px solid silver; text-align: center; padding: 0.2em 0.5em } #pddAgenda th { background: silver; }&amp;lt;/style&gt;

	&lt;table&gt;
		&lt;tr&gt;
			&lt;th&gt;Start time&lt;/th&gt;
			&lt;th&gt;End time&lt;/th&gt;
			&lt;th&gt;Session&lt;/th&gt;
			&lt;th&gt;Speaker&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;8:00am&lt;/td&gt;
			&lt;td&gt;8:30am&lt;/td&gt;
			&lt;td&gt;Intro/Welcome&lt;/td&gt;
			&lt;td&gt;Prototype Core&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;8:30am&lt;/td&gt;
			&lt;td&gt;9:30am&lt;/td&gt;
			&lt;td&gt;Contributing docs&lt;/td&gt;
			&lt;td&gt;Christophe Porteneuve&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;9:30am&lt;/td&gt;
			&lt;td&gt;9:45am&lt;/td&gt;
			&lt;td&gt;Break&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;9:45am&lt;/td&gt;
			&lt;td&gt;9:50am&lt;/td&gt;
			&lt;td&gt;Greeting&lt;/td&gt;
			&lt;td&gt;Framework Summit Sponsor&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;9:50am&lt;/td&gt;
			&lt;td&gt;10:30am&lt;/td&gt;
			&lt;td&gt;Contributing code&lt;/td&gt;
			&lt;td&gt;Andrew Dupont&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;10:30am&lt;/td&gt;
			&lt;td&gt;11:15am&lt;/td&gt;
			&lt;td&gt;The Prototype ecosystem&lt;/td&gt;
			&lt;td&gt;&lt;span class="caps"&gt;TBD&lt;/span&gt;&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;11:15am&lt;/td&gt;
			&lt;td&gt;11:30am&lt;/td&gt;
			&lt;td&gt;Break&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;11:30am&lt;/td&gt;
			&lt;td&gt;1:00pm&lt;/td&gt;
			&lt;td&gt;Extended Q&amp;A&lt;/td&gt;
			&lt;td&gt;Prototype Core&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/table&gt;




	&lt;p&gt;You will get a chance to hook up with members of Prototype Core and “close core”, and we all look forward to meeting you guys.  Here’s the current rundown:&lt;/p&gt;


	&lt;ul&gt;
	&lt;li&gt;Sam Stephenson &lt;em&gt;(to be confirmed)&lt;/em&gt;&lt;/li&gt;
		&lt;li&gt;Andrew Dupont &lt;em&gt;(confirmed)&lt;/em&gt;&lt;/li&gt;
		&lt;li&gt;Juriy “kangax” Zaytsev &lt;em&gt;(confirmed)&lt;/em&gt;&lt;/li&gt;
		&lt;li&gt;Mislav Marohnić &lt;em&gt;(to be confirmed)&lt;/em&gt;&lt;/li&gt;
		&lt;li&gt;Tobie Langel &lt;em&gt;(to be confirmed)&lt;/em&gt;&lt;/li&gt;
		&lt;li&gt;Christophe Porteneuve &lt;em&gt;(confirmed)&lt;/em&gt;&lt;/li&gt;
	&lt;/ul&gt;


	&lt;p&gt;For more information on coming with a group, contact &lt;a href="mailto:%22Tracey%20West%22%20%3Ctwest%40techtarget.com%3E?subject=Group%20pricing%20for%20TAE"&gt;Tracey West&lt;/a&gt;.  You can view the &lt;a href="http://ajaxexperience.techtarget.com/east/html/eventsataglance.html?Offer=AEprot717"&gt;agenda&lt;/a&gt; for The Ajax Experience, and then proceed to one or both of the following:&lt;/p&gt;


	&lt;ul&gt;
	&lt;li&gt;Want to register for &lt;span class="caps"&gt;PDD&lt;/span&gt;?  You &lt;strong&gt;must&lt;/strong&gt; use our special &lt;a href="http://devdays.prototypejs.org"&gt;quick form&lt;/a&gt;.  Registering for &lt;span class="caps"&gt;TAE&lt;/span&gt; &lt;strong&gt;doesn’t&lt;/strong&gt; automatically sign you up for &lt;span class="caps"&gt;PDD&lt;/span&gt;, and the number of seats is pretty limited. (But, hey, there’s a free lunch!)&lt;/li&gt;
		&lt;li&gt;&lt;a href="http://www.regonline.com/ajaxexperience"&gt;Register for The Ajax Experience&lt;/a&gt;.&lt;/li&gt;
	&lt;/ul&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=3Mq4o"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=3Mq4o" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=fsqfO"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=fsqfO" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/7/25/first-prototype-developer-day-monday-september-29-2008</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Andrew</name>
    </author>
    <id>tag:prototypejs.org,2008-07-14:21171</id>
    <published>2008-07-14T15:51:00Z</published>
    <updated>2008-07-14T15:59:25Z</updated>
    <category term="blog" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/335218749/announcing-new-prototype-support-mailing-list" rel="alternate" type="text/html" />
    <title>Announcing new Prototype support mailing list</title>
<summary type="html">&lt;p&gt;Subscribers to the Rails Spinoffs mailing list should switch to our new, better-named list: &lt;a href="http://groups.google.com/group/prototype-scriptaculous" title="Prototype &amp;amp; script.aculo.us | Google Groups"&gt;Prototype &amp;amp; script.aculo.us&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;Subscribers to the Rails Spinoffs mailing list should switch to our new, better-named list: &lt;a href="http://groups.google.com/group/prototype-scriptaculous" title="Prototype &amp;amp; script.aculo.us | Google Groups"&gt;Prototype &amp;amp; script.aculo.us&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While these two venerable libraries are, in truth, spinoffs of the Rails project, we’ve come to realize it’s far more user-friendly to have the libraries’ names in the name of the mailing list. This should help guide users to the right spot and reduce the amount of support traffic on the &lt;a href="http://groups.google.com/group/prototype-core" title="Prototype: Core | Google Groups"&gt;Prototype Core mailing list&lt;/a&gt; — which is for discussion of Prototype’s development process, not support.&lt;/p&gt;

&lt;p&gt;Because list spam is a sad reality, your first post to the list will be held for moderation. Once it’s approved, though, you’ll be able to post with impunity.&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=dIgQo"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=dIgQo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=IupQO"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=IupQO" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/7/14/announcing-new-prototype-support-mailing-list</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Tobie</name>
    </author>
    <id>tag:prototypejs.org,2008-06-11:20683</id>
    <published>2008-06-11T21:58:00Z</published>
    <updated>2008-11-10T07:53:35Z</updated>
    <category term="blog" />
    <category term="Interviews" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/309944908/an-interview-with-ryan-johnson" rel="alternate" type="text/html" />
    <title>An Interview with Ryan Johnson</title>
<summary type="html">&lt;p&gt;&lt;img src="http://prototypejs.org/assets/2008/6/11/ryanjohnson.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Today’s interviewee is &lt;a href="http://livepipe.net/"&gt;Ryan Johnson&lt;/a&gt; of &lt;a href="http://livepipe.net/projects/control_suite/"&gt;Control Suite&lt;/a&gt; fame.&lt;/p&gt;

&lt;p&gt;Ryan just launched &lt;a href="http://personalgrid.com/"&gt;PersonalGrid&lt;/a&gt;, a new file sharing and publishing web application, along with a complete overhaul of Control Suite, now renamed &lt;a href="http://livepipe.net/"&gt;LivePipe UI&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;&lt;img src="http://prototypejs.org/assets/2008/6/11/ryanjohnson.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Today’s interviewee is &lt;a href="http://livepipe.net/"&gt;Ryan Johnson&lt;/a&gt; of &lt;a href="http://livepipe.net/projects/control_suite/"&gt;Control Suite&lt;/a&gt; fame.&lt;/p&gt;

&lt;p&gt;Ryan just launched &lt;a href="http://personalgrid.com/"&gt;PersonalGrid&lt;/a&gt;, a new file sharing and publishing web application, along with a complete overhaul of Control Suite, now renamed &lt;a href="http://livepipe.net/"&gt;LivePipe UI&lt;/a&gt;.&lt;/p&gt;
&lt;p class="question"&gt;&lt;b&gt;Hi, Ryan. Could you please introduce yourself.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;Ryan Johnson:&lt;/span&gt; I’ve been writing web pages since 1993, but I’ve only felt comfortable calling myself a programmer for the last 5 years. I drank the Prototype kool-aid about 2 and a half years ago, and I’d say today nearly 75% of all the code I write is JavaScript. I enjoy writing Ruby just as much, but fewer and fewer people are asking me to do any work in Ruby at all.&lt;/p&gt;

&lt;p&gt;The language itself hasn’t evolved all that much, but watching our collective knowledge and understanding of it grow has been a surprise and delight.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;You just released a new web application: PersonalGrid. Can you tell us about it?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/2008/6/11/personalgrid.png" /&gt;
&lt;span class="interviewee"&gt;RJ:&lt;/span&gt; &lt;a href="http://personalgrid.com/"&gt;PersonalGrid&lt;/a&gt; is a file-sharing and publishing application that I’ve written. You can use it to upload files and publish single files or whole folders with one click. It’s also easy to share with friends or whole groups of users.&lt;/p&gt;

&lt;p&gt;We have a dev team of one (me), and this is our first beta release, so hopefully any bugs you encounter won’t be too catastrophic.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;How are you using Prototype in PersonalGrid? And script.aculo.us?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;RJ:&lt;/span&gt; On the Rails side, 95% of the actions use a REST interface and spit back &lt;a href="http://json.org"&gt;JSON&lt;/a&gt;, so the app is very client-heavy. Almost all of the HTML is generated with the Prototype &lt;a href="http://prototypejs.org/api/template “Prototype JavaScript framework:  Template”"&gt;Template&lt;/a&gt; class, with a little usage of the &lt;a href="http://prototypejs.org/api/element"&gt;&lt;code&gt;new Element&lt;/code&gt;&lt;/a&gt; syntax thrown in where appropriate. I used the Draggables and Droppables from script.aculo.us, but little else. I also ended up making many modifications (which I will release on &lt;a href="http://github.com/saucytiger"&gt;GitHub&lt;/a&gt; sometime soon) to both of those classes to support some extra functionality.&lt;/p&gt;

&lt;p&gt;Both Object.Event and LivePipe UI are discussed below, but those libraries are integral to the application. So our JavaScript stack looks like Prototype &amp;rarr; LivePipe UI &amp;rarr; PersonalGrid Application. The actual PersonalGrid JavaScript code is a number of classes that represent the major UI components (File, Folder, Friend, Group, etc), and a number of controller classes that initiate Ajax requests and process the JSON responses.&lt;/p&gt;

&lt;p&gt;In the process of building the application layer I kept seeing inklings of a JavaScript MVC framework, but I just don’t see where the reusability would come from. Prototype is ever more awesome, and I’m releasing components that others will hopefully find useful.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;What were the biggest challenges you faced when building it?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;RJ:&lt;/span&gt; Internet Explorer. The only debate about the IE debacle that should be going on is whether the product is a result of incompetence or was designed deliberately to sabotage the development of complex web applications. They got XHR and the mouseenter/mouseleave events right, but that is about it.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;Any technical advice, tips, or tricks you’d like to share?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;RJ:&lt;/span&gt; Start using a broadcast/subscription based event model for everything in your app, not just Element objects! Of course I am going to plug my own solution &lt;a href="http://livepipe.net/projects/object_event/"&gt;Object.Event&lt;/a&gt; — but whether or not you use that, having a system where you can trigger your own events that do not relate to the DOM is critical for the maintainability of your code base. The new custom events in Prototype 1.6 are great (and I used a few in PersonalGrid), but it’s still geared towards the DOM.&lt;/p&gt;

&lt;p&gt;For example, we have a trash can feature in PersonalGrid. Each user’s root directory has a &lt;code&gt;.Trash&lt;/code&gt; folder, which mostly acts like any other folder, but we need to specialize its behavior. The two biggest differences are that we want to take the &lt;code&gt;.Trash&lt;/code&gt; folder out of the normal directory listing, and give it a special place in the UI. We also want &lt;code&gt;.Trash&lt;/code&gt; to behave differently when you are in it. We have a Location class that is responsible for changing folders, rending the directory listing, etc. Instead of putting these specializations for the Trash inside the Location class, we have the Location class fire an &lt;code&gt;onChangeLocation&lt;/code&gt; event, which the Trash class observes.&lt;/p&gt;

&lt;p&gt;It’s not only a conceptually elegant way to solve the problem, but you get the added benefit of having all of the code that relates to the Trash in one place. As I was developing the app, we ended up wanting all of these little specializations for friendship folders, group folders, etc, so the broadcast/subscription model has really ended up paying huge dividends as the project progresses.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;You’re using a Java applet for file upload. Why did you choose to use that technology? What are the advantages over using flash?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;RJ:&lt;/span&gt; There are some problems with the delay in loading the JVM, and the whole certificate/trust issues that all applets have, so I don’t want to sound too triumphant about the choice just yet. The main reason I choose Java instead of Flash is that you can drag and drop files onto the applet, which Flash does not support. Leopard supports dragging files directly onto file inputs, but users do not universally expect that behavior yet.&lt;/p&gt;

&lt;p&gt;One of the areas I’d like to explore more is deep interaction between Java/Flash and JavaScript. The Java applet is one of the few parts of PersonalGrid that I didn’t write, but I worked closely with our Java coder to create a large series of JavaScript callbacks inside the applet so I could build a UI with Prototype.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/2008/6/11/personalgrid_3_1.jpg" alt="Java applet uploader screenshot" /&gt;&lt;/p&gt;

&lt;p&gt;There are a lot of fairly hairy undocumented bugs with &lt;a href="http://en.wikipedia.org/wiki/LiveConnect"&gt;LiveConnect&lt;/a&gt; (the Java/JS bridge), but until we get richer native functionality this is the only way to get around some of the security constrains browsers place on accessing the local machine.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;You’re well known within the Prototype community for Control Suite. Can you tell us a bit more about it? Are you using any of it in PersonalGrid?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;RJ:&lt;/span&gt; Well I’d like to apologize to the users of Control Suite for neglecting it for the past 8 months! PersonalGrid and some other obligations really destroyed my schedule. Control Suite has just received a major update, and is now called &lt;a href="http://livepipe.net/"&gt;LivePipe UI&lt;/a&gt; and is compatible with Prototype 1.6. Most of the complex UI elements you see in PersonalGrid (windows, context menus, selection, etc) are available in the new LivePipe UI release.&lt;/p&gt;

&lt;p&gt;LivePipe UI tries to provide a set of reusable core UI components that has a similar API design philosophy to Prototype. So far only components I have needed are part of the kit, but I am hoping that it grows with time. Now that it is on GitHub I’m hoping that it will be easier for users to contribute. The biggest news to existing users is that the Control.Modal class has been completely rewritten, and it is now a subclass of Control.Window. There are also proper Lightbox and Tooltip classes. The new class system in Prototype 1.6 made that far more elegant than it would have been before.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;PersonalGrid has a distinct Mac feel. What made you aim for a desktop-like application?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;RJ:&lt;/span&gt; Since an application of this nature is all about finding and organizing files and folders, why not recreate an interface people are already completely familiar with? We have a ways to go to catch up feature wise to &lt;a href="http://box.net"&gt;Box.net&lt;/a&gt;, but when I first used their service I noticed they used some desktop metaphors (like drag and drop), but overall the application still felt too much like a website. Plenty of web services &lt;strong&gt;should&lt;/strong&gt; feel like websites, but I don’t think file management apps should (except for &lt;a href="http://drop.io"&gt;Drop.io&lt;/a&gt;, which is wonderfully simple).&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/2008/6/11/personalgrid_2_1.jpg" alt="PersonalGrid screenshot" /&gt;&lt;/p&gt;

&lt;p&gt;With regards to the Mac feel… besides borrowing some of the icons (still wondering if we will hear from Apple legal), there are a lot of very particular things that I like about the Finder. One of the hidden features of the PersonalGrid UI is that if you pick up an item and hover over any folder, breadcrumb, group or friendship, you will navigate to that location, and you will still be able to drop the item in any sub folder at the new location. The Finder does this, but I rarely use it because you can have multiple Finder windows open, or use the column view. In a two paned interface it’s the only way to elegantly get an item from A to C without moving it to B first.&lt;/p&gt;

&lt;p&gt;Rich web development is still in its infancy, but Apple (and others) have had many complex UI problems elegantly solved for years on the desktop, so when I would run into a brick wall like the A-to-C problem, I would see how it was solved in the Finder, or even read the documentation in the &lt;a href="http://developer.apple.com/documentation/UserExperience/Conceptual/OSXHIGuidelines/XHIGIntro/chapter_1_section_1.html"&gt;Human Interface Guidelines&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was also an amazingly fun challenge to deconstruct and recreate something as basic as the selection for the new &lt;a href="http://livepipe.net/control/selection"&gt;Control.Selection&lt;/a&gt; library, which is also one of the core components of the PersonalGrid UI. When building something that complex yet fundamental one realizes all of the tweaks that coders and designers before you have thought obsessively about.&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=wNhoo"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=wNhoo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=X8gOO"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=X8gOO" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/6/11/an-interview-with-ryan-johnson</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Tobie</name>
    </author>
    <id>tag:prototypejs.org,2008-05-28:20739</id>
    <published>2008-05-28T23:21:00Z</published>
    <updated>2008-05-29T00:14:19Z</updated>
    <category term="blog" />
    <category term="Featured" />
    <category term="Interviews" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/300155492/an-interview-with-piotr-dachtera" rel="alternate" type="text/html" />
    <title>An Interview with Piotr Dachtera</title>
<summary type="html">&lt;p&gt;&lt;img src="http://prototypejs.org/assets/2008/5/28/piotrdachtera.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Piotr Dachtera is the lead developer behind the recently-launched &lt;a href="http://live.chess.com/"&gt;Live Chess&lt;/a&gt;, a Prototype-based, Comet-powered live chess game.&lt;/p&gt;

&lt;p&gt;We talked to him about the client-side challenges he faced along the way.&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;&lt;img src="http://prototypejs.org/assets/2008/5/28/piotrdachtera.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Piotr Dachtera is the lead developer behind the recently-launched &lt;a href="http://live.chess.com/"&gt;Live Chess&lt;/a&gt;, a Prototype-based, Comet-powered live chess game.&lt;/p&gt;

&lt;p&gt;We talked to him about the client-side challenges he faced along the way.&lt;/p&gt;
&lt;p class="question"&gt;&lt;b&gt;Hi, Piotr. Could you please introduce yourself?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;Piotr Dachtera:&lt;/span&gt; Sure. I’m currently the lead developer of the JavaScript/Ajax/Comet part of &lt;a href="http://chess.com"&gt;chess.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’ve been dedicated to Web + chess applications since 1999. I’ve also been working on business software since 2000 (mainly &lt;a href="http://java.sun.com/"&gt;Java&lt;/a&gt;). My interest in the game of chess was always pushing me forward and finally I think I can say I’m working on the number one web chess project.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;You’ve built &lt;a href="http://live.chess.com/"&gt;Live Chess&lt;/a&gt; using Prototype and &lt;a href="http://script.aculo.us"&gt;script.aculo.us&lt;/a&gt;. Can you tell us more about the application?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;PD:&lt;/span&gt; Chess community website users need to share things using a specific “language” which needs something more than plain text. They need to share game positions, whole chess games with analysis, and chess puzzles. Also, they want to play against each other.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/2008/5/28/chess.jpg" alt="Screenshot of Live Chess" /&gt;&lt;/p&gt;

&lt;p&gt;As we were starting to work on it all, I already had some experience with Prototype and script.aculo.us, and it was the natural choice.&lt;/p&gt;

&lt;p&gt;We started with the interactive boards with draggable pieces, chess game parsers and things like that. Naturally, I had in mind that we were going to build something much more complex (the scalable real-time play server), so enclosing everything in reusable classes was the only solution. As it was always tempting to see what’s inside Prototype, I was investigating its source all the time and I was trying to build my classes using the same style.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;Live Chess uses Comet to keep the chessboard synchronized. What made you choose that technology over ordinary Ajax?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;PD:&lt;/span&gt; The most important word in “Live Chess” is “live.” We need things to happen instantly. We can’t use polling to check every 10 seconds if anything changed.&lt;/p&gt;

&lt;p&gt;If people want to play a game of chess in 2 minutes, they need some kind of &lt;em&gt;instant&lt;/em&gt; communication.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;Can you give us more details on the Comet implementation?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;PD:&lt;/span&gt; Working on my own proof-of-concept chess server in 2005, I “(re)invented” the Comet idea to allow this kind of communication… only to find out that people were using the same idea in simple chat apps.&lt;/p&gt;

&lt;p&gt;The next step (which came with the new server built for the chess.com community and needed real scalability) was to use the idea of thread-less server solutions implemented in &lt;a href="http://www.mortbay.org/"&gt;Jetty&lt;/a&gt; server and &lt;a href="http://activemq.apache.org/"&gt;ActiveMQ&lt;/a&gt; to push messages between client and server. &lt;/p&gt;

&lt;p&gt;Finally, we switched to &lt;a href="http://cometd.com/"&gt;Cometd/Bayeux&lt;/a&gt; with our own solution for guaranteed messaging and message ordering.&lt;/p&gt;

&lt;p&gt;In all of these solutions, there was always Java on the server-side.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;What are you using Prototype for?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;PD:&lt;/span&gt; I started with script.aculo.us effects investigation which guided me directly to Prototype.&lt;/p&gt;

&lt;p&gt;Currently, I’m not really a JavaScript developer. I’m a Prototype developer using the library everywhere.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;On top of Prototype and &lt;a href="http://dojotoolkit.org"&gt;Dojo&lt;/a&gt;, I saw you were also using &lt;a href="http://extjs.com"&gt;ExtJS&lt;/a&gt; in Live Chess. Was the integration of these three libraries seamless or were there issues?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;PD:&lt;/span&gt; We are using ExtJS with the &lt;a href="http://extjs.com/products/extjs/build/"&gt;Prototype adapter&lt;/a&gt; so there was nothing really hard to do here.&lt;/p&gt;

&lt;p&gt;Dojo things are completely separated from the rest of the system, but we had to use the library for Cometd communication. As a Prototype fan, I would be really happy to have a Cometd implementation built on top of Prototype, but currently I had to use Dojo in this area (which is sandboxed in a separate communication frame).&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;What were the biggest challenges you faced with this application?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;PD:&lt;/span&gt; We still have lots of big challenges! But if I had to choose one, I would say: performance. Everybody wants to use Live Chess (and any other similar application) as if it was a desktop application.
As the system becomes heavier and more complex, we still have to work hard to keep it &lt;em&gt;smooth&lt;/em&gt;.&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=GLv8o"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=GLv8o" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=1cJjO"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=1cJjO" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/5/28/an-interview-with-piotr-dachtera</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>sam</name>
    </author>
    <id>tag:prototypejs.org,2008-05-27:20728</id>
    <published>2008-05-27T19:06:00Z</published>
    <updated>2008-05-27T20:10:17Z</updated>
    <category term="blog" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/299315548/prototype-hosted-on-google-s-servers" rel="alternate" type="text/html" />
    <title>Prototype hosted on Google's servers</title>
<summary type="html">&lt;p&gt;Good news!  Google now offers a cached, compressed copy of Prototype on its high-speed content distribution network via the &lt;a href="http://code.google.com/apis/ajaxlibs/"&gt;&lt;span class="caps"&gt;AJAX&lt;/span&gt; Libraries &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;Good news!  Google now offers a cached, compressed copy of Prototype on its high-speed content distribution network via the &lt;a href="http://code.google.com/apis/ajaxlibs/"&gt;&lt;span class="caps"&gt;AJAX&lt;/span&gt; Libraries &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can either link to the source code directly:&lt;/p&gt;


&lt;pre&gt;
  &amp;lt;script type="text/javascript" 
    src="http://ajax.googleapis.com/ajax/libs/prototype/1.6.0.2/prototype.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;

	&lt;p&gt;Or you can use Google’s &lt;span class="caps"&gt;API&lt;/span&gt;:&lt;/p&gt;


&lt;pre&gt;
  &amp;lt;script type="text/javascript" src="http://www.google.com/jsapi"&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;script type="text/javascript"&amp;gt;google.load("prototype", "1.6.0.2");&amp;lt;/script&amp;gt;
&lt;/pre&gt;

	&lt;p&gt;More information is available from &lt;a href="http://code.google.com/apis/ajaxlibs/documentation/index.html#prototype"&gt;Google’s documentation&lt;/a&gt;.&lt;/p&gt;


	&lt;p&gt;When a specific version of Prototype is delivered to your browser, it will be cached for one year and served with the proper compression headers.  That means that most users of sites which link to Google’s copy of Prototype will incur a ~30 KB download only once.&lt;/p&gt;


	&lt;p&gt;We typically encourage developers building applications with Prototype to concatenate all their JavaScript into a single file, and serve that file with the proper content expiration and compression settings.  In cases where this is unfeasible, Google’s hosted version is an excellent alternative.&lt;/p&gt;


	&lt;p&gt;Special thanks to Dion Almaer and the team at Google for making this possible.&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=2glZo"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=2glZo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=lfdFO"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=lfdFO" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/5/27/prototype-hosted-on-google-s-servers</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Tobie</name>
    </author>
    <id>tag:prototypejs.org,2008-05-21:20702</id>
    <published>2008-05-21T06:01:00Z</published>
    <updated>2008-05-22T02:13:20Z</updated>
    <category term="blog" />
    <category term="Featured" />
    <category term="Interviews" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/295278454/an-interview-with-amy-hoy" rel="alternate" type="text/html" />
    <title>An Interview with Amy Hoy</title>
<summary type="html">&lt;p&gt;&lt;img src="/assets/2008/5/21/amy.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Hot on the heels of last week’s &lt;a href="http://prototypejs.org/2008/5/14/an-interview-with-sergio-pereira"&gt;interview with Sergio Pereira&lt;/a&gt;, we were lucky enough to catch up with &lt;a href="http://slash7.com"&gt;Amy Hoy&lt;/a&gt;. Amy defines herself as a &lt;em&gt;informally educated designer-turned-interface-developer who also programs (and writes, and speaks, and takes pretty pictures)&lt;/em&gt;. She’s also the co-creator of &lt;a href="http://twistori.com/"&gt;Twistori&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;&lt;img src="/assets/2008/5/21/amy.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Hot on the heels of last week’s &lt;a href="http://prototypejs.org/2008/5/14/an-interview-with-sergio-pereira"&gt;interview with Sergio Pereira&lt;/a&gt;, we were lucky enough to catch up with &lt;a href="http://slash7.com"&gt;Amy Hoy&lt;/a&gt;. Amy defines herself as a &lt;em&gt;informally educated designer-turned-interface-developer who also programs (and writes, and speaks, and takes pretty pictures)&lt;/em&gt;. She’s also the co-creator of &lt;a href="http://twistori.com/"&gt;Twistori&lt;/a&gt;.&lt;/p&gt;
&lt;p class="question"&gt;&lt;b&gt;Amy, you’ve been involved in both the Prototype/&lt;a href="http://script.aculo.us"&gt;script.aculo.us&lt;/a&gt; and &lt;a href="http://www.rubyonrails.org/"&gt;Ruby on Rails&lt;/a&gt; communities since their inception. What was your background? What brought you there?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;Amy Hoy:&lt;/span&gt; I admit it — I was a professional &lt;a href="http://www.php.net/" title="PHP: Hypertext Preprocessor"&gt;PHP&lt;/a&gt; developer. I started out doing freelance design as a teenager but got tired of relying on other people to do the implementation (and quickly realized the lack of respect towards design in general). I’d dabbled in programming since a kid, but PHP was the first language I’d learned fully. I think it was a good start because it required so little to begin and see immediate results.&lt;/p&gt;

&lt;p&gt;I had found out about &lt;a href="http://basecamphq.com/"&gt;Basecamp&lt;/a&gt; from a designer’s community I was part of, waaay back when it was in beta testing. It really stood out in my mind. Later, somebody else posted about this thing they used to build Basecamp, so of course I was intrigued.&lt;/p&gt;

&lt;p&gt;I went to the old Ruby on Rails site (back around version 0.7), saw the code samples and fell head over heels. The sparse code really appealed to my designer’s nature and I was sure it would be a big hit with other people too. I’d been doing PHP long enough by that time that I was feeling the pain, and Ruby looked like an amazing solution to that pain.&lt;/p&gt;

&lt;p&gt;Somebody felt my pain! And it was awesome. I feel like this could be a meaty episode of Dr. Phil.&lt;/p&gt;

&lt;p&gt;Script.aculo.us I learned about through Rails, and naturally it appealed to me because of all the visual possibilities.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;Although you’re not teaching JavaScript &lt;i&gt;per se&lt;/i&gt;, you’ve always been inclined in facilitating the learning process, whether it be through your &lt;a href="http://slash7.com/"&gt;blog&lt;/a&gt;, &lt;a href="http://slash7.com/articles/2006/7/26/javascript-boot-camp-tutorial"&gt;presentations&lt;/a&gt; or &lt;a href="http://slash7.com/cheats/scriptaculous_fx1.pdf"&gt;cheat-sheets&lt;/a&gt;. What’s with that?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;AH:&lt;/span&gt; I like to teach in general. I’d say the percentage of “educational” content on my blog hovers around the 80-85% mark. I’ve had a number of teachers who changed my life, but none of them were what you’d traditionally call teachers — they were authors, mentors, speakers, and so on. I really enjoy being able to do that for other people, and I definitely get off on the intellectual challenge of figuring out the best methods to get my readers/attendees to that “aha!” moment. &lt;/p&gt;

&lt;p&gt;And Javascript, well. JavaScript is a really painful subject to learn from scratch. &lt;/p&gt;

&lt;p&gt;Most of the online articles and books either focus on a poor choice of topics (or simply embody bad practices), or leave you hanging by not explaining the whole language, the DOM, events, etc. Or they’re purely references and leave it to you to piece together the whole picture. Or the window they give you into the subject is so narrow as to be useless.&lt;/p&gt;

&lt;p&gt;Me, I got dropped suddenly into the JavaScript world in order to build something I’d designed at a former employer. I started knowing almost nothing (and all of it bad). This was back before Prototype had any documentation. I learned a lot reading the tests but it was slow going.&lt;/p&gt;

&lt;p&gt;While the whole experience was ultimately exhilarating, the lack of good learning sources meant it was also hair-tearingly frustrating. So I set out to make some.&lt;/p&gt;

&lt;p&gt;I can say from experience that it takes a lot of hard work and analysis to create a truly great tech education resource. And traditional book publishers don’t pay well for the effort, either. It’s not at all surprising that there’s no One True Source. &lt;/p&gt;

&lt;p&gt;But… my script.aculo.us cheat sheet has been downloaded over 500,000 times. Clearly I’m not the only one who sees a problem. &lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;In the same vein, you’ve teamed-up with &lt;a href="http://script.aculo.us/thomas/"&gt;Thomas Fuchs&lt;/a&gt; (creator of script.aculo.us and Prototype Core committer) to write an ebook on JavaScript “basics”.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;AH:&lt;/span&gt; Yeah. I wouldn’t call it “basics,” but we are writing about JavaScript: The Language not just JavaScript: Here’s How You Use This Framework. Real, pure JS language skills are very hard to come by these days and that is one of the areas where existing books, etc., really fall down. A lot of people find themselves hamstrung because they’ve started using some framework or toolkit, and when they need to work around it, they realize they don’t know enough JavaScript to do so. (Sound familiar, Ruby/Rails people?)&lt;/p&gt;

&lt;p&gt;We’re working on the mini-book now. It should be out sometime in August, and weigh in at around 50-70 pages. It’s well-designed with every page laid out by hand… we want it to be something you really enjoy reading, not just another tech book. &lt;/p&gt;

&lt;p&gt;If people do like it, we’ll continue the series: the DOM, effects, compatibility, the works. &lt;/p&gt;

&lt;p&gt;&lt;img title="Amy Hoy and Thomas Fuchs" src="/assets/2008/5/22/amy_thomas_3_1.jpg" alt="Amy and Thomas" /&gt;&lt;/p&gt;

&lt;p&gt;There’s a real hunger for this kind of content, I think. My JavaScript Boot Camp tutorial (3 hours) at OSCON a couple summers ago was completely packed. The premise was basically “you’re using the frameworks and the libraries, don’t you think you should understand the language?”. Only Dave Thomas’ Ruby tutorial had more people. I was definitely not “a name” at that point and I was just a little bit surprised. &lt;/p&gt;

&lt;p&gt;And last year, I did a shorter talk on Object#prototype and Prototype, and that was very well-attended too.&lt;/p&gt;

&lt;p&gt;So the need was there two years ago and I’m convinced that it’s still here. &lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;You &lt;a href="http://www.slash7.com/articles/2007/11/30/speaking-of-doing-things-differently"&gt;recently mentioned&lt;/a&gt; finding API docs “almost universally frustrating”, and looking into new, somewhat self-reflexive solutions for documentation. Can you elaborate?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;AH:&lt;/span&gt; Without turning this into a whinefest? Certainly!&lt;/p&gt;

&lt;p&gt;Having great API docs is one of the best ways that people can promote the usage of their open source projects. I, for one, use the prototypejs.org site constantly when working in JavaScript. &lt;/p&gt;

&lt;p&gt;But API docs are best for people who are in a final-ish stage of the learning cycle. They’re most useful when you already know what you’re looking for. They’re not for getting started, even if they have a couple pages about getting started. And they lack immediacy. They are, by nature, reference documents.&lt;/p&gt;

&lt;p&gt;So, given those arguments… how could we make something better? I’d been thinking about this a lot and one night over a couple of beers in Vienna, Thomas and I came up with explain(). &lt;/p&gt;

&lt;p&gt;It’s still under development, but the basic idea is that you’ll be able to call the &lt;code&gt;explain()&lt;/code&gt; function on any Script.aculo.us effect and it will pop up a floating DIV right there with information on how to use the method, its options, etc., even examples. This way you can get your information fix immediately while programming, without having to lose your focus navigating the API docs or the wiki. And, as far as I know, it’s something that hasn’t been done before.&lt;/p&gt;

&lt;p&gt;This of course will be an add-on for development, not something that would be deployed in the standard package. &lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;You also seem to practice thinking outside the box in your own work. &lt;a href="http://twistori.com"&gt;Twistori&lt;/a&gt;, which you’ve just released in collaboration with Thomas Fuchs, is a great example of that. Other than being immediately distinguishable by its stunning looks, it’s not your average mash-up.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;AH:&lt;/span&gt; Thanks.&lt;/p&gt;

&lt;p&gt;We’ve both been doing a lot of intranet and corporate software and the morning I decided I had to ship something, I think we were both about to pop with creative frustration.&lt;/p&gt;

&lt;p&gt;Twistori is different from most mashups because it takes the Twitter data and extracts meaning from it. Not technical meaning, not data, but human, emotional meaning that we can connect to. When you’re reading this stream of hopes, loves, hates, thoughts, etc., it’s kind of hypnotizing because it’s a bit like voyeurism, and a bit like &lt;a href="http://postsecret.blogspot.com/" title="PostSecret"&gt;PostSecret&lt;/a&gt;, and a lot like the normal, everyday cacophony of life. &lt;/p&gt;

&lt;p&gt;&lt;img title="Twistori screenshot" src="/assets/2008/5/21/twistori_1.png" alt="screenshot of Twistori" /&gt;&lt;/p&gt;

&lt;p&gt;Every choice in the design is intentional—the flow, the colors, the way the messages are formatted, the anonymity, and the lack of ability to “scroll back” when a message has gone by. This all contributes to the effect of what one person called “the river of humanity.” &lt;/p&gt;

&lt;p&gt;Since I woke up one morning with the intense desire to build it that day, it is necessarily very sparse. I made it a challenge to have no graphics. I did the design, he breathed life into it; it was a perfect collaboration. Thomas and I put maybe a total of 8 hours into it before we launched it — with a single tweet each. Then it exploded! &lt;/p&gt;

&lt;p&gt;I knew people would love it, but I wasn’t expecting it to explode the way it has with just two tweets. I expected to have to do a little more work promoting it than that! And we were planning to do revisions before the “big debut,” too. But that’s how it goes.&lt;/p&gt;

&lt;p&gt;I think the biggest lesson there is that humans don’t really change with technology. We still seek connections, and we are still voyeuristic and interested in other people, and if you can make design decisions with that in mind, people will be affected by your work.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;Anything else you’d like to add?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;AH:&lt;/span&gt; I like to dabble. A lot. In everything! I like to figure out where the pain’s coming from and try to fix it, and surprisingly, it tends to work out.&lt;/p&gt;

&lt;p&gt;Also: JavaScript is really going places. Even though the Ajax buzz has worn off and the business magazine writers are now bored, JavaScript web dev is far from static. It’s still very much the wild west, even if it doesn’t seem like it to those of us who’ve been in this thing for the past few years (or longer).&lt;/p&gt;

&lt;p&gt;Lots of really unbelievable things are coming out now (like John Resig’s &lt;a href="http://ejohn.org/blog/processingjs/"&gt;processing.js&lt;/a&gt; and &lt;a href="http://github.com/madrobby/scripty2/tree/master"&gt;script.aculo.us 2.0&lt;/a&gt;) and it’s not likely to stop any time soon. Things are going to get even better. I’m really excited to be a part of it.&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=1mWFo"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=1mWFo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=lM0qO"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=lM0qO" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/5/21/an-interview-with-amy-hoy</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Tobie</name>
    </author>
    <id>tag:prototypejs.org,2008-05-14:20684</id>
    <published>2008-05-14T01:59:00Z</published>
    <updated>2008-05-22T02:04:16Z</updated>
    <category term="blog" />
    <category term="Interviews" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/289848731/an-interview-with-sergio-pereira" rel="alternate" type="text/html" />
    <title>An Interview with Sergio Pereira</title>
<summary type="html">&lt;p&gt;&lt;img src="http://prototypejs.org/assets/2008/5/11/sergio_small.jpg" /&gt;
Last week, we launched a &lt;a href="http://www.linkedin.com/e/gis/99273/13A82A188D9E"&gt;Prototype Linkedin group&lt;/a&gt;, which, as of this writing, has more than 300 members. This was the occasion to get back in touch with a lot of people from the Prototype community, and to launch a project we’ve had in mind for a long time: regular interviews of developers and designers working with Prototype.&lt;/p&gt;

&lt;p&gt;Today’s interviewee is &lt;a href="http://devlicio.us/blogs/sergio_pereira/"&gt;Sergio Pereira&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;&lt;img src="http://prototypejs.org/assets/2008/5/11/sergio_small.jpg" /&gt;
Last week, we launched a &lt;a href="http://www.linkedin.com/e/gis/99273/13A82A188D9E"&gt;Prototype Linkedin group&lt;/a&gt;, which, as of this writing, has more than 300 members. This was the occasion to get back in touch with a lot of people from the Prototype community, and to launch a project we’ve had in mind for a long time: regular interviews of developers and designers working with Prototype.&lt;/p&gt;

&lt;p&gt;Today’s interviewee is &lt;a href="http://devlicio.us/blogs/sergio_pereira/"&gt;Sergio Pereira&lt;/a&gt;.&lt;/p&gt;
&lt;p class="question"&gt;&lt;b&gt;Your name is familiar to most early adopters of Prototype, but recent passengers on the Prototype bandwagon might not know you. Could you please introduce yourself?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;Sergio Pereira:&lt;/span&gt; Sure. I’m a software developer that has been paid to do that since 1997. Web development became the majority of my work in 2000 and that’s how things have been ever since. I have done some ASP classic, a ton of ASP.NET, some Ruby on Rails, and a tiny bit of PHP. ASP.NET still pays my bills, but I feel like RoR may be in my future.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;When Prototype was still in its infancy, you were the first to document it. What was your motivation? What did you learn from it?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;SP:&lt;/span&gt; A friend of mine pointed me to the old Protoype page and, after perusing its source code, I asked the obvious two questions: “Is this really JavaScript?” and “What’s in this library?” I decided to take some time to study and understand the code. I knew I was not the only one that had a very superficial understanding of JavaScript, so I decided to take notes while I dissected that code and these notes became two different documents: &lt;a href="http://www.sergiopereira.com/articles/prototype131.js.html"&gt;Developer Notes for prototype.js&lt;/a&gt; and &lt;a href="http://www.sergiopereira.com/articles/advjs.html"&gt;Quick guide to somewhat advanced JavaScript&lt;/a&gt;. I also helped that I was learning Ruby and RoR at the same time and I benefited a lot from writing those docs. I still get a lot of hits and some emails about the articles. I hope they’ve helped somehow.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;Most of your work involves .NET. While we were preparing this interview, you mentioned witnessing a lot of changes in the .NET landscape, notably with the introduction of &lt;a href="http://www.asp.net/mvc/"&gt;ASP.NET MVC&lt;/a&gt;. Can you tell us a bit more about this and how it affects Prototype?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;SP:&lt;/span&gt; ASP.NET development, traditionally, involves less HTML and JavaScript manipulation than, say, PHP and RoR. That’s not necessarily bad. It’s actually viewed as a good thing by most ASP.NET developers. Do you want a table with AJAX-ified sorting, pagination, in-place editing, etc? No big deal, just drag one from your toolbox on the design surface of your page and bind it to the data source and there you have it.&lt;/p&gt;

&lt;p&gt;As TDD [Test-Driven Development] started to get greater adoption in .NET, the cracks in this style of development became apparent. Testing ASP.NET pages (the so called webforms) in isolation is impossible — or, at least, hard enough to become impractical. The Rails-inspired &lt;a href="http://www.castleproject.org/monorail/"&gt;Castle MonoRail&lt;/a&gt; project gave us a glimpse at how to properly structure a web development framework to support separation-of-concerns and inherently enable TDD.&lt;/p&gt;

&lt;p&gt;In October of 2007 Microsoft revealed that they would be offering a similar solution in ASP.NET as an alternative to the existing webforms style. This alternative is called ASP.NET MVC. The creation of a view in ASP.NET MVC is closer to that of &lt;a href="http://www.ruby-doc.org/stdlib/libdoc/erb/rdoc/"&gt;ERB&lt;/a&gt;, where you define your UI much closer to the HTML than in webforms. That implies abandoning a lot of the pre-packaged components that we have in webforms and looking at alternative ways to get the same things done.&lt;/p&gt;

&lt;p&gt;That’s where all these new JavaScript client libraries are becoming popular with ASP.NET developers. ASP.NET developers will soon go through the process of picking up a JavaScript library and adopting it as their company standard. Prototype and its surrounding ecosystem will undoubtedly be one of the most popular choices.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;You’re mostly building applications for use on corporate intranets. How are you using Prototype in that context?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;SP:&lt;/span&gt; Coinciding with my interest in Prototype in the last few years, corporate development has also started to demand richer, more productive UIs. I remember seeing the surprise in some of my users’ faces when they saw an InPlaceEditor from &lt;a href="http://script.aculo.us/"&gt;script.aculo.us&lt;/a&gt; and all the instant feedback provided by the use of &lt;a href="http://www.prototypejs.org/api/ajax/request"&gt;Ajax.Request&lt;/a&gt; and &lt;a href="http://www.prototypejs.org/api/ajax/updater"&gt;Ajax.Updater&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For me, what I like the most in Prototype is how well it lends itself to building your own libraries. I was able to create my own business-specific libraries on top of Prototype with a lot of clarity and extensibility. And all that was at least one full year before Microsoft had their own AJAX support for ASP.NET officially available.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;Can you elaborate on the libraries you’ve built on top of Prototype? Maybe share some techniques, patterns or concepts?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;SP:&lt;/span&gt; For example, I was able to create UI classes (presenters if you will) that would bind to DOM elements and extend them with new behaviors, much like Draggables and InPlaceEditor do in script.aculo.us. In my case I created drop-down calendars and Ajax table paginators. I could extend &lt;code&gt;Ajax.Request&lt;/code&gt; to detect session expiration and handle its unexpected server redirect.&lt;/p&gt;

&lt;p&gt;I also added some more methods to &lt;code&gt;Element.Methods&lt;/code&gt; that at the time (v1.4 or v1.5) I thought were useful, like:&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;Element#findParent('table');
Element#append('a', { href: 'page.html', className: 'navLink' });
Element#purgeChildren();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A lot of what I have written is now obsolete with v1.6 and that’s great. I can’t wait to finish the migration to 1.6 and reduce my code surface.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;Any other tips you’d like to share?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;SP:&lt;/span&gt; I don’t have any earth-shattering tips, but I am an advocate of &lt;a href="http://c2.com/cgi/wiki?SharpenTheSaw"&gt;Sharpening the Saw&lt;/a&gt; and becoming proficient in more than one language or platform. Basically try not to become content with the status quo.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;You’re also writing training material for JavaScript classes. One of your forthcoming courses will be entitled &lt;cite&gt;Advanced JavaScript with Prototype and script.aculo.us&lt;/cite&gt;. What are the things you emphasize the most in these courses? Which areas are the most troublesome?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;SP:&lt;/span&gt; The main problem with developers trying to use JavaScript, in my opinion, is the tendency to compare JavaScript to Java or C# just because some of the most trivial constructs are similar. JavaScript is fundamentally different from these two languages. For many developers JavaScript is the only dynamic language and the only prototypal-inheritance language they work with — and most of the time they don’t even know what that means and why they should care. I also try to make sure we talk about treating your JavaScript code with the same attitude as your server-side code: documentation, unit testing, organization, coding standards, etc.&lt;/p&gt;

&lt;p class="question"&gt;&lt;b&gt;Anything you’d like to add?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="interviewee"&gt;SP:&lt;/span&gt; I’d like to leave a special message for any .NET developer reading this. Please don’t constrain your development to what comes bundled with Visual Studio or is downloadable from MSDN. Take a look at all the flourishing open-source projects out there. Check out &lt;a href="http://altnetpedia.com/"&gt;ALT.NET&lt;/a&gt; when you have a chance.&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=9uXAo"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=9uXAo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=FlbwO"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=FlbwO" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/5/14/an-interview-with-sergio-pereira</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Tobie</name>
    </author>
    <id>tag:prototypejs.org,2008-05-06:20663</id>
    <published>2008-05-06T10:54:00Z</published>
    <updated>2008-05-06T16:05:09Z</updated>
    <category term="blog" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/284567550/prototype-linkedin-group" rel="alternate" type="text/html" />
    <title>Prototype Linkedin Group</title>
<summary type="html">&lt;p&gt;The Prototype community now has its own group on &lt;a href="http://linkedin.com"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It’s a great opportunity to connect with other developers and designers who are using Prototype in their daily work, get to know them better, and put a face next to the names you see daily in the mailing lists or on IRC.&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;The Prototype community now has its own group on &lt;a href="http://linkedin.com"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It’s a great opportunity to connect with other developers and designers who are using Prototype in their daily work, get to know them better, and put a face next to the names you see daily in the mailing lists or on IRC.&lt;/p&gt;
&lt;p&gt;The group’s been up for a little under 24hrs and I already discovered voices in our community I wasn’t aware of (For instance, check out Jason Harwig’s &lt;a href="http://www.nearinfinity.com/blogs/page/jharwig?entry=javascript_security_slides_from_no"&gt;slides on JavaScript security&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Joining is as easy as following this link (Note: LinkedIn asks that members be manually approved, I’ll try to process your joining requests as fast as possible):&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.linkedin.com/e/gis/99273/13A82A188D9E"&gt;http://www.linkedin.com/e/gis/99273/13A82A188D9E&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don’t forget to add your blog or personal website to your profile, it’s a lot more fun.&lt;/p&gt;

&lt;p&gt;Looking forward to see you there.&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=IlR3o"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=IlR3o" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=JzWZO"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=JzWZO" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/5/6/prototype-linkedin-group</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Tobie</name>
    </author>
    <id>tag:prototypejs.org,2008-05-05:20662</id>
    <published>2008-05-05T23:05:00Z</published>
    <updated>2008-05-06T00:08:14Z</updated>
    <category term="blog" />
    <category term="Featured" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/284275186/ajax-pioneer-week-on-ajaxian" rel="alternate" type="text/html" />
    <title>Ajax Pioneer Week on Ajaxian</title>
<summary type="html">&lt;p&gt;Dion Almaer just &lt;a href="http://ajaxian.com/archives/ajax-pioneer-week-sam-stephenson-of-prototype"&gt;posted on Ajaxian&lt;/a&gt; an interview of Prototype creator Sam Stephenson – the first of a series on Ajax pioneers.&lt;/p&gt;

&lt;p&gt;Sam talks about the future of Prototype, shares his thoughts on the current state of browsers, and discusses some of the upcoming tools we’re busy working on (PDoc, Sprockets, etc.).&lt;/p&gt;

&lt;p&gt;So, without further ado:&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;Dion Almaer just &lt;a href="http://ajaxian.com/archives/ajax-pioneer-week-sam-stephenson-of-prototype"&gt;posted on Ajaxian&lt;/a&gt; an interview of Prototype creator Sam Stephenson – the first of a series on Ajax pioneers.&lt;/p&gt;

&lt;p&gt;Sam talks about the future of Prototype, shares his thoughts on the current state of browsers, and discusses some of the upcoming tools we’re busy working on (PDoc, Sprockets, etc.).&lt;/p&gt;

&lt;p&gt;So, without further ado:&lt;/p&gt;
&lt;p&gt;&amp;lt;object type="application/x-shockwave-flash" height="377" data="http://www.vimeo.com/moogaloop.swf?clip_id=970809&amp;amp;server=www.vimeo.com&amp;amp;fullscreen=1&amp;amp;show_title=1&amp;amp;show_byline=0&amp;amp;show_portrait=0&amp;amp;color=00ADEF" width="500"&gt;   &amp;lt;param name="quality" value="best" /&gt;   &amp;lt;param name="allowfullscreen" value="true" /&gt;   &amp;lt;param name="scale" value="showAll" /&gt;  &amp;lt;param name="movie" value="http://www.vimeo.com/moogaloop.swf?clip_id=970809&amp;amp;server=www.vimeo.com&amp;amp;fullscreen=1&amp;amp;show_title=1&amp;amp;show_byline=0&amp;amp;show_portrait=0&amp;amp;color=00ADEF" /&gt;&amp;lt;/object&gt;&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=0mtxo"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=0mtxo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=ov5sO"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=ov5sO" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/5/5/ajax-pioneer-week-on-ajaxian</feedburner:origLink></entry>
  <entry xml:base="http://prototypejs.org/">
    <author>
      <name>Andrew</name>
    </author>
    <id>tag:prototypejs.org,2008-02-12:18845</id>
    <published>2008-02-12T19:11:00Z</published>
    <updated>2008-02-13T04:42:18Z</updated>
    <category term="blog" />
    <link href="http://feeds.feedburner.com/~r/prototype-blog/~3/233918571/deprecation-js-easing-the-1-5-1-6-transition" rel="alternate" type="text/html" />
    <title>Deprecation.js: easing the 1.5 → 1.6 transition</title>
<summary type="html">&lt;p&gt;If you’ve put off the task of upgrading your old code to Prototype 1.6, now you’re out of excuses. Core team member Tobie Langel has developed a script that will warn you of any deprecations or API changes.&lt;/p&gt;</summary><content type="html">
            &lt;p&gt;If you’ve put off the task of upgrading your old code to Prototype 1.6, now you’re out of excuses. Core team member Tobie Langel has developed a script that will warn you of any deprecations or API changes.&lt;/p&gt;
&lt;p&gt;The script is meant to be used with Firebug, so it’s Firefox-only — but when you’re done, your code will be ready for use alongside Prototype 1.6 &lt;em&gt;in all browsers&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/2008/2/12/console1_1.png" alt="deprecation.js screenshot" /&gt;&lt;/p&gt;

&lt;p&gt;Using the script is easy. To migrate a page from 1.5 to 1.6:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Find the &lt;code&gt;script&lt;/code&gt; tag that references &lt;code&gt;prototype.js&lt;/code&gt;. Change the path to point to the 1.6.0.2 version (or else overwrite the existing &lt;code&gt;prototype.js&lt;/code&gt; with the new version).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;On the very next line&lt;/em&gt;, add a &lt;code&gt;script&lt;/code&gt; tag that references &lt;code&gt;deprecation.js&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;Develop your app as normal.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When your code calls a method that’s been deprecated, replaced, or modified, the script will log a warning or error to your Firebug console. Clicking its hyperlink will take you to the deprecation script itself, which isn’t all that helpful; but the message &lt;em&gt;itself&lt;/em&gt; will contain a stack trace that points to the source of the error.&lt;/p&gt;

&lt;p&gt;Naturally, the console errors are the most important to address, since they represent things that will &lt;em&gt;no longer work&lt;/em&gt; in 1.6. The warnings represent deprecations — things that still work in 1.6, but are not guarateed to work in &lt;em&gt;future&lt;/em&gt; versions of Prototype. If you’d like to see only removal notices, you can set a property in your code to turn off deprecations:&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;DeprecationNotifier.logDeprecation = false;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you address these errors and warnings, they’ll go away. When there are no more errors, your code is compatible with 1.6. When there are no more warnings, your code is nimble and future-proof.&lt;/p&gt;

&lt;p&gt;&lt;a href="/assets/2008/2/12/deprecation.js"&gt;Download the deprecation script&lt;/a&gt;.&lt;/p&gt;
          &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=wy6xl"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=wy6xl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/prototype-blog?a=sZwIL"&gt;&lt;img src="http://feeds.feedburner.com/~f/prototype-blog?i=sZwIL" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>  <feedburner:origLink>http://prototypejs.org/2008/2/12/deprecation-js-easing-the-1-5-1-6-transition</feedburner:origLink></entry>
</feed>
